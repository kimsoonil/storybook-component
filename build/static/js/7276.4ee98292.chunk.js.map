{"version":3,"file":"static/js/7276.4ee98292.chunk.js","mappings":"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","sources":["components/idist/admin/JButton.js","views/Admin/ReportsSetting/index.js"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\n// import PropTypes from 'prop-types';\nimport 'assets/scss/component/jbutton.scss';\n\nfunction JButton({ label, color, children, outline, size, disabled, width, onClick, ...props }) {\n  const rootClassName = 'jg-button';\n  // const typeClassName = outline ? rootClassName + '-outline' : rootClassName + '-contain';\n  const typeClassName = outline ? 'outline' : 'contain';\n  const disabledClassName = disabled ? `${typeClassName}-disabled` : '-';\n\n  return (\n    <div\n      disabled={disabled}\n      style={{ ...(width && { width: `${width}px` }) }}\n      className={`${rootClassName} \n        ${rootClassName}-${size} \n        ${rootClassName}-${typeClassName}-${color} \n        ${rootClassName}-${disabledClassName}\n        `}\n      onClick={disabled ? () => {} : onClick}\n      onKeyDown={(e) => (e.key === 'Enter' && !disabled ? onClick(e) : {})}\n      tabIndex={0}\n      role=\"button\"\n      {...props}\n    >\n      {label || children}\n    </div>\n  );\n}\n\nexport default JButton;\n\n// JButton.propTypes = {\n//   color: PropTypes.oneOf(['primary', 'secondary', 'point', 'none']),\n//   label: PropTypes.string,\n//   children: PropTypes.element,\n//   outline: PropTypes.bool,\n//   size: PropTypes.oneOf(['s', 'm', 'l', 'xl']),\n//   disabled: PropTypes.bool,\n//   width: PropTypes.number\n// };\n\n// JButton.defaultProps = {\n//   color: 'primary',\n//   label: 'button',\n//   children: <div>button</div>,\n//   size: 'm',\n//   disabled: false,\n//   outline: false,\n//   width: 140\n// };\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'assets/scss/admin/reports.scss';\nimport {\n  getReportChoicesInit,\n  patchReportChoiceInit,\n  postReportChoiceInit\n} from 'redux/idistStore/admin/reportsSettingAdminSlice';\nimport JButton from 'components/idist/admin/JButton';\n\nfunction ReportsSetting() {\n  const dispatch = useDispatch();\n  const { id: clubId = -1 } = useSelector((state) => state.commonAdmin.club);\n  const rootClassName = useMemo(() => 'admin-reports-setting', []);\n  const [rcsTrigger, setRcsTrigger] = useState(0);\n  useEffect(() => {\n    dispatch(getReportChoicesInit({ id: clubId }));\n  }, [rcsTrigger]);\n\n  const reportChoicesRedux = useSelector((state) => state.reportsSettingAdmin.reportChoices);\n\n  const [reportChoices, setReportChoices] = useState([]);\n  useEffect(() => {\n    if (reportChoicesRedux[0]) {\n      setReportChoices(reportChoicesRedux);\n    }\n  }, [reportChoicesRedux]);\n  // const isChanged = useMemo(\n  //   () => JSON.stringify(reportChoices) === JSON.stringify(reportChoicesRedux),\n  //   [reportChoicesRedux, reportChoices]\n  // );\n\n  const [editingId, setEditingId] = useState(-1);\n\n  const [editTitle, setEditTitle] = useState('');\n  const [editContent, setEditContent] = useState('');\n\n  const [newTitle, setNewTitle] = useState('');\n  const [newContent, setNewContent] = useState('');\n\n  const isChanged = useMemo(\n    () => (editTitle && editContent) || (newTitle && newContent),\n    [editTitle, editContent, newTitle, newContent]\n  );\n\n  const addReportChoice = () => {\n    if (editingId > 0) {\n      if (!editTitle && !editContent) {\n        // confirm('title content 모두 입력해주세요');\n        return;\n      }\n      dispatch(patchReportChoiceInit({ id: editingId, data: { title: editTitle, content: editContent } }));\n      setTimeout(() => {\n        setRcsTrigger((prev) => prev + 1);\n        setEditingId(-1);\n      }, 100);\n    } else {\n      if (!newTitle && !newContent) {\n        // confirm('title content 모두 입력해주세요');\n        return;\n      }\n      dispatch(postReportChoiceInit({ id: clubId, data: { title: newTitle, content: newContent } }));\n      setTimeout(() => {\n        setRcsTrigger((prev) => prev + 1);\n      }, 100);\n    }\n  };\n\n  const onClickEdit = (reportChoice) => {\n    if (editingId > -1) {\n      // confirm('수정 중인 다른 작업을 완료해주세요');\n      return;\n    }\n    setEditingId(reportChoice.id);\n  };\n\n  const onClickActivation = (reportChoice) => {\n    dispatch(patchReportChoiceInit({ id: reportChoice.id, data: { is_active: !reportChoice.is_active } }));\n  };\n\n  return (\n    <div className={`${rootClassName}`}>\n      <div className={`${rootClassName}-container`}>\n        <div className={`${rootClassName}-choices-container`}>\n          {reportChoices.map((reportChoiceItem, reportChoiceIndex) => {\n            const key = `report${reportChoiceIndex}`;\n            return (\n              // console.log(reportChoiceItem);\n              <div className={`${rootClassName}-choice-item-container`} key={key}>\n                {reportChoiceItem.id === editingId ? (\n                  <div className={`${rootClassName}-choice-input-container`}>\n                    <input type=\"text\" value={editTitle} onChange={(e) => setEditTitle(e.target.value)} />\n                    <textarea value={editContent} onChange={(e) => setEditContent(e.target.value)} />\n                  </div>\n                ) : (\n                  <>\n                    <div className={`${rootClassName}-choice-item-title`}>\n                      {reportChoiceItem.is_active ? '활성화' : '비활성화'}\n                    </div>\n                    <div className={`${rootClassName}-choice-item-title`}> {reportChoiceItem.title}</div>\n                    <div className={`${rootClassName}-choice-item-content`}> {reportChoiceItem.content}</div>\n                    <div style={{ gap: '10px' }}>\n                      <JButton label=\"활성화/비활성화\" onClick={() => onClickActivation(reportChoiceItem)} />\n                      <JButton label=\"수정\" onClick={() => onClickEdit(reportChoiceItem)} />\n                    </div>\n                  </>\n                )}\n              </div>\n            );\n          })}\n        </div>\n\n        <div className={`${rootClassName}-choice-input-container`}>\n          <input type=\"text\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\n          <textarea value={newContent} onChange={(e) => setNewContent(e.target.value)} />\n        </div>\n\n        <div className={`${rootClassName}-submit-container`}>\n          <div style={{ gap: '10px' }}>\n            <JButton label=\"reset\" onClick={() => console.log('reset')} />\n            <JButton label=\"save\" disabled={!isChanged} onClick={() => addReportChoice({ id: clubId })} />\n            {/* <JButton label={'수정'} /> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ReportsSetting;\n"],"names":["label","color","children","outline","size","disabled","width","onClick","props","rootClassName","typeClassName","disabledClassName","style","className","onKeyDown","e","key","tabIndex","role","dispatch","useDispatch","useSelector","state","commonAdmin","club","id","clubId","useMemo","useState","rcsTrigger","setRcsTrigger","useEffect","getReportChoicesInit","reportChoicesRedux","reportsSettingAdmin","reportChoices","setReportChoices","editingId","setEditingId","editTitle","setEditTitle","editContent","setEditContent","newTitle","setNewTitle","newContent","setNewContent","isChanged","map","reportChoiceItem","reportChoiceIndex","type","value","onChange","target","is_active","title","content","gap","reportChoice","patchReportChoiceInit","data","console","log","setTimeout","prev","postReportChoiceInit","addReportChoice"],"sourceRoot":""}