{"version":3,"file":"static/js/65.0c3bccef.chunk.js","mappings":"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","sources":["components/Forum/Home/BoardList/BoardItem.jsx","components/Forum/Home/BoardList/BoardList.jsx","components/Forum/SideBanner/HistoryBanner.jsx","components/Forum/Home/ForumRanking/RankingSlide.jsx","components/Forum/Home/ForumRanking/ForumDetail.jsx","components/Forum/Home/ForumRanking/PostList.jsx","components/Forum/Home/ForumRanking/ForumRanking.jsx","components/Forum/Home/ForumSummarySlide.jsx","components/Forum/SideBanner/CreateForumBanner.jsx","components/Forum/SideBanner/SideImgBanner.jsx","components/Forum/SideBanner/NewForums.jsx","components/Forum/SideBanner/TodaysForum.jsx","components/Forum/AllForum/AllForum.jsx","components/Forum/Home/TempSlide.jsx","components/Forum/Home/Home.jsx","components/Forum/Create/Info.jsx","components/Forum/SideBanner/ForumCategoryBanner.jsx","components/Forum/Create/CropImg2.jsx","components/Forum/Create/Create.jsx","components/Forum/ForumTop.jsx","components/Forum/Create/AddedList.jsx","components/Forum/SideBanner/WriteBtn.jsx","components/Forum/Create/ModalBanWord.jsx","components/Forum/Create/Edit.jsx","components/Forum/Create/InitSetting.jsx","components/Forum/Theme/BestPost2.jsx","components/Forum/SideBanner/Top5Forums.jsx","components/Forum/Theme/Item.jsx","components/Forum/Theme/List.jsx","components/Forum/Theme/Theme.jsx","components/Forum/Post/index.js","components/Forum/ForumWriting.js","components/Forum/Theme/TransferAuth.jsx","components/Forum/index.js","components/idist/popup/AlertPopup.js","components/idist/popup/tempPopup.js","components/common/Writing.js","components/common/footer/Footer.jsx","components/idist/ToggleBtn.js"],"sourcesContent":["/* eslint-disable camelcase */\nimport React from 'react';\nimport { useNavigate } from 'react-router';\n\nfunction BoardItem({ info }) {\n  const { title, description, thumbnail_image, id } = info;\n  const navigate = useNavigate();\n  return (\n    <li onClick={() => navigate(`/forum/${id}/theme`)} aria-hidden>\n      <dl>\n        <dt>\n          <div className=\"badge\">\n            {Math.floor(Math.random() * 2) === 1 && <span className=\"forum_badge new\" />}\n            {Math.floor(Math.random() * 2) === 1 && <span className=\"forum_badge excellent\" />}\n            {Math.floor(Math.random() * 2) === 1 && <span className=\"forum_badge best_live_simple\" />}\n            {Math.floor(Math.random() * 2) === 1 && <span className=\"forum_badge recommend_forum\" />}\n          </div>\n          <div className=\"badge_over\" />\n          <img src={thumbnail_image} alt=\"\" />\n        </dt>\n        <dd className=\"simul_title\">{title}</dd>\n        <dd className=\"simul_text\">{description}</dd>\n      </dl>\n    </li>\n  );\n}\n\nexport default BoardItem;\n","/* eslint-disable camelcase */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reqAllForumList } from 'redux/store/forum/forumListSlice';\nimport { addComma } from 'util/common';\nimport BoardItem from './BoardItem';\n\nfunction BoardList({ title, category, forum_count, post_count, comment_count, setIsAllForum }) {\n  const { forumCategoryList } = useSelector((state) => ({ ...state.forumList }));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(reqAllForumList({ forum_category: category, page_size: 8 }));\n  }, []);\n\n  return (\n    <div className=\"board_list\">\n      <div className=\"content_subtitle\">\n        <h4 className=\"h4Type eng\">{title}</h4>\n        <div className=\"btn_right_align\">\n          <div className=\"count_group\">\n            <span className=\"forum_count\">{addComma(forum_count)}</span>\n            <span className=\"post_count\">{addComma(post_count)}</span>\n            <span className=\"comment_count\">{addComma(comment_count)}</span>\n          </div>\n          <div className=\"title_menu\">\n            <button type=\"button\" className=\"text_btn\" onClick={() => setIsAllForum(true)}>\n              <span>See all</span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <ul className=\"board_thum\">\n        {forumCategoryList[category]?.map((item) => (\n          <BoardItem info={item} key={item.id} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default BoardList;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport classNames from 'classnames';\n// import { useTranslation } from 'react-i18next';\nimport { checkLogin } from 'util/common';\nimport { reset, delLogOutHistory } from 'redux/store/forum/forumHistorySlice';\nimport { reqForumBookMarkedList } from 'redux/store/forum/forumBookmarkedSlice';\n// import { updateForumInfo } from 'redux/store/forum/forumInfoSlice';\nimport { reqForumUnpin } from 'redux/store/forum/forumBookmarkSlice';\n\nfunction NoRecentVisitedForum({ strHistory }) {\n  return (\n    <div className=\"no_recent\">\n      <span>{strHistory}</span>\n    </div>\n  );\n}\n\nfunction NoBookmarkedForum({ strHistory, navigate, isLogin }) {\n  return (\n    <div className=\"no_bookmark\">\n      {/* Please login first to view\n      <br />\n      bookmarked forums.\n      <br /> */}\n      {strHistory}\n      {!isLogin && (\n        <button type=\"button\" className=\"btn primary_line\" onClick={() => navigate('/login')}>\n          <span>Login</span>\n        </button>\n      )}\n    </div>\n  );\n}\n\nfunction HistoryBanner() {\n  const isLogin = checkLogin();\n  const { history } = useSelector((state) => ({ ...state.forumHistory }));\n  const { bookMarkedList } = useSelector((state) => ({ ...state.forumBookMarkedList }));\n  const { isActive, isSuccess } = useSelector((state) => ({ ...state.forumPin }));\n  const [strHistory, setStrHistroy] = useState('');\n  const [arrHistory, setArrHistroy] = useState(isLogin ? bookMarkedList : history);\n  const [menu, setMenu] = useState(isLogin);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  // const { t } = useTranslation();\n\n  const onDelete = (forumId) => {\n    console.log('HistoryBanner', forumId);\n\n    if (isLogin) dispatch(reqForumUnpin(forumId));\n    else dispatch(delLogOutHistory(forumId));\n  };\n\n  let strNohistory = '';\n  useEffect(() => {\n    if (arrHistory?.length > 0) return;\n\n    if (isLogin) {\n      // strNohistory = t('label.forum.history.login.nobookmarked');\n      strNohistory = 'There are no bookmarked forums.';\n    } else {\n      // strNohistory = arrHistory?.length === 0 && t('label.forum.history.logout.bookmark');\n      strNohistory = arrHistory?.length === 0 && 'There are no recently visited forums';\n    }\n    setStrHistroy(strNohistory);\n  }, [arrHistory]);\n\n  useEffect(() => {\n    const tmpHistory = menu ? bookMarkedList : history;\n    setArrHistroy(tmpHistory);\n  }, [bookMarkedList, history, menu]);\n\n  useEffect(() => {\n    dispatch(reqForumBookMarkedList({ is_pined: 'true' }));\n  }, []);\n\n  useEffect(() => {\n    if (isSuccess && isActive === false) dispatch(reqForumBookMarkedList({ is_pined: 'true' }));\n  }, [isSuccess]);\n\n  return (\n    <div className=\"history\">\n      <div className=\"content_subtitle\">\n        <h4 className=\"h4Type eng\">History</h4>\n        <div className=\"title_menu\" style={{ display: history?.length > 0 ? 'block' : 'none' }}>\n          <button type=\"button\" className=\"hover text_btn\" onClick={() => dispatch(reset())}>\n            <span>All delete</span>\n          </button>\n        </div>\n      </div>\n      <div className=\"tabs\">\n        <div className=\"tabs_menu size_sm\">\n          <button type=\"button\" className={classNames({ active: !menu })} onClick={() => setMenu(false)}>\n            <span>Recent Visit</span>\n          </button>\n          <button\n            type=\"button\"\n            className={classNames({ active: menu })}\n            onClick={() => (isLogin ? setMenu(true) : navigate('/login'))}\n          >\n            <span>Bookmarked Forum</span>\n          </button>\n        </div>\n        <div className=\"tabs_con\">\n          {history?.length === 0 && !menu && <NoRecentVisitedForum strHistory={strHistory} />}\n          {bookMarkedList?.length === 0 && isLogin && (\n            <NoBookmarkedForum strHistory={strHistory} navigate={navigate} isLogin={isLogin} />\n          )}\n          <ul>\n            {arrHistory?.length > 0 &&\n              arrHistory?.map((item) => (\n                <li key={item.id}>\n                  <div className=\"forum_info\">\n                    <span className=\"forum_logo\" />\n                    <button type=\"button\" className=\"forum_name\" onClick={() => navigate(`/forum/${item.id}/theme`)}>\n                      <span>{item.title}</span>\n                    </button>\n                  </div>\n                  <button type=\"button\" className=\"close\" onClick={() => onDelete(item.id)}>\n                    <span className=\"a11y\">삭제</span>\n                  </button>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HistoryBanner;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport Slider from 'react-slick';\n\nfunction NextArrow(props) {\n  const { setTEST } = props;\n  return (\n    <div className={`${!setTEST ? 'hide' : ''}`}>\n      <button\n        type=\"button\"\n        className=\"swiper_button right\"\n        onClick={() => {\n          console.log('test1');\n        }}\n      >\n        <span className=\"a11y\">우측으로</span>\n      </button>\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { onClick } = props;\n  return (\n    <div className={`${!onClick ? 'hide' : ''}`}>\n      <button\n        type=\"button\"\n        className=\"swiper_button left\"\n        onClick={() => {\n          onClick();\n          console.log('test2');\n        }}\n      >\n        <span className=\"a11y\">좌측으로</span>\n      </button>\n    </div>\n  );\n}\n\nfunction RankingSlide({ children, slideCount }) {\n  if (!slideCount) return null;\n  const settings = {\n    focusOnSelect: true,\n    focusOnChange: true,\n    infinite: false,\n    slidesToShow: slideCount,\n    slidesToScroll: slideCount - 1,\n    speed: 500,\n    nextArrow: <NextArrow />,\n    prevArrow: <PrevArrow />\n  };\n  return <Slider {...settings}>{children}</Slider>;\n}\n\nexport default RankingSlide;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { reqForumIdPostList } from 'redux/store/forum/forumIdPostListSlice';\n\nfunction ForumDetail({ info, idx }) {\n  const { id, forum_category, title, description, thumbnail_image } = info;\n  const dispatch = useDispatch();\n  const onLoadPostList = () => {\n    dispatch(reqForumIdPostList({ forumId: id, page_size: 5 }));\n  };\n\n  return (\n    <div onClick={onLoadPostList} aria-hidden=\"true\">\n      <img src={thumbnail_image} alt=\"true\" />\n      <div className=\"swiper_badge\">\n        {/* <span className=\"rank_badge_big silver\" /> */}\n        <span\n          className={classNames(\n            'rank_badge_big',\n            { gold: idx === 0 },\n            { silver: idx === 1 },\n            { bronze: idx === 2 },\n            { normal: idx > 2 }\n          )}\n        >\n          {idx > 2 && <span>{idx + 1}</span>}\n        </span>\n        <span className=\"ranknum down\">{Math.floor(Math.random() * 2)}</span>\n      </div>\n      <div className=\"swiper_over\">\n        <span className=\"category\">{forum_category.title}</span>\n        <dl>\n          <dt>Black &amp; {title}</dt>\n          <dd>{description}</dd>\n        </dl>\n      </div>\n    </div>\n  );\n}\n\nexport default ForumDetail;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport classNames from 'classnames';\n// import { useDispatch } from 'react-redux';\nimport { getPostDateFormat } from 'util/common.js';\nimport { DATE_FORMAT_WEEK_TO_YEAR } from 'constants/type';\nimport { useNavigate } from 'react-router';\n\nfunction PostList({ info }) {\n  // const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // const onBookMark = (item) => {\n  // };\n\n  return (\n    <ul className=\"forum_list\">\n      {info?.map((item) => (\n        <li key={item.id} onClick={() => navigate(`/forum/${item.forum}/post/${item.id}`)} aria-hidden>\n          <div className=\"forum_list_img\">\n            <img src={item.thumbnail_image_url} alt=\"\" />\n          </div>\n          <dl>\n            <dt>{item.forum_title}</dt>\n            <dd className=\"forum_title\">\n              <span className=\"forum_title_text\">{item.title} #356</span>\n              <span className=\"forum_comment\">({item.comment_count})</span>\n            </dd>\n            <dd className=\"forum_name\">\n              <span>{item.user?.username}</span>\n              <span>{getPostDateFormat(item.created, DATE_FORMAT_WEEK_TO_YEAR)}</span>\n            </dd>\n          </dl>\n          <div className=\"emoji_group\">\n            {/* <span className=\"emoji like\">{item.like_count}</span> */}\n            <span className=\"emoji devil\" />\n            <span className=\"emoji fun\" />\n            <span className=\"emoji_num\">{item.visit_count}</span>\n          </div>\n          <div className=\"view_num\">\n            <div className=\"list_view_icon\">\n              <button type=\"button\" className=\"share\">\n                <span className=\"a11y\">공유하기</span>\n              </button>\n              <button type=\"button\" className={classNames('bookmark', { on: item.is_pined })}>\n                <span className=\"a11y\">북마크</span>\n              </button>\n            </div>\n            <span>{item.visit_count}</span>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default PostList;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { reqForumIdPostList } from 'redux/store/forum/forumIdPostListSlice';\nimport { reqForumRankingList } from 'redux/store/forum/forumRankingListSlice';\nimport RankingSlide from './RankingSlide';\nimport ForumDetail from './ForumDetail';\nimport PostList from './PostList';\n\nfunction ForumRanking() {\n  const menu = [\n    { id: 'live', txt: 'Live' },\n    { id: 'weekly', txt: 'Weekly' },\n    { id: 'monthly', txt: 'Monthly' }\n  ];\n  const [reqOption, setReqOption] = useState({ period: 'live', page: 1, page_size: 10, ordering: '-popularity' });\n  const { forumIdPostList } = useSelector((state) => ({ ...state.forumIdPostList }));\n  const { rankingList, firstForumId } = useSelector((state) => ({ ...state.forumRankingList }));\n  const slickRef = useRef();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // slickRef.current.slickGoto(0);\n    dispatch(reqForumRankingList(reqOption));\n  }, [reqOption]);\n\n  useEffect(() => {\n    console.log('firstForumId', firstForumId);\n    dispatch(reqForumIdPostList({ forumId: firstForumId }));\n  }, [firstForumId]);\n\n  return (\n    <div className=\"forum_ranking\">\n      <div className=\"content_subtitle\">\n        <h4 className=\"h4Type eng\">Forum Ranking</h4>\n        <div className=\"title_menu\">\n          {menu.map((item) => (\n            <button\n              type=\"button\"\n              className={classNames({ active: item.id === reqOption.period }, 'text_btn')}\n              key={item.id}\n              onClick={() => {\n                setReqOption({ ...reqOption, period: item.id });\n              }}\n            >\n              <span\n                id={item.id}\n                onClick={(e) => {\n                  setReqOption({ ...reqOption, period: e.target.id });\n                }}\n                aria-hidden=\"true\"\n              >\n                {item.txt}\n              </span>\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className=\"swiper\">\n        <div className=\"forum_swiper\">\n          <RankingSlide slideCount={3} slickRef={slickRef} reqOption={reqOption}>\n            {rankingList.map((item, idx) => (\n              <div className=\"slick-slider\" key={item.id}>\n                <div className=\"slick-list\">\n                  <div className=\"slick-track\">\n                    <div className=\"slick-slide\">\n                      <ForumDetail info={item} key={item.id} idx={idx} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </RankingSlide>\n        </div>\n      </div>\n      {forumIdPostList?.length > 0 && <PostList info={forumIdPostList} />}\n    </div>\n  );\n}\n\nexport default ForumRanking;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nfunction ForumSummarySlide({ children }) {\n  const settings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true\n  };\n  return <Slider {...settings}>{children}</Slider>;\n}\n\nexport default ForumSummarySlide;\n","import React from 'react';\nimport { useNavigate } from 'react-router';\nimport { addComma, checkLogin } from 'util/common';\nimport ForumSummarySlide from '../Home/ForumSummarySlide';\n\nfunction CreateForumBanner() {\n  const isLogin = checkLogin();\n  const navigate = useNavigate();\n  const onCreate = () => {\n    if (isLogin) navigate('/forum/create');\n    else navigate('/login');\n  };\n  return (\n    <div className=\"what_like\">\n      <dl className=\"what_like_title\">\n        <dt>What do you like?</dt>\n        <dd>\n          Enjoy various forums or create your\n          <br />\n          own forum and communicate freely.\n        </dd>\n      </dl>\n      <ForumSummarySlide>\n        <div className=\"posts like_num\">\n          <dl>\n            <dt>{addComma(40523423)}</dt>\n            <dd>posts</dd>\n          </dl>\n        </div>\n        <div className=\"comments like_num\">\n          <dl>\n            <dt>{addComma(1936820923)}</dt>\n            <dd>comments</dd>\n          </dl>\n        </div>\n      </ForumSummarySlide>\n      <button type=\"button\" className=\"btn primary button_md forum_creat\" onClick={onCreate}>\n        <span>Create a Forum</span>\n      </button>\n    </div>\n  );\n}\n\nexport default CreateForumBanner;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport banner01 from 'html/img/com/banner_img01.png';\nimport banner02 from 'html/img/com/banner_img02.png';\nimport banner03 from 'html/img/com/banner_img03.png';\nimport banner04 from 'html/img/com/banner_img04.png';\nimport Slider from 'react-slick';\n\nfunction NextArrow(props) {\n  const { onClick } = props;\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"swiper_button right\"\n        onClick={() => {\n          onClick();\n          console.log('test1');\n        }}\n      >\n        <span className=\"a11y\">우측으로</span>\n      </button>\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { onClick } = props;\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"swiper_button left\"\n        onClick={() => {\n          onClick();\n          console.log('test2');\n        }}\n      >\n        <span className=\"a11y\">좌측으로</span>\n      </button>\n    </div>\n  );\n}\n\nfunction SideImgBanner() {\n  const settings = {\n    dots: true,\n    autoplay: true,\n    autoPlaySpeed: 1000,\n    focusOnSelect: true,\n    infinite: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    speed: 500,\n    nextArrow: <NextArrow />,\n    prevArrow: <PrevArrow />\n  };\n\n  return (\n    <div className=\"slide_banner banner swiper\">\n      <div className=\"slide_img\">\n        <Slider {...settings}>\n          <img src={banner01} alt=\"test\" />\n          <img src={banner02} alt=\"test\" />\n          <img src={banner03} alt=\"test\" />\n          <img src={banner04} alt=\"test\" />\n        </Slider>\n      </div>\n\n      {/* <div className=\"slide_dot\">\n        <button type=\"button\" className=\"dot\" />\n        <button type=\"button\" className=\"dot on\" />\n        <button type=\"button\" className=\"dot\" />\n        <button type=\"button\" className=\"dot\" />\n      </div> */}\n    </div>\n  );\n}\n\nexport default SideImgBanner;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\n\nfunction ForumItem({ info, onMove }) {\n  const { thumbnail_image, description, forum_category } = info;\n  return (\n    <li onClick={onMove} aria-hidden>\n      <div className=\"new_forum_img\">\n        <img src={thumbnail_image} alt=\"\" />\n      </div>\n      <dl>\n        <dt>\n          <span>{forum_category.title}</span>\n        </dt>\n        <dd>{description}</dd>\n      </dl>\n    </li>\n  );\n}\n\nfunction NewForums() {\n  const navigate = useNavigate();\n  const { rankingList } = useSelector((state) => ({ ...state.forumRankingList }));\n  return (\n    <div className=\"new_forum\">\n      <div className=\"content_subtitle\">\n        <h4 className=\"h4Type eng\">New Forums</h4>\n        {/* <div className=\"title_menu\">\n          <button type=\"button\" className=\"text_btn\">\n            <span>See All</span>\n          </button>\n        </div> */}\n      </div>\n      <ul className=\"new_forum_list\">\n        {rankingList?.map(\n          (item, idx) =>\n            idx < 5 && <ForumItem key={item.id} info={item} onMove={() => navigate(`/forum/${item.id}/theme`)} />\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default NewForums;\n","/* eslint-disable camelcase */\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { addComma } from 'util/common';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reqTodayForum } from 'redux/store/forum/forumListSlice';\nimport { reqForumIdPostList } from 'redux/store/forum/forumIdPostListSlice';\n\nfunction TodaysForum() {\n  const { thumbnail_image, title, id } = useSelector((state) => ({\n    ...state.forumList.todayForum\n  }));\n  const { forumIdPostList } = useSelector((state) => ({ ...state.forumIdPostList }));\n\n  // forumlist에서 마지막 꺼 조회 { odering : '-created' ,page_size = 1 }\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(reqTodayForum({ odering: '-created', page_size: 1 }));\n  }, []);\n\n  useEffect(() => {\n    if (id) dispatch(reqForumIdPostList({ forumId: id, page_size: 5 }));\n  }, [id]);\n\n  return (\n    <div className=\"today_forum\" onClick={() => navigate(`/forum/${id}/theme`)} aria-hidden>\n      <div className=\"content_subtitle\">\n        <h4 className=\"h4Type eng\">Today’s Forum</h4>\n      </div>\n      <div className=\"today_forum_thum\">\n        <img src={thumbnail_image} alt=\"\" />\n        <div className=\"today_forum_thum_title\">\n          <span>{title}</span>\n        </div>\n      </div>\n      <ul>\n        {forumIdPostList?.map((item) => (\n          <li key={item.id}>\n            <div className=\"new_forum_img\">\n              <img src={item.thumbnail_image_url} alt=\"\" />\n            </div>\n            <dl>\n              <dt>\n                <span className=\"list_title\">{item.title} </span>\n                <span className=\"list_num\">({item.post_count ? item.post_count : '0'})</span>\n              </dt>\n              <dd>\n                <div className=\"emoji_group\">\n                  <span className=\"emoji like\" />\n                  <span className=\"emoji fun\" />\n                  <span className=\"emoji_num\">{item.comment_count}</span>\n                </div>\n                <div className=\"view_num\">\n                  <span>{addComma(item.visit_count)}</span>\n                </div>\n              </dd>\n            </dl>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodaysForum;\n","/* eslint-disable consistent-return */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reqAllForumList, reset } from 'redux/store/forum/forumAllSearchListSlice';\nimport { useInView } from 'react-intersection-observer';\nimport { reqCategoryList } from 'redux/store/common/categoryListSlice';\nimport classNames from 'classnames';\n\nfunction AllForum({ isShow, setIsShow, category }) {\n  // const [defaultCategory, setDefaultCategory] = useState(category);\n  const [reqOption, setReqOption] = useState({ forum_category: '', period: '', ordering: '' });\n  const { hasNextPage, allForumList, count } = useSelector((state) => ({ ...state.forumAllSearchList }));\n  const [ref, inView] = useInView();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { catList } = useSelector((state) => ({ ...state.categoryList }));\n  // ordering='-title'\n  const menu = [\n    { id: 'live', txt: 'Live' },\n    { id: 'weekly', txt: 'Weekly' },\n    { id: 'monthly', txt: 'Monthly' }\n  ];\n\n  const menu2 = [\n    { id: '-new', txt: 'New' },\n    { id: '-rising', txt: 'Rising' }\n  ];\n\n  // 닫혔을 경우 store 초기화\n  useEffect(() => {\n    if (!isShow) dispatch(reset());\n  }, [isShow]);\n\n  useEffect(() => {\n    dispatch(reqCategoryList());\n  }, []);\n\n  useEffect(() => {\n    dispatch(reqAllForumList(reqOption));\n  }, [reqOption]);\n\n  // side banner에서 클릭했을 경우\n  useEffect(() => {\n    if (category) {\n      setReqOption({ ...reqOption, forum_category: category });\n      dispatch(reqAllForumList({ ...reqOption, forum_category: category }));\n    }\n  }, [category]);\n\n  useEffect(() => {\n    if (inView && hasNextPage) {\n      dispatch(reqAllForumList(reqOption));\n    }\n  }, [hasNextPage, inView]);\n\n  // modal 바깥쪽 스크롤 금지\n  useEffect(() => {\n    if (isShow) {\n      document.body.style.cssText = `\n      position: fixed; \n      top: -${window.scrollY}px;\n      overflow-y: scroll;\n      width: 100%;`;\n      return () => {\n        const scrollY = document.body.style.top;\n        document.body.style.cssText = '';\n        window.scrollTo(0, parseInt(scrollY || '0', 10) * -1);\n      };\n    }\n  }, [isShow]);\n\n  return (\n    <div style={{ display: isShow ? 'inline-block' : 'none' }}>\n      <div id=\"modal\" />\n      <div className=\"modal_popup modal_text\" style={{ width: 1000, height: 850 }}>\n        <div className=\"forum_con\">\n          <button type=\"button\" className=\"close\" onClick={() => setIsShow(false)} />\n          <h2 className=\"modal_title\">All Forums</h2>\n          <ul className=\"pop_category\">\n            <li>\n              <button\n                type=\"button\"\n                className={classNames({\n                  on: reqOption?.forum_category === ''\n                })}\n                onClick={() => setReqOption({ ...reqOption, forum_category: '' })}\n              >\n                <span>All</span>\n              </button>\n            </li>\n            {catList?.map((item) => (\n              <li key={item.title}>\n                <button\n                  type=\"button\"\n                  id={item.id}\n                  className={classNames({\n                    on: reqOption?.forum_category === item.id\n                  })}\n                  onClick={() => setReqOption({ ...reqOption, forum_category: item.id })}\n                >\n                  <span>{item.title}</span>\n                </button>\n              </li>\n            ))}\n          </ul>\n          <div className=\"pop_category_search\">\n            <div className=\"search_title\">\n              Total <span className=\"search_num\">{count}</span>\n            </div>\n            <div className=\"search_terms\">\n              <div className=\"pop_terms\">\n                <div className=\"radio_button\">\n                  <div className=\"radio_wrap six\">\n                    <span className=\"form_cell btn_radio size_md\">\n                      <input\n                        type=\"radio\"\n                        name=\"subOption\"\n                        id=\"-title\"\n                        value=\"-title\"\n                        checked={reqOption?.ordering === '-title'}\n                        onChange={() => setReqOption({ ...reqOption, ordering: '-title' })}\n                      />\n                      <label htmlFor=\"-title\">\n                        <span>ABC</span>\n                      </label>\n                    </span>\n                    {menu.map((item) => (\n                      <span className=\"form_cell btn_radio size_md\" key={item.id}>\n                        <input\n                          type=\"radio\"\n                          name=\"subOption\"\n                          id={item.id}\n                          value={item.id}\n                          checked={item.id === reqOption?.period}\n                          onChange={() => setReqOption({ ...reqOption, period: item.id })}\n                        />\n                        <label htmlFor={item.id}>\n                          <span>{item.txt}</span>\n                        </label>\n                      </span>\n                    ))}\n                    {menu2.map((item) => (\n                      <span className=\"form_cell btn_radio size_md\" key={item.id}>\n                        <input\n                          type=\"radio\"\n                          name=\"subOption2\"\n                          id={item.id}\n                          value={item.id}\n                          checked={item.id === reqOption?.ordering}\n                          onChange={() => setReqOption({ ...reqOption, ordering: item.id })}\n                        />\n                        <label htmlFor={item.id}>\n                          <span>{item.txt}</span>\n                        </label>\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <div className=\"pop_search\">\n                <div className=\"form_wrap\">\n                  <span className=\"form_cell form_input search_noline\">\n                    <input type=\"text\" placeholder=\"Search...\" />\n                    <button className=\"btn_input input_search\" disabled>\n                      <span className=\"a11y\">검색</span>\n                    </button>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          {allForumList?.length === 0 ? (\n            <div className=\"pop_nosearch\">\n              <dl>\n                <dt>Newjeans is not found forum</dt>\n                <dd>\n                  This forum was not found.\n                  <br />\n                  Change your search terms or visit other recommended forums.\n                </dd>\n              </dl>\n            </div>\n          ) : (\n            <div className=\"pop_search_con\">\n              <ul>\n                {allForumList?.map((item, idx) => (\n                  <li key={item.id} onClick={() => navigate(`/forum/${item.id}/theme`)} aria-hidden>\n                    <div className=\"search_img\">\n                      <img src={item.thumbnail_image} alt=\"\" />\n                      <div\n                        className={classNames(\n                          'rank_badge_small',\n                          { gold: idx === 0 },\n                          { silver: idx === 1 },\n                          { bronze: idx === 2 },\n                          { normal: idx > 2 }\n                        )}\n                      >\n                        {idx > 2 && <span>{idx + 1}</span>}\n                      </div>\n                    </div>\n                    <div className=\"search_con\">\n                      <span className=\"label\">{item.forum_category.title}</span>\n                      <dl>\n                        {/* 검색어에 포인트로 search_text class 추가  */}\n                        <dt>\n                          <span className=\"search_text\">{item.title}</span>\n                        </dt>\n                        <dd>{item.description}</dd>\n                      </dl>\n                      <div className=\"forum_writer\">\n                        <span className=\"write_img\">\n                          <img src={item.user.profile_image_url} alt=\"\" />\n                        </span>\n                        <span className=\"write_name\">{item.user.username}</span>\n                      </div>\n                    </div>\n                    <div className=\"search_other\">\n                      <div className=\"count_group search\">\n                        <span className=\"post_count\">{item.post_count}</span>\n                        <span className=\"comment_count\">{item.comment_count}</span>\n                      </div>\n                      <div className=\"search_area\">\n                        <span className=\"ranknum up\">{Math.floor(Math.random() * 2)}</span>\n                        <div className=\"search_badge\">\n                          {Math.floor(Math.random() * 2) === 1 && <span className=\"forum_badge new\" />}\n                          {Math.floor(Math.random() * 2) === 1 && <span className=\"forum_badge good\" />}\n                          {Math.floor(Math.random() * 2) === 1 && <span className=\"forum_badge best_live_simple\" />}\n                          {Math.floor(Math.random() * 2) === 1 && <span className=\"forum_badge best_weekly_simple\" />}\n                          {Math.floor(Math.random() * 2) === 1 && <span className=\"forum_badge best_monthly_simple\" />}\n                          {/* {Math.floor(Math.random() * 2) === 1 && <span className=\"forum_badge rising_forum\" />}\n                          {Math.floor(Math.random() * 2) === 1 && <span className=\"forum_badge recommend_forum\" />} */}\n                        </div>\n                      </div>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      </div>\n      <div ref={ref} style={{ position: 'absolute', bottom: '100px', backgroundColor: 'grey', height: '30px' }} />\n    </div>\n  );\n}\n\nexport default AllForum;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport Slider from 'react-slick';\n\nfunction TempSlide({ children }) {\n  // if (!slideCount) return null;\n  const settings = {\n    // className: 'center',\n    centerMode: true,\n    infinite: true,\n    arrows: false,\n    // centerMargin: '0',\n    slidesToShow: 3,\n    cssEase: 'linear',\n    slidesToScroll: 1,\n    speed: 400,\n    dots: true\n  };\n  return <Slider {...settings}>{children}</Slider>;\n}\n\nexport default TempSlide;\n","/* eslint-disable camelcase */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport Header from 'components/common/header/Header';\nimport Footer from 'components/common/footer/Footer';\n// import BookMark from 'components/Forum/Home/BookMark';\nimport BoardList from 'components/Forum/Home/BoardList/BoardList';\n// import Chat from 'components/common/Chat/Chat';\nimport HistoryBanner from 'components/Forum/SideBanner/HistoryBanner';\n// import clubTopbanner01Img from 'html/img/temp/club_top_banner_01.png';\n// import clubTopbanner02Img from 'html/img/temp/club_top_banner_02.png';\n// import clubTopbanner03Img from 'html/img/temp/club_top_banner_03.png';\nimport bannerTop01Img from 'html/img/com/forum_top_banner_01.png';\nimport bannerTop02Img from 'html/img/com/forum_top_banner_02.png';\nimport bannerTop03Img from 'html/img/com/forum_top_banner_03.png';\nimport post01Img from 'html/img/com/po_post_01.png';\nimport post02Img from 'html/img/com/po_post_02.png';\nimport post03Img from 'html/img/com/po_post_03.png';\nimport post04Img from 'html/img/com/po_post_04.png';\nimport post05Img from 'html/img/com/po_post_05.png';\nimport profileImg from 'html/img/com/profile.jpg';\nimport ForumRanking from './ForumRanking/ForumRanking';\nimport CreateForumBanner from '../SideBanner/CreateForumBanner';\n// import PostRanking from './PostRanking/PostRanking';\nimport SideImgBanner from '../SideBanner/SideImgBanner';\nimport NewForums from '../SideBanner/NewForums';\nimport TodaysForum from '../SideBanner/TodaysForum';\nimport AllForum from '../AllForum/AllForum';\nimport TempSlide from './TempSlide';\n// import po_post_01.png from ''\n\nfunction Home() {\n  const navigate = useNavigate();\n  const [isAllForum, setIsAllForum] = useState(false);\n  const { catList } = useSelector((state) => state.categoryList);\n  return (\n    <div id=\"wrap\">\n      <Header />\n      <div id=\"main\">\n        <div className=\"forum_top_banner\">\n          <TempSlide>\n            <img src={bannerTop01Img} alt=\"\" />\n            <img src={bannerTop02Img} alt=\"\" />\n            <img src={bannerTop03Img} alt=\"\" />\n            <img src={bannerTop01Img} alt=\"\" />\n            <img src={bannerTop02Img} alt=\"\" />\n            <img src={bannerTop03Img} alt=\"\" />\n          </TempSlide>\n        </div>\n        <div id=\"container\">\n          <div className=\"content_subtitle forum\">\n            <h2 className=\"h2Type eng\">SUPER FORUM</h2>\n            <button type=\"button\" className=\"btn primary_line button_md view\" onClick={() => setIsAllForum(true)}>\n              <span>View All Forum</span>\n            </button>\n          </div>\n          <div className=\"popular_post\">\n            <div className=\"content_subtitle\">\n              <h4 className=\"h4Type eng\">Popular Posts</h4>\n              <div className=\"title_menu\">\n                <button type=\"button\" className=\"text_btn active\">\n                  <span>Live</span>\n                </button>\n                <button type=\"button\" className=\"text_btn\">\n                  <span>Weekly</span>\n                </button>\n                <button type=\"button\" className=\"text_btn\">\n                  <span>Monthly</span>\n                </button>\n              </div>\n            </div>\n\n            <div className=\"popular_post_con\">\n              <div className=\"popular_posts con01\" onClick={() => navigate(`/forum/29/post/70`)} aria-hidden>\n                <img src={post01Img} alt=\"\" />\n                <div className=\"popular_writer\">\n                  <div className=\"popular_writer_photo\">\n                    <img src={profileImg} alt=\"\" />\n                  </div>\n                  <dl>\n                    <dt>Nickname#USER02</dt>\n                    <dd>30m ago</dd>\n                  </dl>\n                </div>\n                <div className=\"popular_badge\">\n                  <span className=\"post_badge_best_big live\" />\n                </div>\n                <div className=\"top_over\" />\n                <div className=\"popular_con\">\n                  <dl>\n                    <dt>TWICE Break Down Their Favorite .. Snaks</dt>\n                    <dd>\n                      I would like to try each member’s favorite snack, but I just know it’s not available in our\n                      country. The only thing I’ve tried is the Skittles which Mina mentioned. I’m hoping for more\n                      interviews with complete members of TWICE or collaboration. I love OT9 so much. Although I would\n                      normally follow Jihyo blindly, I have to say my favorite out of these is Sana’s choice. It’s like\n                      coco crispies in pizza form. So good!\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n              <div className=\"popular_posts con02\" onClick={() => navigate(`/forum/30/post/52`)} aria-hidden>\n                <img src={post02Img} alt=\"\" />\n                <div className=\"popular_writer\">\n                  <div className=\"popular_writer_photo\">\n                    <img src={profileImg} alt=\"\" />\n                  </div>\n                  <dl>\n                    <dt>Nickname#USER28</dt>\n                    <dd>2h ago</dd>\n                  </dl>\n                </div>\n                <div className=\"popular_badge\">\n                  <span className=\"post_badge_best_big weekly\" />\n                </div>\n                <div className=\"top_over\" />\n                <div className=\"popular_con\">\n                  <dl>\n                    <dt>LG’s batting lineup explodes…WIN! Woo-chan’s 100th career win</dt>\n                    <dd>\n                      LG Twins’ Cha Woo-chan easily won 100 games thanks to the explosion of the team’s batting lineup.\n                      Cha Woo-chan gave up nine hits in five innings in the professional baseball game in Gwangju, but\n                      became a winning pitc.. her by blocking well with two runs.LG defeated Kia 17-4, as the team’s\n                      batting lineup exploded, and Cha Woo-chan became the 31st pitcher to win 100 games.\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n              <div className=\"popular_flex\">\n                <div className=\"popular_posts con03\" onClick={() => navigate(`/forum/32/post/214`)} aria-hidden>\n                  <img src={post03Img} alt=\"\" />\n                  <div className=\"popular_writer\">\n                    <div className=\"popular_writer_photo\">\n                      <img src={profileImg} alt=\"\" />\n                    </div>\n                    <dl>\n                      <dt>Nickname#USER28</dt>\n                      <dd>2h ago</dd>\n                    </dl>\n                  </div>\n                  <div className=\"popular_badge\">\n                    <span className=\"post_badge_best_big monthly\" />\n                  </div>\n                  <div className=\"top_over\" />\n                  <div className=\"popular_con\">\n                    <dl>\n                      <dt>Adidas Has Officially Entered the Metaverse</dt>\n                      <dd>\n                        Including an NFT collection that features exclusive streetwe ar drops and access. In tandem with\n                        Web3, Adidas has ma.. de its first NFT drop created with NFT pioneers Bored Ap.. e Yacht Club,\n                        gmoney and the team behind PUNKS comic. Starting on December 17, the Adidas NFTs called Into the\n                        Metaverse will be available for purchase and owners will then receive exclusive access to\n                        various Adidas Originals experiences and products. With the NFTs acting as an access pass to\n                        in-virtual land experiences as well as free collaborative merchandise, owners will be able to\n                        access virtual wearables for the blockchain-based gaming world, The Sandbox.\n                      </dd>\n                    </dl>\n                  </div>\n                </div>\n                <div className=\"popular_flex01\">\n                  <div className=\"popular_posts con04\" onClick={() => navigate(`/forum/33/post/215`)} aria-hidden>\n                    <img src={post04Img} alt=\"\" />\n                    <div className=\"popular_writer\">\n                      <div className=\"popular_writer_photo\">\n                        <img src={profileImg} alt=\"\" />\n                      </div>\n                      <dl>\n                        <dt>Nickname#USER28</dt>\n                        <dd>2h ago</dd>\n                      </dl>\n                    </div>\n                    <div className=\"popular_badge\">\n                      <span className=\"post_badge_best weekly\" />\n                    </div>\n                    <div className=\"top_over\" />\n                    <div className=\"popular_con\">Pokémon Holiday Collection | Pokémon Center Official Site</div>\n                  </div>\n                  <div className=\"popular_posts con05\" onClick={() => navigate(`/forum/34/post/216`)} aria-hidden>\n                    <img src={post05Img} alt=\"\" />\n                    <div className=\"popular_writer\">\n                      <div className=\"popular_writer_photo\">\n                        <img src={profileImg} alt=\"\" />\n                      </div>\n                      <dl>\n                        <dt>Nickname#USER28</dt>\n                        <dd>2h ago</dd>\n                      </dl>\n                    </div>\n                    <div className=\"popular_badge\">\n                      <span className=\"post_badge_best monthly\" />\n                    </div>\n                    <div className=\"top_over\" />\n                    <div className=\"popular_con\">What happens if you don’t give candy on Halloween Animal C..</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"main_div\">\n              <div className=\"con_div\">\n                <ForumRanking />\n                {catList?.map((item) => (\n                  <BoardList\n                    title={item.title}\n                    category={item.id}\n                    forum_count={item.forum_count}\n                    post_count={item.post_count}\n                    comment_count={item.comment_count}\n                    key={item.id}\n                    setIsAllForum={setIsAllForum}\n                  />\n                ))}\n              </div>\n              <div className=\"right_div\">\n                <CreateForumBanner />\n                {/* <Chat /> */}\n                <SideImgBanner />\n                <HistoryBanner />\n                <NewForums />\n                <TodaysForum />\n              </div>\n            </div>\n          </div>\n          <Footer />\n        </div>\n      </div>\n      <AllForum isShow={isAllForum} setIsShow={setIsAllForum} />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useEffect } from 'react';\nimport classNames from 'classnames';\nimport useToggle from 'hook/useToggle';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FORUM_NAME_MAXLENGTH, FORUM_DISC_MAXLENGTH } from 'constants/type';\nimport { reqCategoryList } from 'redux/store/common/categoryListSlice';\n\nfunction Info({ forumInfo, setForumInfo, errors, setErrors, editType }) {\n  const { catList } = useSelector((state) => ({ ...state.categoryList }));\n  const [expand, setExpand] = useToggle(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(reqCategoryList());\n  }, []);\n\n  // useEffect(() => {\n  //   console.log('forumInfo::', forumInfo);\n  // }, [forumInfo]);\n\n  return (\n    <div className=\"form_div\">\n      <div>\n        <span className=\"form_title\">Forum Name</span>\n        <div className={classNames('form_wrap', { msg: editType === 'create', default: editType === 'create' })}>\n          <span className=\"form_cell form_input input_lg\">\n            <input\n              id=\"forumName\"\n              type=\"text\"\n              value={forumInfo.title}\n              placeholder=\"Please enter your forum name\"\n              onChange={(e) => setForumInfo({ ...forumInfo, title: e.target.value })}\n              maxLength={FORUM_NAME_MAXLENGTH}\n              onBlur={(e) => !e.target.value && setErrors({ ...errors, title: 'Please Enter your forum name' })}\n            />\n            <span className=\"guide_text num\">\n              <span>{forumInfo.title?.length}</span>/{FORUM_NAME_MAXLENGTH}\n            </span>\n          </span>\n          {editType === 'create' && (\n            <span className=\"default_txt msg\" id=\"input_help\">\n              You can change the name of the forum 30 days before the forum is created.\n            </span>\n          )}\n          {errors.title && (\n            <span className=\"error_txt msg\" id=\"input_error\">\n              {errors.title}\n            </span>\n          )}\n        </div>\n      </div>\n      <div>\n        <span className=\"form_title\">Category</span>\n        {/* error시 error 클래스를 붙여주시고 하단에 error_txt를 보여주세요 */}\n        <div className={classNames('select_wrap', { error: errors.forum_category })}>\n          <div className={classNames('select', { active: expand })}>\n            <div className=\"selected\" onClick={() => setExpand()} aria-hidden>\n              <div className=\"selected-value\">\n                {forumInfo.forum_category ? forumInfo.forum_category.title : 'Please select a forum category'}\n              </div>\n              <button type=\"button\" className=\"arrow\">\n                <span className=\"a11y\">선택</span>\n              </button>\n            </div>\n            <ul>\n              {catList?.map((item) => (\n                <li\n                  className=\"option\"\n                  key={item.id}\n                  value={item.id}\n                  onClick={() => {\n                    setForumInfo({ ...forumInfo, forum_category: item });\n                    setExpand();\n                  }}\n                  aria-hidden\n                >\n                  {item.title}\n                </li>\n              ))}\n            </ul>\n          </div>\n          {errors.forum_category && <span className=\"error_txt\">{errors.forum_category}</span>}\n        </div>\n      </div>\n      <div>\n        <span className=\"form_title\">Introduction</span>\n        <div className=\"text_area\">\n          <textarea\n            id=\"description\"\n            onChange={(e) => setForumInfo({ ...forumInfo, description: e.target.value })}\n            maxLength={FORUM_DISC_MAXLENGTH}\n            onBlur={(e) => !e.target.value && setErrors({ ...errors, description: 'Please Enter your description' })}\n            defaultValue={forumInfo.description}\n          />\n          {/* 글자수가 0일때는 black이 붙지않고 글자수가 늘어나면서부터 색상이 바뀝니다. */}\n          <span className=\"num\">\n            <span className={classNames({ black: forumInfo.description?.length > 0 })}>\n              {forumInfo.description?.length}\n            </span>\n            /{FORUM_DISC_MAXLENGTH}\n          </span>\n          {errors.description && <span className=\"error_txt\">{errors.description}</span>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Info;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reqCategoryList } from 'redux/store/common/categoryListSlice';\n\nfunction ForumCategoryBanner({ setIsShow, setCategory }) {\n  const dispatch = useDispatch();\n  const { catList } = useSelector((state) => ({ ...state.categoryList }));\n  useEffect(() => {\n    dispatch(reqCategoryList());\n  }, []);\n  return (\n    <div className=\"category\">\n      <div className=\"content_subtitle\">\n        <h4 className=\"h4Type eng\">Category</h4>\n        <div className=\"title_menu\">\n          <button type=\"button\" className=\"hover\">\n            <span>All forums</span>\n          </button>\n        </div>\n      </div>\n      <ul className=\"category_list\">\n        {catList?.map((item) => (\n          <li\n            key={item.id}\n            onClick={() => {\n              setIsShow(true);\n              setCategory(item.id);\n            }}\n            aria-hidden\n          >\n            <span className=\"category_name\">{item.title}</span>\n            <span className=\"category_level\">{item.forum_count}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ForumCategoryBanner;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState, useRef } from 'react';\nimport ReactCrop, { centerCrop, makeAspectCrop } from 'react-image-crop';\nimport { useDropzone } from 'react-dropzone';\n// import { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { IMAGE_TYPE_BANNER, IMAGE_TYPE_THUMBNAIL } from 'constants/type';\n\nfunction centerAspectCrop(mediaWidth, mediaHeight, aspect) {\n  return centerCrop(\n    makeAspectCrop(\n      {\n        unit: '%',\n        x: 0,\n        y: 0,\n        width: mediaWidth,\n        height: mediaHeight\n      },\n      aspect,\n      mediaWidth,\n      mediaHeight\n    ),\n    mediaWidth,\n    mediaHeight\n  );\n}\n\nfunction CropImg2(props) {\n  const { imgType, cropWidth, cropHeight, errors, setErrors, forumInfo, setForumInfo } = props;\n  const [imgSrc, setImgSrc] = useState(forumInfo[imgType]);\n  const [eventType, setEventType] = useState('');\n  const [originImg, setOriginImg] = useState({ bannerImg: '', thumbImg: '' });\n  const canvasRef = useRef(null);\n  const imgRef = useRef(null);\n  // const { t } = useTranslation();\n\n  const [crop, setCrop] = useState({\n    unit: '%',\n    x: 25,\n    y: 25,\n    width: 50,\n    height: 50\n  });\n  const [completedCrop, setCompletedCrop] = useState();\n  const scale = 1;\n  const aspect = cropWidth / cropHeight;\n\n  const onDrop = (acceptedFiles, fileRejections) => {\n    // img preview\n    if (acceptedFiles && acceptedFiles.length > 0) {\n      setCrop(undefined);\n      setOriginImg({ [imgType]: acceptedFiles[0].name });\n\n      const reader = new FileReader();\n      reader.addEventListener('load', () => {\n        setImgSrc(reader.result.toString() || '');\n        setErrors({ ...errors, [imgType]: '' });\n      });\n      reader.readAsDataURL(acceptedFiles[0]);\n    }\n\n    fileRejections.forEach((file) => {\n      file.errors.forEach((err) => {\n        if (err.code === 'file-too-large') {\n          // setErrors({ ...errors, [imgType]: t('validation.forum.uploadfile.maxsize') });\n          setErrors({ ...errors, [imgType]: 'Images cannot exceed 10mb.' });\n        }\n\n        if (err.code === 'file-invalid-type') {\n          // setErrors({ ...errors, [imgType]: t('validation.forum.uploadfile.invalidfile') });\n          setErrors({ ...errors, [imgType]: 'only the extensions jpg, gif, and png are allowed.' });\n        }\n      });\n    });\n  };\n\n  const { getRootProps, getInputProps, open } = useDropzone({\n    onDrop,\n    accept: {\n      'image/png': ['.png', '.jpg', '.gif']\n    },\n    maxSize: 1024 * 1024 * 10\n  });\n\n  const onImageLoad = (e) => {\n    if (aspect) {\n      const { width, height } = e.currentTarget;\n      setCrop(centerAspectCrop(width, height, aspect));\n    }\n  };\n\n  const onRemove = () => {\n    setImgSrc('');\n    setOriginImg('');\n    if (eventType === imgType) {\n      setForumInfo({ ...forumInfo, [imgType]: '', [`${imgType}_filename`]: '' });\n    }\n  };\n\n  const onCreateBlob = () => {\n    if (!canvasRef.current) return;\n    // canvas를 blob 형태로 만들어서 이미지 업로드하기\n    canvasRef.current.toBlob(\n      (blob) => {\n        if (eventType === imgType) {\n          setForumInfo({ ...forumInfo, [imgType]: blob, [`${imgType}_filename`]: originImg[imgType] });\n        }\n      },\n      'image/jpeg',\n      0.95\n    );\n  };\n\n  const createCanvas = () => {\n    if (!completedCrop || !canvasRef.current || !imgRef.current) {\n      return;\n    }\n    const ctx = canvasRef.current.getContext('2d');\n    if (!ctx) return;\n\n    const newCrop = completedCrop;\n\n    const scaleX = imgRef.current.naturalWidth / imgRef.current.width;\n    const scaleY = imgRef.current.naturalHeight / imgRef.current.height;\n    const pixelRatio = window.devicePixelRatio;\n\n    canvasRef.current.width = newCrop.width * pixelRatio * scaleX;\n    canvasRef.current.height = newCrop.height * pixelRatio * scaleY;\n\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = 'high';\n\n    ctx.drawImage(\n      imgRef.current,\n      newCrop.x * scaleX,\n      newCrop.y * scaleY,\n      newCrop.width * scaleX,\n      newCrop.height * scaleY,\n      0,\n      0,\n      newCrop.width * scaleX,\n      newCrop.height * scaleY\n    );\n    onCreateBlob();\n  };\n\n  const onBrowseFile = () => {\n    onRemove();\n    open();\n  };\n\n  useEffect(() => {\n    setEventType(imgType);\n    createCanvas();\n  }, [completedCrop]);\n\n  useEffect(() => {\n    console.log('imgSrc', imgSrc);\n    console.log(forumInfo[imgType]);\n  }, [forumInfo, imgSrc]);\n  return (\n    <div>\n      <span className=\"form_title\">\n        {imgType === IMAGE_TYPE_THUMBNAIL ? 'Forum Thumbnail' : 'Forum Top Image'} <span>(Option)</span>\n      </span>\n      <span className=\"title_text\">\n        Forum’s thumbnail can only use image files with jpg, gif, or png extensions of less than 10MB.{' '}\n        <span>(Best size : {imgType === IMAGE_TYPE_THUMBNAIL ? '200 x 200px' : '1280 x 268px'})</span>\n      </span>\n      <div\n        className={classNames(\n          'img_upload',\n          { thum: imgType === IMAGE_TYPE_THUMBNAIL },\n          { top: imgType === IMAGE_TYPE_BANNER }\n        )}\n      >\n        {imgSrc ? (\n          <ReactCrop\n            crop={crop}\n            onChange={(_, percentCrop) => setCrop(percentCrop)}\n            onComplete={(c) => setCompletedCrop(c)}\n            onDragEnd={() => onCreateBlob()}\n            aspect={aspect}\n            locked\n          >\n            <img\n              ref={imgRef}\n              alt=\"Crop me\"\n              src={imgSrc}\n              style={{ transform: `scale(${scale})` }}\n              onLoad={onImageLoad}\n            />\n            <button type=\"button\" className=\"img_delete\" onClick={onRemove}>\n              <span className=\"a11y\">이미지 업로드 삭제</span>\n            </button>\n          </ReactCrop>\n        ) : (\n          <div className=\"img_upload_box\" {...getRootProps()}>\n            <input {...getInputProps()} />\n            <span>\n              Drag and drop\n              {imgType === IMAGE_TYPE_THUMBNAIL && <br />}\n              your files here\n            </span>\n          </div>\n        )}\n        <div className=\"img_upload_btn\">\n          {!imgSrc && (\n            <div className=\"or_line\">\n              <span>OR</span>\n            </div>\n          )}\n          <button type=\"button\" onClick={onBrowseFile}>\n            <span>Browse files</span>\n          </button>\n        </div>\n      </div>\n      <canvas ref={canvasRef} style={{ width: 0, height: 0 }} />\n    </div>\n  );\n}\nexport default CropImg2;\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport Header from 'components/common/header/Header';\nimport Footer from 'components/common/footer/Footer';\nimport CreateForumBanner from 'components/Forum/SideBanner/CreateForumBanner';\nimport SideImgBanner from 'components/Forum/SideBanner/SideImgBanner';\nimport Info from 'components/Forum/Create/Info';\nimport {\n  IMAGE_TYPE_BANNER,\n  IMAGE_TYPE_THUMBNAIL,\n  BANNER_IMAGE_WIDTH,\n  BANNER_IMAGE_HEIGHT,\n  THUMBNAIL_IMAGE_WIDTH,\n  THUMBNAIL_IMAGE_HEIGHT\n} from 'constants/type';\nimport { reqForumCreate } from 'redux/store/forum/forumCreateSlice';\nimport { reqCategoryList } from 'redux/store/common/categoryListSlice';\nimport AllForum from 'components/Forum/AllForum/AllForum';\nimport ForumCategoryBanner from '../SideBanner/ForumCategoryBanner';\nimport CropImg2 from './CropImg2';\n\nfunction Create() {\n  const [forumInfo, setForumInfo] = useState({\n    title: '',\n    forum_category: '',\n    description: '',\n    master_nickname: 'testNick',\n    [IMAGE_TYPE_BANNER]: '',\n    [IMAGE_TYPE_THUMBNAIL]: '',\n    [`${IMAGE_TYPE_BANNER}_filename`]: '',\n    [`${IMAGE_TYPE_THUMBNAIL}_filename`]: ''\n  });\n\n  const [errors, setErrors] = useState({\n    title: '',\n    forum_category: '',\n    description: '',\n    [IMAGE_TYPE_BANNER]: '',\n    [IMAGE_TYPE_THUMBNAIL]: ''\n  });\n\n  const [isAllForum, setIsAllForum] = useState(false);\n  const [category, setCategory] = useState(0);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const onCreate = () => {\n    const formData = new FormData();\n    formData.append('title', forumInfo.title);\n    formData.append('forum_category', forumInfo.forum_category.id);\n    formData.append('description', forumInfo.description);\n    formData.append('master_nickname', forumInfo.master_nickname);\n    if (forumInfo.banner_image)\n      formData.append(IMAGE_TYPE_BANNER, forumInfo.banner_image, forumInfo.banner_image_filename);\n    if (forumInfo.thumbnail_image)\n      formData.append(IMAGE_TYPE_THUMBNAIL, forumInfo.thumbnail_image, forumInfo.thumbnail_image_filename);\n    dispatch(reqForumCreate({ navigate, formData }));\n  };\n\n  useEffect(() => {\n    dispatch(reqCategoryList());\n  }, []);\n\n  return (\n    <div id=\"wrap\">\n      <Header />\n      <div id=\"main\">\n        <div id=\"container\">\n          <div className=\"main_div\">\n            <div className=\"con_div\">\n              {/* S : Forum 게시판 생성 */}\n              <div className=\"creat_div\">\n                <div className=\"content_subtitle creat\">\n                  <h4 className=\"title creat\">Create a Forum</h4>\n                  <div className=\"title_menu\">\n                    <button type=\"button\" className=\"text_btn\" onClick={() => navigate('/forum')}>\n                      <span>Cancle</span>\n                    </button>\n                  </div>\n                </div>\n                <div className=\"creat_form\">\n                  <span className=\"info title\">Required Information</span>\n                  <Info\n                    forumInfo={forumInfo}\n                    setForumInfo={setForumInfo}\n                    errors={errors}\n                    setErrors={setErrors}\n                    editType=\"create\"\n                  />\n                  <span className=\"img title\">Image Registration</span>\n                  <div className=\"form_div\">\n                    <CropImg2\n                      imgType={IMAGE_TYPE_THUMBNAIL}\n                      cropWidth={THUMBNAIL_IMAGE_WIDTH}\n                      cropHeight={THUMBNAIL_IMAGE_HEIGHT}\n                      errors={errors}\n                      setErrors={setErrors}\n                      forumInfo={forumInfo}\n                      setForumInfo={setForumInfo}\n                    />\n                    <CropImg2\n                      imgType={IMAGE_TYPE_BANNER}\n                      cropWidth={BANNER_IMAGE_WIDTH}\n                      cropHeight={BANNER_IMAGE_HEIGHT}\n                      errors={errors}\n                      setErrors={setErrors}\n                      forumInfo={forumInfo}\n                      setForumInfo={setForumInfo}\n                    />\n                  </div>\n                </div>\n                <div className=\"page_btn_wrap full\">\n                  <button\n                    type=\"button\"\n                    className=\"btn primary button_xl\"\n                    onClick={onCreate}\n                    disabled={!forumInfo.title || forumInfo.forum_category === '0' || !forumInfo.description}\n                  >\n                    <span>Create a Forum</span>\n                  </button>\n                </div>\n              </div>\n              {/* E :  Forum 게시판 생성 */}\n            </div>\n            <div className=\"right_div\">\n              {/* S : What do you like */}\n              <CreateForumBanner />\n              {/* E : What do you like */}\n              <SideImgBanner />\n              <ForumCategoryBanner setIsShow={setIsAllForum} setCategory={setCategory} />\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n      <AllForum isShow={isAllForum} setIsShow={setIsAllForum} category={category} />\n    </div>\n  );\n}\n\nexport default Create;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { showPopup } from 'redux/store/common/popupSlice';\nimport { reqForumInfo, updateForumInfo } from 'redux/store/forum/forumInfoSlice';\nimport { reqForumPin, reqForumUnpin } from 'redux/store/forum/forumBookmarkSlice';\nimport { reqForumBookMarkedList } from 'redux/store/forum/forumBookmarkedSlice';\nimport userThumb from 'html/img/com/user thumb.png';\nimport { POPUP_TYPE_BADGE, DATE_FORMAT_WEEK_TO_YEAR } from 'constants/type';\nimport { getPostDateFormat, addComma } from 'util/common.js';\nimport classNames from 'classnames';\n\nfunction ForumTop({ forumId }) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    id,\n    title,\n    // forum_category,\n    description,\n    banner_image,\n    post_count,\n    comment_count,\n    pin_count,\n    thumbnail_image,\n    // forum_staffs,\n    // forbidden_words,\n    // bans,\n    is_pined,\n    badge,\n    user,\n    created\n  } = useSelector((state) => ({\n    ...state.forumInfo\n  }));\n\n  const { isActive, isSuccess } = useSelector((state) => ({ ...state.forumPin }));\n\n  const onBookMark = () => {\n    if (is_pined) dispatch(reqForumUnpin(id));\n    else dispatch(reqForumPin(id));\n  };\n\n  useEffect(() => {\n    if (forumId) dispatch(reqForumInfo(forumId));\n  }, [forumId]);\n\n  useEffect(() => {\n    if (isSuccess && isActive !== is_pined) {\n      dispatch(reqForumBookMarkedList({ is_pined: 'true' }));\n      dispatch(updateForumInfo({ is_pined: isActive }));\n    }\n  }, [isSuccess]);\n\n  return (\n    <div className=\"top_div\">\n      <div className=\"top_img\">\n        <img src={banner_image} className=\"top_img\" alt=\"forum top\" />\n        <button type=\"button\" className={classNames('bookmark', { on: is_pined })} onClick={() => onBookMark()}>\n          <span className=\"a11y\">북마크</span>\n        </button>\n        <div className=\"forum_master\" onClick={() => navigate(`/forum/${id}/init`)} aria-hidden>\n          <div>\n            <button type=\"button\" className=\"forum_default_setting\" onClick={() => navigate(`/forum/${id}/init`)}>\n              <span className=\"a11y\">설정</span>\n            </button>\n            <div className=\"forum_master_info\">\n              <span className=\"forum_master_profile\">\n                <img src={userThumb} alt=\"userImg\" />\n              </span>\n              <span className=\"forum_master_name\">{user.username}</span>\n            </div>\n            <div className=\"forum_staff_info none\">No staff yet</div>\n            {/* <div className=\"forum_master_staff\">\n              <img src={userThumb} alt=\"user thumb\" />\n              <img src={userThumb} alt=\"user thumb\" />\n              <img src={userThumb} alt=\"user thumb\" />\n              <span className=\"forum_staff_info\">\n                Staff by <span>nickname</span> and <span>3 others</span>\n              </span>\n            </div> */}\n          </div>\n        </div>\n        <div className=\"forum_rank\">\n          <div className=\"forum_rank_img\">\n            <img src={thumbnail_image} alt=\"user thumb\" />\n          </div>\n          <div className=\"forum_rank_info\">\n            <span className=\"rank_badge_small gold none\" />\n            {/* <span className=\"forum_rank_num\">01</span> */}\n            {/* <span className=\"ranknum up\">652</span> */}\n          </div>\n        </div>\n        <div className=\"forum_top_badge\">\n          {badge[0] === 1 && <span className=\"forum_badge new\" />}\n          {badge[1] === 1 && <span className=\"forum_badge amazing\" />}\n          {badge[2] === 1 && <span className=\"forum_badge best_live\" />}\n          {badge[3] === 1 && <span className=\"forum_badge best_weekly\" />}\n          {badge[5] === 1 && <span className=\"forum_badge rising_forum\" />}\n          {badge[6] === 1 && <span className=\"forum_badge nice\" />}\n          <div>\n            <button\n              type=\"button\"\n              className=\"forum_guide open_tip\"\n              onClick={() => dispatch(showPopup({ type: POPUP_TYPE_BADGE }))}\n            >\n              <span className=\"a11y\">뱃지가이드</span>\n            </button>\n            <div className=\"tooltip bottom\">\n              <span>Badge View</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"forum_info\">\n        <dl className=\"forum_name\">\n          <dt>\n            {title}\n            <span className=\"forum_start_date\">Since {getPostDateFormat(created, DATE_FORMAT_WEEK_TO_YEAR)}</span>\n          </dt>\n          <dd>{description}</dd>\n        </dl>\n        <div className=\"forum_total_num\">\n          <dl>\n            <dt>{addComma(post_count)}</dt>\n            <dd>Posts</dd>\n          </dl>\n          <dl>\n            <dt>{addComma(comment_count)}</dt>\n            <dd>Comments</dd>\n          </dl>\n          <dl>\n            <dt>{addComma(pin_count)}</dt>\n            <dd>Bookmarks</dd>\n          </dl>\n        </div>\n      </div>\n      {/* <BadgeModal isShowModal={isShowModal} setIsShowModal={setIsShowModal} /> */}\n    </div>\n  );\n}\n\nexport default ForumTop;\n","import React from 'react';\nimport userThumb from 'html/img/com/user thumb.png';\n\nfunction AddedList({ userList, onDeleteList, userType }) {\n  return (\n    <ul className=\"add_staff_list\">\n      {userList?.map((item) => (\n        <li key={item}>\n          <dl>\n            <dt>\n              <img src={userThumb} alt=\"test\" aria-hidden style={{ width: '30px', height: '30px' }} />\n            </dt>\n            <dd>{item}</dd>\n            <dd>\n              <button type=\"button\" className=\"delete\" onClick={() => onDeleteList(item, userType)}>\n                <span className=\"a11y\">삭제</span>\n              </button>\n            </dd>\n          </dl>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default AddedList;\n","import React from 'react';\nimport { useNavigate } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { fourmReset } from 'redux/store/forum/fourmPostSlice';\nimport { checkLogin } from 'util/common';\n\nfunction WriteBtn({ forumId }) {\n  const isLogin = checkLogin();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const onWritting = () => {\n    if (isLogin) {\n      dispatch(fourmReset());\n      navigate(`/forum/${forumId}/writing`);\n    } else {\n      navigate('/login');\n    }\n  };\n  return (\n    <div>\n      <button type=\"button\" className=\"btn writing\" onClick={onWritting}>\n        <span>Writing</span>\n      </button>\n    </div>\n  );\n}\n\nexport default WriteBtn;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\n\nfunction ModalBanWord({ isShowModal, setIsShowBanModal }) {\n  return (\n    <div style={{ display: isShowModal ? 'inline-block' : 'none' }}>\n      <div id=\"modal\" />\n      <div className=\"modal_popup modal_text\" style={{ width: 480 }}>\n        <div className=\"modal_con reason\">\n          <button type=\"button\" className=\"close\" onClick={() => setIsShowBanModal(false)} />\n          <h2 className=\"modal_title\">Reasons for Ban</h2>\n          <div className=\"bg_con \">\n            <div className=\"forum_reason_title\">Enter a reason to ban this member.</div>\n            <div className=\"text_area\">\n              <textarea placeholder=\"Please enter a reason to ban\" defaultValue=\"\" />\n              <span className=\"num\">\n                <span className=\"black\">0</span>/20\n              </span>\n            </div>\n          </div>\n          <div className=\"popup_btn_wrap right\">\n            <button type=\"button\" className=\"btn default button_lg\">\n              <span>cancel</span>\n            </button>\n            <button type=\"button\" className=\"btn primary button_lg\">\n              <span>Save</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ModalBanWord;\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Header from 'components/common/header/Header';\nimport Footer from 'components/common/footer/Footer';\nimport ForumTop from 'components/Forum/ForumTop';\nimport AddedList from 'components/Forum/Create/AddedList';\n// import Search from 'components/Forum/Create/Search';\nimport SideImgBanner from 'components/Forum/SideBanner/SideImgBanner';\nimport HistoryBanner from 'components/Forum/SideBanner/HistoryBanner';\nimport ForumCategoryBanner from 'components/Forum/SideBanner/ForumCategoryBanner';\nimport AllForum from 'components/Forum/AllForum/AllForum';\nimport Info from 'components/Forum/Create/Info';\nimport WriteBtn from 'components/Forum/SideBanner/WriteBtn';\nimport {\n  IMAGE_TYPE_BANNER,\n  IMAGE_TYPE_THUMBNAIL,\n  BANNER_IMAGE_WIDTH,\n  BANNER_IMAGE_HEIGHT,\n  THUMBNAIL_IMAGE_WIDTH,\n  THUMBNAIL_IMAGE_HEIGHT\n} from 'constants/type';\nimport { reqForumInfo } from 'redux/store/forum/forumInfoSlice';\nimport { reqForumEdit } from 'redux/store/forum/forumEditSlice';\nimport { reqCategoryList } from 'redux/store/common/categoryListSlice';\nimport { reset, reqsearchUser } from 'redux/store/common/searchUserSlice';\n// import { reqForumList } from 'redux/store/forum/forumListSlice';\nimport userThumb from 'html/img/com/user thumb.png';\nimport classNames from 'classnames';\nimport CropImg2 from './CropImg2';\n// import UserList2 from './UserList2';\nimport ModalBanWord from './ModalBanWord';\n\nconst USER_LIST_STAFF = 'forum_staffs';\nconst USER_LIST_BAN = 'bans';\n\nfunction Edit() {\n  // const [reqOption, setReqOption] = useState({ category: [], sort: 'week', forumId: '' });\n  const [fobiddenList, setFobiddenList] = useState([]);\n  const [searchType, setSearchType] = useState(USER_LIST_STAFF);\n  const [banKeyWord, setBanKeyWord] = useState('');\n  const [staffKeyword, setStaffKeyword] = useState('');\n  // const [searchBanList, setSearchBanList] = useState([]);\n  const [searchUserList, setSearchUserList] = useState([]);\n  const [savedStaffList, setSavedStaffList] = useState([]);\n  const [savedBanList, setSavedBanList] = useState([]);\n  const [isShowBanModal, setIsShowBanModal] = useState(false);\n  // const [hasNextPage, setHasNextPage] = useState(true);\n  // const { hasNextPage, list } = useSelector((state) => ({ ...state.forumList }));\n\n  const {\n    id,\n    title,\n    forum_category,\n    description,\n    banner_image,\n    master_nickname,\n    thumbnail_image,\n    forum_staffs,\n    forbidden_words,\n    bans\n  } = useSelector((state) => ({\n    ...state.forumInfo\n  }));\n\n  const [forumInfo, setForumInfo] = useState({\n    id,\n    title,\n    forum_category,\n    description,\n    master_nickname,\n    [IMAGE_TYPE_BANNER]: banner_image,\n    [IMAGE_TYPE_THUMBNAIL]: thumbnail_image,\n    [`${IMAGE_TYPE_BANNER}_filename`]: '',\n    [`${IMAGE_TYPE_THUMBNAIL}_filename`]: '',\n    [USER_LIST_STAFF]: forum_staffs,\n    forbidden_words,\n    [USER_LIST_BAN]: bans\n  });\n\n  const { user } = useSelector((state) => ({\n    ...state.searchUser\n  }));\n\n  const [errors, setErrors] = useState({\n    title: '',\n    forum_category: '',\n    description: '',\n    [IMAGE_TYPE_BANNER]: '',\n    [IMAGE_TYPE_THUMBNAIL]: ''\n  });\n  const [isAllForum, setIsAllForum] = useState(false);\n  const [category, setCategory] = useState(0);\n  const [banWord, setBanWord] = useState();\n  const params = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const onEdit = () => {\n    const formData = new FormData();\n    formData.append('id', forumInfo.id);\n    formData.append('title', forumInfo.title);\n    formData.append('forum_category', forumInfo.forum_category.id);\n    formData.append('description', forumInfo.description);\n    formData.append('master_nickname', forumInfo.master_nickname);\n    forumInfo.forum_staffs.map((item) => formData.append('forum_staffs', item));\n    forumInfo.forbidden_words.map((item) => formData.append('forbidden_words', item));\n    forumInfo.bans.map((item) => formData.append('bans', item));\n\n    // if (typeof forumInfo.banner_image === 'string') formData.append(IMAGE_TYPE_BANNER, forumInfo.banner_image);\n    if (forumInfo.banner_image.constructor.name === 'Blob')\n      formData.append(IMAGE_TYPE_BANNER, forumInfo.banner_image, forumInfo.banner_image_filename);\n    // if (typeof forumInfo.thumbnail_image === 'string') formData.append(IMAGE_TYPE_BANNER, forumInfo.thumbnail_image);\n    if (forumInfo.thumbnail_image.constructor.name === 'Blob')\n      formData.append(IMAGE_TYPE_BANNER, forumInfo.thumbnail_image, forumInfo.thumbnail_image_filename);\n\n    console.log('formData::', formData);\n    dispatch(reqForumEdit({ navigate, formData, id }));\n  };\n\n  const onSetWordsList = () => {\n    if (forumInfo.forbidden_words?.findIndex((item) => item === banWord) === -1 && banWord) {\n      setForumInfo({ ...forumInfo, forbidden_words: [...forumInfo.forbidden_words, banWord] });\n    }\n  };\n\n  const onDeleteWordsList = (word) => {\n    const arr = forumInfo.forbidden_words.filter((item) => item !== word);\n    setFobiddenList(arr);\n    setForumInfo({ ...forumInfo, forbidden_words: arr });\n  };\n\n  const onSearchUserList = (userType) => {\n    dispatch(reset());\n    setSearchType(userType);\n    if (userType === USER_LIST_BAN) {\n      dispatch(reqsearchUser({ id: banKeyWord }));\n      setStaffKeyword('');\n    }\n    if (userType === USER_LIST_STAFF) {\n      console.log('userType::::', userType);\n      dispatch(reqsearchUser({ id: staffKeyword }));\n      setBanKeyWord('');\n    }\n  };\n\n  const onSetList = (userId, userType) => {\n    // if (userType === USER_LIST_BAN) setSearchUserList([]);\n    if (userType === USER_LIST_STAFF) {\n      if (savedStaffList.findIndex((item) => item === userId) === -1) setSavedStaffList([...savedStaffList, userId]);\n    }\n    if (userType === USER_LIST_BAN) {\n      if (savedBanList.findIndex((item) => item === userId) === -1) setSavedBanList([...savedBanList, userId]);\n    }\n    if (forumInfo[userType]?.findIndex((item) => item.id === userId) === -1) {\n      setForumInfo({ ...forumInfo, [userType]: [...forumInfo[userType], userId] });\n    }\n    dispatch(reset());\n    setSearchUserList([]);\n  };\n  // const onSearch = () => {\n  //   console.log('search', action);\n  //   dispatch(action(staffKeyword));\n  // };\n\n  const onDeleteList = (userId, userType) => {\n    let arr = [];\n    console.log(userId);\n    console.log(userType);\n    if (userType === USER_LIST_STAFF) {\n      arr = savedStaffList.filter((item) => item !== userId);\n      setSavedStaffList(arr);\n    }\n    if (userType === USER_LIST_BAN) {\n      arr = savedBanList.filter((item) => item !== userId);\n      setSavedBanList(arr);\n    }\n  };\n\n  useEffect(() => {\n    setFobiddenList(forumInfo.forbidden_words);\n  }, [forumInfo]);\n\n  useEffect(() => {\n    dispatch(reqCategoryList());\n  }, []);\n\n  useEffect(() => {\n    dispatch(reqForumInfo(params.id));\n  }, [params]);\n\n  useEffect(() => {\n    // banKeyWord, setBanKeyWord] = useState('');\n    setSearchUserList(user);\n  }, [user]);\n\n  return (\n    <div id=\"wrap\">\n      <Header />\n      <div id=\"main\">\n        <div id=\"container\">\n          <ForumTop />\n          <div className=\"main_div\">\n            <div className=\"con_div\">\n              <div className=\"creat_div\">\n                <div className=\"content_subtitle creat\">\n                  <h4 className=\"title creat\">Edit a Forum</h4>\n                  <div className=\"title_menu\">\n                    <button type=\"button\" className=\"text_btn\" onClick={() => navigate(-1)}>\n                      <span>Cancle</span>\n                    </button>\n                  </div>\n                </div>\n                <div className=\"creat_form\">\n                  <span className=\"info title\">Required Information</span>\n                  <Info\n                    forumInfo={forumInfo}\n                    setForumInfo={setForumInfo}\n                    errors={errors}\n                    setErrors={setErrors}\n                    editType=\"edit\"\n                  />\n                  <span className=\"img title\">Image Registration</span>\n                  <div className=\"form_div\">\n                    <CropImg2\n                      imgType={IMAGE_TYPE_THUMBNAIL}\n                      cropWidth={THUMBNAIL_IMAGE_WIDTH}\n                      cropHeight={THUMBNAIL_IMAGE_HEIGHT}\n                      errors={errors}\n                      setErrors={setErrors}\n                      forumInfo={forumInfo}\n                      setForumInfo={setForumInfo}\n                    />\n                    <CropImg2\n                      imgType={IMAGE_TYPE_BANNER}\n                      cropWidth={BANNER_IMAGE_WIDTH}\n                      cropHeight={BANNER_IMAGE_HEIGHT}\n                      errors={errors}\n                      setErrors={setErrors}\n                      forumInfo={forumInfo}\n                      setForumInfo={setForumInfo}\n                    />\n                  </div>\n                  <span className=\"staff title\">Staff Member</span>\n                  <div className=\"form_div\">\n                    <div>\n                      <div>\n                        <span className=\"form_title\">Add a Staff</span>\n                        <div className=\"drop_wrap\">\n                          <div\n                            className={classNames('select', {\n                              active: searchUserList?.length > 0 && searchType === USER_LIST_STAFF\n                            })}\n                          >\n                            <div className=\"selected_input\">\n                              <div className=\"form_wrap\">\n                                <span className=\"form_cell form_input input_lg\">\n                                  <input\n                                    type=\"text\"\n                                    value={staffKeyword}\n                                    placeholder=\"Search a Member\"\n                                    onChange={(e) => setStaffKeyword(e.target.value)}\n                                  />\n                                  <button\n                                    className=\"btn_input input_search\"\n                                    onClick={() => onSearchUserList(USER_LIST_STAFF)}\n                                  >\n                                    <span className=\"a11y\">검색</span>\n                                  </button>\n                                </span>\n                              </div>\n                            </div>\n                            <ul>\n                              {searchType === USER_LIST_STAFF &&\n                                searchUserList?.map((item) => (\n                                  <li\n                                    className=\"option\"\n                                    onClick={() => onSetList(item.id, USER_LIST_STAFF)}\n                                    aria-hidden\n                                    key={item.id}\n                                  >\n                                    <dl className=\"search_list\">\n                                      <dt>\n                                        <img src={userThumb} alt=\"\" />\n                                      </dt>\n                                      <dd>\n                                        <span className=\"point\">love</span>*{item.id}_KY643L\n                                      </dd>\n                                    </dl>\n                                  </li>\n                                ))}\n                            </ul>\n                          </div>\n                        </div>\n                        {savedStaffList?.length > 0 && (\n                          <AddedList userList={savedStaffList} onDeleteList={onDeleteList} userType={USER_LIST_STAFF} />\n                        )}\n                        <ul className=\"guide\">\n                          <li>\n                            Staff are authorized to edit images and information in the forum and process posts and\n                            comments.\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                  <span className=\"block title\">Black List</span>\n                  <div className=\"form_div\">\n                    <div>\n                      <span className=\"form_title\">Forbidden Words</span>\n                      <div className=\"form_wrap Vgroup\">\n                        <span className=\"form_cell form_input input_lg\" onChange={(e) => setBanWord(e.target.value)}>\n                          <input type=\"text\" placeholder=\"Please enter the word\" />\n                          <span className=\"guide_text num\">\n                            <span>{banWord ? banWord.length : '0'}</span>/20\n                          </span>\n                        </span>\n                        <button type=\"button\" className=\"btn primary_line button_lg\" onClick={() => onSetWordsList()}>\n                          <span>Add</span>\n                        </button>\n                      </div>\n                      <div className=\"hashtag_box\">\n                        {fobiddenList?.map((item) => (\n                          <button type=\"button\" className=\"hashtag\">\n                            <span>{item}</span>\n                            <span className=\"delete\" onClick={() => onDeleteWordsList(item)} aria-hidden />\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n                    {/* <div>\n                      <span className=\"form_title\">Banned User</span>\n                      <div className=\"drop_wrap\">\n                        <div className={classNames('select', { active: searchUserList?.length > 0 })}>\n                          <div className=\"form_wrap msg\">\n                            <span className=\"form_cell form_input input_lg\">\n                              <input\n                                type=\"text\"\n                                placeholder=\"Search a Member\"\n                                onChange={(e) => setBanKeyWord(e.target.value)}\n                              />\n                              <button\n                                className=\"btn_input input_search\"\n                                onClick={() => onSearchUserList(USER_LIST_BAN)}\n                              >\n                                <span className=\"a11y\">검색</span>\n                              </button>\n                            </span>\n                          </div>\n                          <ul>\n                            {searchType === USER_LIST_BAN &&\n                              searchUserList?.map((item) => (\n                                <li className=\"option\" onClick={() => onSetList(item.id, USER_LIST_BAN)} aria-hidden>\n                                  <dl className=\"search_list\">\n                                    <dt>\n                                      <img src={userThumb} alt=\"\" />\n                                    </dt>\n                                    <dd>\n                                      <span className=\"point\">love</span>*{item.id}_KY643L\n                                    </dd>\n                                  </dl>\n                                </li>\n                              ))}\n                          </ul>\n                          <UserList2 forumInfo={forumInfo} setForumInfo={setForumInfo} userType={USER_LIST_BAN} />\n                        </div>\n                        <AddedList userList={savedBanList} onDeleteList={onDeleteList} userType={USER_LIST_BAN} />\n                      </div>\n                    </div> */}\n                    {/* <Search action={(val) => reqsearchUser({ id: val })} />\n                    <UserList2 forumInfo={forumInfo} setForumInfo={setForumInfo} type={USER_LIST_BAN} /> */}\n                    <div>\n                      <span className=\"form_title\">Banned User</span>\n                      <div className=\"drop_wrap\">\n                        <div\n                          className={classNames('select', {\n                            active: searchUserList?.length > 0 && searchType === USER_LIST_BAN\n                          })}\n                        >\n                          <div className=\"selected_input\">\n                            <div className=\"form_wrap\">\n                              <span className=\"form_cell form_input input_lg\">\n                                <input\n                                  type=\"text\"\n                                  placeholder=\"Search a Member\"\n                                  onChange={(e) => setBanKeyWord(e.target.value)}\n                                />\n                                <button\n                                  className=\"btn_input input_search\"\n                                  onClick={() => onSearchUserList(USER_LIST_BAN)}\n                                >\n                                  <span className=\"a11y\">검색</span>\n                                </button>\n                              </span>\n                            </div>\n                          </div>\n                          <ul>\n                            {searchType === USER_LIST_BAN &&\n                              searchUserList?.map((item) => (\n                                <li className=\"option\" onClick={() => onSetList(item.id, USER_LIST_BAN)} aria-hidden>\n                                  <dl className=\"search_list\">\n                                    <dt>\n                                      <img src={userThumb} alt=\"\" />\n                                    </dt>\n                                    <dd>\n                                      <span className=\"point\">love</span>*{item.id}_KY643L\n                                    </dd>\n                                  </dl>\n                                </li>\n                              ))}\n                          </ul>\n                          <AddedList userList={savedBanList} onDeleteList={onDeleteList} userType={USER_LIST_BAN} />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"page_btn_wrap full\">\n                  <button type=\"button\" className=\"btn primary button_xl\" onClick={() => onEdit()}>\n                    <span>Save a Forum</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n            {/* <!-- E :  Forum 게시판 생성 ddd --> */}\n            {/* Right Banner Start */}\n            <div className=\"right_div\">\n              <WriteBtn forumId={params.id} />\n              <SideImgBanner />\n              <HistoryBanner setIsShow={setIsAllForum} setCategory={setCategory} />\n              <ForumCategoryBanner setIsShow={setIsAllForum} setCategory={setCategory} />\n            </div>\n            {/* Right Banner End */}\n          </div>\n        </div>\n        <ModalBanWord\n          isShowModal={isShowBanModal}\n          setIsShowBanModal={setIsShowBanModal}\n          setForumInfo={setForumInfo}\n          onDeleteList={onDeleteList}\n        />\n        <Footer />\n      </div>\n      <AllForum isShow={isAllForum} setIsShow={setIsAllForum} category={category} />\n    </div>\n  );\n}\n\nexport default Edit;\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from 'components/common/header/Header';\nimport Footer from 'components/common/footer/Footer';\nimport ForumTop from 'components/Forum/ForumTop';\nimport SideImgBanner from 'components/Forum/SideBanner/SideImgBanner';\nimport HistoryBanner from 'components/Forum/SideBanner/HistoryBanner';\nimport ForumCategoryBanner from 'components/Forum/SideBanner/ForumCategoryBanner';\nimport { reqForumInfo } from 'redux/store/forum/forumInfoSlice';\nimport userThumb from 'html/img/com/user thumb.png';\nimport WriteBtn from 'components/Forum/SideBanner/WriteBtn';\nimport AllForum from 'components/Forum/AllForum/AllForum';\n\nfunction InitSetting() {\n  const { id, title, forum_category, description, banner_image, thumbnail_image, forum_staffs, forbidden_words, bans } =\n    useSelector((state) => ({\n      ...state.forumInfo\n    }));\n  const [isAllForum, setIsAllForum] = useState(false);\n  const [category, setCategory] = useState(0);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const params = useParams();\n\n  useEffect(() => {\n    dispatch(reqForumInfo(params.id));\n  }, []);\n  return (\n    <div id=\"wrap\">\n      <Header />\n      <div id=\"main\">\n        <div id=\"container\">\n          <ForumTop />\n          <div className=\"main_div\">\n            <div className=\"con_div\">\n              <div>\n                <div className=\"content_subtitle creat\">\n                  <h4 className=\"title creat\">Settings</h4>\n                  <div className=\"title_menu\">\n                    <button type=\"button\" className=\"btn button_md black\" onClick={() => navigate(`/forum/${id}/auth`)}>\n                      <span>Transfer of authority to Staff</span>\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn primary button_md edit\"\n                      onClick={() => navigate(`/forum/${id}/edit`)}\n                    >\n                      <span>Edit a Forum</span>\n                    </button>\n                  </div>\n                </div>\n                <div className=\"forum_setting\">\n                  <div>\n                    <div className=\"setting_title\">\n                      <div className=\"title required\">Forum Name</div>\n                    </div>\n                    <div className=\"forum_name\">{title}</div>\n                  </div>\n                  <div>\n                    <div className=\"setting_title\">\n                      <div className=\"title required\">Category</div>\n                    </div>\n                    <div className=\"forum_category\">{forum_category.title}</div>\n                  </div>\n                  <div>\n                    <div className=\"setting_title\">\n                      <div className=\"title required\">Introduction</div>\n                    </div>\n                    <div className=\"forum_info\">{description}</div>\n                  </div>\n                  {/* <div>\n                    <div className=\"setting_title\">\n                      <div className=\"title img\">\n                        Forum Thumbnail <em>(Option)</em>\n                      </div>\n                      <span className=\"text\">\n                        Images less than 10MB\n                        <br />\n                        <span className=\"point\">200 x 200px</span>\n                      </span>\n                    </div>\n                    <div />\n                  </div> */}\n                  <div>\n                    <div className=\"setting_title\">\n                      <div className=\"title img\">\n                        Forum Thumbnail <em>(Option)</em>\n                      </div>\n                      <span className=\"text\">\n                        Images less than 10MB\n                        <br />\n                        <span className=\"point\">200 x 200px</span>\n                      </span>\n                    </div>\n                    <div className=\"forum_thum\">\n                      <img src={thumbnail_image} alt=\"\" />\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"setting_title\">\n                      <div className=\"title img\">\n                        Forum Top Image <em>(Option)</em>\n                      </div>\n                      <span className=\"text\">\n                        Images less than 10MB\n                        <br />\n                        <span className=\"point\">1280 x 268px</span>\n                      </span>\n                    </div>\n                    <div className=\"forum_top\">\n                      <img src={banner_image} alt=\"\" />\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"setting_title\">\n                      <div className=\"title staff\">\n                        Staff <em>(Option)</em>\n                      </div>\n                    </div>\n                    <div>\n                      <ul className=\"staff_list\">\n                        {forum_staffs?.map((item) => (\n                          <li key={item.id}>\n                            <dl>\n                              <dt>\n                                <img src={item.profile_image || userThumb} alt=\"\" />\n                              </dt>\n                              <dd>{item.username}</dd>\n                            </dl>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"setting_title\">\n                      <div className=\"title block\">Forbidden Words</div>\n                    </div>\n                    <div className=\"forum_block\">\n                      <div className=\"tag_box\">\n                        {forbidden_words?.map((word) => (\n                          <button type=\"button\" className=\"tag\">\n                            <span>{word}</span>\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"setting_title\">\n                      <div className=\"title block\">Banned User</div>\n                    </div>\n                    <div>\n                      <ul className=\"block_list\">\n                        {bans?.map((nickname) => (\n                          <li>\n                            <dl className=\"open_tip\">\n                              <dt>\n                                <img src={userThumb} alt=\"\" />\n                              </dt>\n                              <dd>{nickname}</dd>\n                            </dl>\n                            <div className=\"tooltip bottom\">\n                              <span>\n                                <span className=\"point\">Reasons</span> : Restricted for causing frequent swear words and\n                                troubles in the forum.\n                              </span>\n                            </div>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {/* Right Banner Start */}\n            <div className=\"right_div\">\n              <WriteBtn forumId={params.id} />\n              <SideImgBanner />\n              <HistoryBanner setIsShow={setIsAllForum} setCategory={setCategory} />\n              <ForumCategoryBanner setIsShow={setIsAllForum} setCategory={setCategory} />\n            </div>\n            {/* Right Banner End */}\n          </div>\n        </div>\n        <Footer />\n      </div>\n      <AllForum isShow={isAllForum} setIsShow={setIsAllForum} category={category} />\n    </div>\n  );\n}\n\nexport default InitSetting;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useSelector } from 'react-redux';\n// import RankingSlide from 'components/Forum/Home/ForumRanking/RankingSlide';\n// import { reqForumIdPostList } from 'redux/store/forum/forumIdPostListSlice';\nimport RankingSlide from 'components/Forum/Home/ForumRanking/RankingSlide';\nimport { useNavigate } from 'react-router';\n\nfunction PostItem({ item, navigate, forumId, idx }) {\n  const { title, comment_count, visit_count, thumbnail_image_url, id } = item;\n  return (\n    <div onClick={() => navigate(`/forum/${forumId}/post/${id}`)} aria-hidden>\n      <dl className=\"forum_thum_list small\">\n        <dt className=\"forum_thum_img\">\n          <img src={thumbnail_image_url} alt=\"\" />\n          <div className=\"rank\">\n            <span\n              className={classNames(\n                'rank_badge_small',\n                { gold: idx === 0 },\n                { silver: idx === 1 },\n                { bronze: idx === 2 },\n                { normal: idx > 2 }\n              )}\n            >\n              {idx > 2 && <span>{idx + 1}</span>}\n            </span>\n          </div>\n          <div className=\"best\">\n            <span className=\"post_badge_best live\" />\n          </div>\n          <div className=\"badge\">\n            <span className=\"post_badge new\" />\n            <span className=\"post_badge great\" />\n          </div>\n        </dt>\n        <dd className=\"forum_thum_text\">\n          <span className=\"msg\">\n            {title} <span className=\"num\">({comment_count})</span>\n          </span>\n        </dd>\n      </dl>\n      <div className=\"forum_thum_list_info\">\n        <div className=\"emoji_group\">\n          <span className=\"emoji like\" />\n          <span className=\"emoji fun\" />\n          <span className=\"emoji_num\">926</span>\n        </div>\n        <div className=\"view_num\">\n          <span>{visit_count}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction BestPost({ forumId }) {\n  const { forumIdPostList } = useSelector((state) => ({ ...state.forumIdPostList }));\n  const navigate = useNavigate();\n  // useEffect(() => {\n  //   dispatch(reqForumIdPostList({ forumId, page_size: 10 }));\n  // }, []);\n  return (\n    <div className=\"best_post\">\n      <div className=\"content_subtitle\">\n        <h4 className=\"h4Type eng\">Best Post</h4>\n      </div>\n      <div className=\"forum_best_post_list\">\n        <div className=\"swiper\">\n          <div className=\"swiper_img\">\n            <RankingSlide slideCount={5}>\n              {forumIdPostList.map((item, idx) => (\n                <PostItem key={item} item={item} navigate={navigate} forumId={forumId} idx={idx} />\n              ))}\n            </RankingSlide>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BestPost;\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reqForumRankingList } from 'redux/store/forum/forumRankingListSlice';\nimport classNames from 'classnames';\n\nfunction Top5Forums() {\n  const { rankingList } = useSelector((state) => ({ ...state.forumRankingList }));\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(reqForumRankingList({ page: 1, page_size: 5 }));\n  }, []);\n  return (\n    <div className=\"top5\">\n      <div className=\"content_subtitle\">\n        <h4 className=\"h4Type eng\">Top 5 Forums</h4>\n      </div>\n      <ul className=\"top5_list\">\n        {rankingList?.map((item, idx) => (\n          <li key={item.id} onClick={() => navigate(`/forum/${item.id}/theme`)} aria-hidden>\n            <div className=\"top5_rank\">\n              <span\n                className={classNames(\n                  'rank_badge_xs',\n                  { gold: idx === 0 },\n                  { silver: idx === 1 },\n                  { bronze: idx === 2 },\n                  { normal: idx > 2 }\n                )}\n              >\n                {idx > 2 && <span>{idx + 1}</span>}\n              </span>\n              <span className=\"ranknum up blank\">{Math.floor(Math.random() * 5) + 1}</span>\n            </div>\n            <div className=\"top5_img\">\n              <img src={item.thumbnail_image} alt=\"right\" />\n            </div>\n            <span className=\"top5_name\">{item.title}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Top5Forums;\n","/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport classNames from 'classnames';\nimport userThumbImg from 'html/img/com/user thumb.png';\n// import bestForumThumbImg from 'html/img/com/forum_best_Thumb.png';\nimport { dateCalculation } from 'utils/dateCalculation';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Item(props) {\n  const navigate = useNavigate();\n  return (\n    <li onClick={() => navigate(`/forum/${props.info.forum}/post/${props.info.id}`)} aria-hidden>\n      <dl className=\"forum_thum_list big\">\n        <dt className=\"forum_thum_img\">\n          <img src={props.info.thumbnail_image_url} alt=\"\" />\n          {/* 순위는 1~3위까지만 */}\n          <div className=\"rank\">\n            <span\n              className={classNames(\n                'rank_badge_small',\n                { gold: props.idx === 0 },\n                { silver: props.idx === 1 },\n                { bronze: props.idx === 2 },\n                { normal: props.idx > 2 }\n              )}\n            >\n              {props.idx > 2 && <span>{props.idx + 1}</span>}\n            </span>\n          </div>\n          {/* 뱃지는 최대 4개까지 */}\n          {Math.floor(Math.random() * 2) === 1 && (\n            <div className=\"best\">\n              <span className=\"post_badge_best live\" />\n            </div>\n          )}\n          {/* 뱃지는 최대 2개까지 */}\n          <div className=\"badge\">\n            {Math.floor(Math.random() * 2) === 1 && <span className=\"post_badge new\" />}\n            {Math.floor(Math.random() * 2) === 1 && <span className=\"post_badge great\" />}\n          </div>\n          <div className=\"img_over\">\n            <div className=\"user_info\">\n              <div className=\"user_thum\">\n                <img src={userThumbImg} alt=\"\" />\n              </div>\n              <dl>\n                <dt className=\"user_name\">{props.info.name}</dt>\n                <dd className=\"user_date\">{dateCalculation(props.info.created)}</dd>\n              </dl>\n            </div>\n            {/* eslint-disable-next-line react/no-danger */}\n            <div className=\"text\" dangerouslySetInnerHTML={{ __html: props.info.content_summary }} />\n          </div>\n        </dt>\n        <dd className=\"forum_thum_text\">\n          <span className=\"msg\">\n            {props.info.title}\n            <span className=\"num\">({props.info.comment_count})</span>\n          </span>\n        </dd>\n      </dl>\n      <div className=\"forum_thum_list_info\">\n        <div className=\"emoji_group\">\n          <span className=\"emoji like\" />\n          <span className=\"emoji fun\" />\n          <span className=\"emoji_num\">{props.info.like_count}</span>\n        </div>\n        <div className=\"view_num\">\n          <span>{props.info.visit_count}</span>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Item;\n","import React, { useState, useEffect } from 'react';\nimport useToggle from 'hook/useToggle';\nimport { useParams } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFourmPostsInit } from 'redux/store/forum/fourmPostSlice';\nimport { Loader } from 'components/idist/Loader';\nimport classNames from 'classnames';\nimport Item from './Item';\n\nfunction FilterPopup({ isVisible, setIsFilterVisible, schOption, setSchOption }) {\n  const arrPeriod = [\n    { id: 1, text: 'A week' },\n    { id: 2, text: '3 month' },\n    { id: 3, text: 'Select a text' }\n  ];\n  return (\n    <div className=\"filter_popup\" style={{ display: isVisible ? 'inline-block' : 'none' }}>\n      <ul className=\"filter_terms\">\n        <li>\n          <dl>\n            <dt>Sort by</dt>\n            <dd>\n              <div className=\"radio_button\">\n                <div className=\"radio_wrap double\">\n                  <span className=\"form_cell btn_radio size_sm\">\n                    <input\n                      type=\"radio\"\n                      id=\"radio1\"\n                      valeu={1}\n                      defaultChecked\n                      onClick={(e) => setSchOption({ ...schOption, sort: e.target.value })}\n                    />\n                    <label htmlFor=\"radio1\">\n                      <span>Latest order</span>\n                    </label>\n                  </span>\n                  <span className=\"form_cell btn_radio size_sm\">\n                    <input\n                      type=\"radio\"\n                      id=\"radio2\"\n                      valeu={1}\n                      onClick={(e) => setSchOption({ ...schOption, sort: e.target.value })}\n                    />\n                    <label htmlFor=\"radio2\">\n                      <span>Popular order</span>\n                    </label>\n                  </span>\n                </div>\n              </div>\n            </dd>\n          </dl>\n        </li>\n        <li>\n          <dl>\n            <dt>text</dt>\n            <dd>\n              <div className=\"radio_button\">\n                <div className=\"radio_wrap third\">\n                  {arrPeriod.map((item) => (\n                    <span className=\"form_cell btn_radio size_sm\" key={item.id}>\n                      <input\n                        type=\"radio\"\n                        id=\"radio3\"\n                        value={item.id}\n                        onClick={(e) => setSchOption({ ...schOption, date: e.target.value })}\n                      />\n                      <label htmlFor=\"radio3\">\n                        <span>{item.text}</span>\n                      </label>\n                    </span>\n                  ))}\n                  {/* <span className=\"form_cell btn_radio size_sm\">\n                    <input type=\"radio\" id=\"radio3\" />\n                    <label htmlFor=\"radio3\">\n                      <span>A week</span>\n                    </label>\n                  </span> */}\n                  {/* <span className=\"form_cell btn_radio size_sm\">\n                    <input type=\"radio\" id=\"radio4\" />\n                    <label htmlFor=\"radio4\">\n                      <span>3 month</span>\n                    </label>\n                  </span>\n                  <span className=\"form_cell btn_radio size_sm\">\n                    <input type=\"radio\" id=\"radio5\" />\n                    <label htmlFor=\"radio5\">\n                      <span>Select a text</span>\n                    </label>\n                  </span> */}\n                </div>\n              </div>\n            </dd>\n          </dl>\n        </li>\n        <li>\n          <dl>\n            <dt>Keyword</dt>\n            <dd>\n              <div className=\"form_wrap saerch\">\n                <span className=\"form_cell form_input input_sm\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search ...\"\n                    onChange={(e) => setSchOption({ ...schOption, keyword: e.target.value })}\n                  />\n                  <button className=\"btn_input input_search\">\n                    <span className=\"a11y\">검색</span>\n                  </button>\n                </span>\n              </div>\n            </dd>\n          </dl>\n        </li>\n      </ul>\n      <div className=\"page_btn_wrap\">\n        <button type=\"button\" className=\"cancel\" onClick={() => setIsFilterVisible(false)}>\n          <span>Cancel</span>\n        </button>\n        <button type=\"button\" className=\"done\" onClick={() => setIsFilterVisible(false)}>\n          <span>Done</span>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction List() {\n  const dispatch = useDispatch();\n  const [schOption, setSchOption] = useState({ category: 1, sort: 1 });\n  const [isFilterVisible, setIsFilterVisible] = useToggle(false);\n  const { fourmPosts } = useSelector((state) => state.forumPost);\n  const { id } = useParams();\n  const menu = [\n    { id: 1, text: 'All' },\n    { id: 2, text: 'Best' }\n  ];\n\n  useEffect(() => {\n    dispatch(getFourmPostsInit({ id }));\n  }, []);\n\n  return (\n    // className=\"forum_list\"\n    <div className=\"forum_list\">\n      <div className=\"forum_list_title\">\n        <div>\n          <h3 className=\"h3_title\">Post List</h3>\n          <div>\n            {menu.map((item) => (\n              <button\n                type=\"button\"\n                key={item.id}\n                className={classNames('tab_box', { active: schOption.category === item.id })}\n                onClick={() => setSchOption({ ...schOption, category: item.id })}\n              >\n                <span>{item.text}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n        <div className=\"board_align\">\n          <button type=\"button\" className=\"align filter line\" onClick={() => setIsFilterVisible()}>\n            <span className=\"a11y\">정렬</span>\n          </button>\n          <button type=\"button\" className=\"align gallery\">\n            <span className=\"a11y\">갤러리형식</span>\n          </button>\n          <button type=\"button\" className=\"align list\">\n            <span className=\"a11y\">목록형식</span>\n          </button>\n          <button type=\"button\" className=\"align feed\">\n            <span className=\"a11y\">피드형식</span>\n          </button>\n          <FilterPopup\n            isVisible={isFilterVisible}\n            setIsFilterVisible={setIsFilterVisible}\n            schOption={schOption}\n            setSchOption={setSchOption}\n          />\n        </div>\n      </div>\n      <div className=\"forum_list\">\n        {fourmPosts.message !== 'ok' ? (\n          <div className=\"flex-center\">\n            <Loader />\n          </div>\n        ) : (\n          <ul className=\"main_forum_list\">\n            {fourmPosts.data.map((item, idx) => (\n              <Item info={item} key={item.id} idx={idx} />\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default List;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { reqForumInfo } from 'redux/store/forum/forumInfoSlice';\nimport { setLogOutHistory } from 'redux/store/forum/forumHistorySlice';\nimport { reqForumIdPostList } from 'redux/store/forum/forumIdPostListSlice';\nimport Header from 'components/common/header/Header';\nimport Footer from 'components/common/footer/Footer';\nimport ForumTop from 'components/Forum/ForumTop';\nimport BestPost from 'components/Forum/Theme/BestPost2';\nimport SideImgBanner from 'components/Forum/SideBanner/SideImgBanner';\nimport HistoryBanner from 'components/Forum/SideBanner/HistoryBanner';\nimport ForumCategoryBanner from 'components/Forum/SideBanner/ForumCategoryBanner';\nimport Top5Forums from 'components/Forum/SideBanner/Top5Forums';\nimport List from 'components/Forum/Theme/List';\nimport AllForum from 'components/Forum/AllForum/AllForum';\nimport WriteBtn from '../SideBanner/WriteBtn';\n\nfunction Theme() {\n  const { id, title } = useSelector((state) => ({\n    ...state.forumInfo\n  }));\n  const { forumIdPostList } = useSelector((state) => ({ ...state.forumIdPostList }));\n  const [isAllForum, setIsAllForum] = useState(false);\n  const [category, setCategory] = useState(0);\n\n  const dispatch = useDispatch();\n  const params = useParams();\n\n  useEffect(() => {\n    dispatch(reqForumInfo(params.id));\n    dispatch(reqForumIdPostList({ forumId: params.id, page_size: 5 }));\n  }, []);\n\n  const { history } = useSelector((state) => ({ ...state.forumHistory }));\n\n  useEffect(() => {\n    if (history?.findIndex((item) => item.id === id) === -1 && id) {\n      dispatch(setLogOutHistory({ id, title }));\n    }\n  }, [id]);\n  return (\n    <div id=\"wrap\">\n      <Header />\n      <div id=\"main\">\n        <div id=\"container\">\n          <ForumTop forumId={params.id} />\n          <div className=\"main_div blank\">\n            <div className=\"con_div\">\n              {forumIdPostList.length > 0 && <BestPost forumId={params.id} />}\n              {/* <BestPost forumId={params.id} /> */}\n              <List />\n              {/* E : Forum List */}\n            </div>\n            <div className=\"right_div\">\n              <WriteBtn forumId={params.id} />\n              <SideImgBanner />\n              <HistoryBanner setIsShow={setIsAllForum} setCategory={setCategory} />\n              {/* <ForumListBanner /> */}\n              <ForumCategoryBanner setIsShow={setIsAllForum} setCategory={setCategory} />\n              <Top5Forums />\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n      <AllForum isShow={isAllForum} setIsShow={setIsAllForum} category={category} />\n    </div>\n  );\n}\n\nexport default Theme;\n","/* eslint-disable */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getPostInit,\n  getPostLikesInit,\n  postPostLikeInit,\n  postPostUnlikeInit,\n  postPostDislikeInit,\n  postPostUndislikeInit,\n  postPostShareInit,\n  postPostPinInit,\n  postPostUnPinInit,\n  deletePostInit\n} from 'redux/idistStore/postsSlice';\nimport { reqForumIdPostList } from 'redux/store/forum/forumIdPostListSlice';\nimport { useOutletContext } from 'react-router-dom';\nimport { useParams } from 'react-router';\n\nimport { Loader } from 'components/idist/Loader';\n\nimport SharePopup from 'components/idist/popup/SharePopup';\nimport ReportPopup from 'components/idist/popup/ReportPopup';\n\nimport Header from 'components/common/header/Header';\nimport Footer from 'components/common/footer/Footer';\n\nimport PostContent from 'components/common/Post/PostContent';\nimport PostList from 'components/common/Post/PostList';\nimport PostRecent from 'components/common/Post/PostRecent';\n\nimport 'assets/scss/post.scss';\nimport 'assets/scss/main.scss';\n\nfunction Posts() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [openPopup, setOpenPopup] = useState(false);\n  const { post, like } = useSelector((state) => state.post);\n  const { forumIdPostList } = useSelector((state) => state.forumIdPostList);\n  const { id, postId } = useParams();\n  const clubId = useOutletContext();\n  const [listState, setListState] = useState(false);\n  const [disListState, setDisListState] = useState(false);\n  const [likeCount, setLikeCount] = useState(0);\n  const [disLikeCount, setDisLikeCount] = useState(0);\n  const [openETC, setOpenETC] = useState(false);\n  const [reportOpen, setReportOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(getPostInit({ id: postId }));\n    dispatch(getPostLikesInit({ id: postId }));\n  }, [postId]);\n\n  useEffect(() => {\n    if (id) dispatch(reqForumIdPostList({ forumId: id }));\n  }, [id]);\n  useEffect(() => {\n    if (post?.data) {\n      setListState(post?.data?.is_liked);\n      setDisListState(post?.data?.is_disliked);\n      setLikeCount(post?.data?.like_count);\n      setDisLikeCount(post?.data?.dislike_count);\n      localStorage.setItem('board', post.data.board_title);\n      localStorage.setItem('boardGroup', post.data.board_group_title);\n    }\n  }, [post]);\n  console.log('post', post);\n  const handleClickPin = (pin) => {\n    if (pin) {\n      dispatch(\n        postPostUnPinInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    } else {\n      dispatch(\n        postPostPinInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    }\n  };\n  const handleClickLike = () => {\n    setListState(!listState);\n    setDisListState(false);\n    if (listState) {\n      setLikeCount(likeCount - 1);\n      dispatch(\n        postPostUnlikeInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    } else {\n      setLikeCount(likeCount + 1);\n      dispatch(\n        postPostLikeInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    }\n  };\n  const handleClickDisLike = (disLike) => {\n    setDisListState(!disListState);\n    setListState(false);\n    if (disListState) {\n      setDisLikeCount(disLikeCount - 1);\n      dispatch(\n        postPostUndislikeInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    } else {\n      setDisLikeCount(disLikeCount + 1);\n      dispatch(\n        postPostDislikeInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    }\n  };\n\n  const handleClickShare = (link) => {\n    dispatch(postPostShareInit({ id: id, parameters: { link: link } }));\n  };\n  const deletePost = (id, club, board) => {\n    if (confirm('Are you sure you want to delete the post?')) {\n      dispatch(deletePostInit({ id: id }));\n      navigate(`/forum/1/theme`);\n    }\n  };\n  const postNavigate = () => {\n    navigate(`/forum/${id}`);\n  };\n\n  if (post.message !== 'ok')\n    return (\n      <div className=\"flex-center\">\n        <Loader />\n      </div>\n    );\n  return (\n    <div>\n      <Header />\n      <div className=\"main\">\n        <div className=\"posts container\">\n          <div className=\"item\">\n            <PostContent\n              type=\"forum\"\n              postNavigate={postNavigate}\n              post={post}\n              clubId={clubId}\n              openETC={openETC}\n              setOpenETC={setOpenETC}\n              deletePost={deletePost}\n              setReportOpen={setReportOpen}\n              reportOpen={reportOpen}\n              like={like}\n              listState={listState}\n              likeCount={likeCount}\n              openPopup={openPopup}\n              setOpenPopup={setOpenPopup}\n              handleClickPin={handleClickPin}\n              disListState={disListState}\n              disLikeCount={disLikeCount}\n              handleClickLike={handleClickLike}\n              handleClickDisLike={handleClickDisLike}\n            />\n            <PostList\n              type=\"forum\"\n              prev={post?.data?.prev_post}\n              next={post?.data?.next_post}\n              post={forumIdPostList}\n              id={id}\n            />\n            <PostRecent type=\"forum\" post={forumIdPostList} id={id} />\n          </div>\n          {/* 사이드바 */}\n          <div className=\"item\">\n            {/* {clubId.data.profile ? <Profile userData={clubId.data.profile} type={'club'} /> : <Profile type={'logout'} />}\n        <SideEvent id={id} />\n        <HotPosts />\n        <SideMember /> */}\n            {/* <div className=\"chatting\">\n              <img src={require(`images/main/chatting.png`)} alt=\"\" />\n            </div> */}\n          </div>\n\n          <SharePopup open={openPopup} setOpen={setOpenPopup} sharefuc={handleClickShare} />\n          <ReportPopup open={reportOpen} setOpen={setReportOpen} />\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Posts;\n","/* eslint-disable */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getPostInit, patchPostInit } from 'redux/idistStore/postsSlice';\nimport { getFourmPostsInit, postFourmPostInit, fourmReset } from 'redux/store/forum/fourmPostSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport Header from 'components/common/header/Header';\nimport Footer from 'components/common/footer/Footer';\nimport Writing from 'components/common/Writing';\nimport 'assets/scss/club.scss';\nimport 'assets/scss/jodit.scss';\n\nfunction ForumWriting(props) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  //   const { boardGroups } = useSelector((state) => state.club);\n  const { fourmPosts } = useSelector((state) => state.forumPost);\n  const { posts, post } = useSelector((state) => state.post);\n  const { id, postId } = useParams();\n  const [checkedList, setCheckedList] = useState([]);\n  const [pwdPopupOpen, setPwdPopupOpen] = useState(false);\n  const [popupContent, setPopupContent] = useState('');\n  const [postsData, setPostsData] = useState({\n    title: '',\n    content: ''\n  });\n\n  useEffect(() => {\n    dispatch(fourmReset());\n  }, []);\n\n  useEffect(() => {\n    if (postId !== undefined) {\n      dispatch(getPostInit({ id: postId }));\n    }\n  }, [postId]);\n\n  useEffect(() => {\n    if (fourmPosts.data && id) {\n      navigate(`/forum/${id}/post/${fourmPosts.data[0].id}`);\n    }\n  }, [fourmPosts.data]);\n\n  useEffect(() => {\n    if (fourmPosts.message === 'ok' && postId !== undefined) {\n      setPostsData({\n        title: fourmPosts.data.title,\n        content: fourmPosts.data.content\n      });\n    }\n  }, [fourmPosts]);\n\n  useEffect(() => {\n    if (post.message === 'ok' && postId !== undefined) {\n      setPostsData({\n        title: post.data.title,\n        content: post.data.content\n      });\n    }\n  }, [post]);\n\n  // 게시글 생성\n  const postsCreate = (temp) => {\n    console.log('postId', postId);\n\n    if (postsData.title === '') {\n      setPwdPopupOpen(true);\n      setPopupContent('Please enter a title.');\n      return false;\n    }\n\n    if (postId !== undefined) {\n      dispatch(\n        patchPostInit({\n          id: postId,\n          parameters: postsData\n          // actionList: [{ type: getPostsInit.type, payload: { parameters: { is_temporary: true } } }]\n        })\n      );\n      setTimeout(() => {\n        navigate(`/forum/1/post/${post.data.id}`);\n      }, 500);\n    } else {\n      dispatch(\n        postFourmPostInit({\n          id: id,\n          parameters: postsData,\n          actionList: [{ type: getFourmPostsInit.type, payload: { id: id } }]\n        })\n      );\n    }\n  };\n  return (\n    <div>\n      <Header />\n      <div className=\"main\">\n        <Writing\n          posts={posts}\n          type={'forum'}\n          setPostsData={setPostsData}\n          postsData={postsData}\n          postsCreate={postsCreate}\n          checkedList={checkedList}\n          setPwdPopupOpen={setPwdPopupOpen}\n          pwdPopupOpen={pwdPopupOpen}\n          setPopupContent={setPopupContent}\n          popupContent={popupContent}\n          setCheckedList={setCheckedList}\n        />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ForumWriting;\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Header from 'components/common/header/Header';\nimport Footer from 'components/common/footer/Footer';\nimport ForumTop from 'components/Forum/ForumTop';\nimport SideImgBanner from 'components/Forum/SideBanner/SideImgBanner';\nimport HistoryBanner from 'components/Forum/SideBanner/HistoryBanner';\nimport ForumListBanner from 'components/Forum/SideBanner/ForumCategoryBanner';\nimport Top5Forums from 'components/Forum/SideBanner/Top5Forums';\nimport { reqForumInfo } from 'redux/store/forum/forumInfoSlice';\nimport WriteBtn from 'components/Forum/SideBanner/WriteBtn';\n\nfunction TransferAuth() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  useEffect(() => {\n    dispatch(reqForumInfo(params.id));\n  }, []);\n\n  return (\n    <div id=\"wrap\">\n      <Header />\n      <div id=\"main\">\n        <div id=\"container\">\n          <ForumTop />\n          <div className=\"main_div\">\n            <div className=\"con_div\">\n              <div className=\"creat_div\">\n                <div className=\"content_subtitle creat\">\n                  <h4 className=\"title creat\">Transfer of Master Authority</h4>\n                  <div className=\"title_menu\">\n                    <button type=\"button\" className=\"text_btn\" onClick={() => navigate(-1)}>\n                      <span>Cancle</span>\n                    </button>\n                  </div>\n                </div>\n                <div className=\"creat_form\">\n                  <div className=\"power_title\">You can transfer the Forum master authority to staff.</div>\n                  <span className=\"staff title\">Staff Member</span>\n                  <div className=\"form_div\">\n                    <div>\n                      <dl className=\"staff_msg\">\n                        <dt>Select a staff member</dt>\n                        <dd>\n                          There are no staff for this Forum. After <span>appointing staff</span>, you can transfer\n                          authority.\n                        </dd>\n                      </dl>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"page_btn_wrap full\">\n                  <button type=\"button\" className=\"btn primary button_xl\" disabled>\n                    <span>Appointment of Staff</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"right_div\">\n              <WriteBtn forumId={params.id} />\n              <SideImgBanner />\n              <HistoryBanner />\n              <ForumListBanner />\n              <Top5Forums />\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default TransferAuth;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport Home from 'components/Forum/Home/Home';\nimport Create from 'components/Forum/Create/Create';\nimport Edit from 'components/Forum/Create/Edit';\nimport InitSetting from 'components/Forum/Create/InitSetting';\nimport Theme from 'components/Forum/Theme/Theme';\nimport ForumPost from 'components/Forum/Post';\nimport ForumWriting from 'components/Forum/ForumWriting';\nimport TransferAuth from './Theme/TransferAuth';\n\nfunction index() {\n  return (\n    <Routes>\n      <Route path=\":id/theme\" element={<Theme />} />\n      <Route path=\":id/init\" element={<InitSetting />} />\n      <Route path=\":id/auth\" element={<TransferAuth />} />\n      <Route path=\":id/edit\" element={<Edit />} />\n      <Route path=\"create\" element={<Create />} />\n      <Route path=\":id/post/:postId\" element={<ForumPost />} />\n      <Route path=\":id/writing\" element={<ForumWriting />} />\n      <Route path=\":id/writing/:postId\" element={<ForumWriting />} />\n      <Route path=\"/*\" element={<Home />} />\n    </Routes>\n  );\n}\n\nexport default index;\n","/* eslint-disable */\n\nimport React from 'react';\n\nimport 'assets/scss/popup.scss';\nimport 'assets/scss/reset.scss';\nimport { Button } from 'components/idist/Button';\n\nfunction AlertPopup(props) {\n  return (\n    <div className=\"popup-shadow flex-center\" style={{ display: props.open ? 'flex' : 'none' }}>\n      <div className=\"popup-alert relative\">\n        <div className=\"popup-alert-content\">{props.content}</div>\n        <div className=\"popup-alert-actions\">\n          <Button label={'Check'} size=\"l\" onClick={() => props.setOpen()} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AlertPopup;\n","/* eslint-disable */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport dayjs from 'dayjs';\n\nfunction TempPopup(props) {\n  const navigate = useNavigate();\n  const tempChange = (tempItem) => {\n    if (\n      confirm(\n        'When you load a temporary text, the writing\\nyou are creating disappears. Are you sure\\nyou want to load the selected text?'\n      )\n    ) {\n      navigate(`../writing/${tempItem.id}`);\n    }\n  };\n  const allDetele = () => {\n    if (confirm('Are you sure you want to delete all temporary posts?')) {\n      props.tempAllDetele();\n      props.setOpen(!props.open);\n    }\n  };\n  const selectDetele = (id) => {\n    if (confirm('Are you sure you want to delete the selected draft?')) {\n      props.tempSelectDetele(id);\n      props.setOpen(!props.open);\n    }\n  };\n  return (\n    <div className=\"temp-popup\" style={{ display: props.open ? 'block' : 'none' }}>\n      <div className=\"flex-between temp-header\">\n        <div className=\"temp-popup-title\">Save as draft {props.posts?.data?.length || 0}</div>\n        <div className=\"temp-popup-close\" onClick={() => props.setOpen(!props.open)}>\n          X\n        </div>\n      </div>\n      <div className=\"temp-body\">\n        <div className=\"flex-between \">\n          <div className=\"temp-content\">\n            Up to 300 temporary registration\n            <br /> posts are stored in 60 days.\n          </div>\n          <div className=\"temp-delete\" onClick={() => allDetele()}>\n            Delete All\n          </div>\n        </div>\n        <div className=\"temp-lsit\">\n          {props.posts?.data?.map((tempItem, index) => {\n            return (\n              <div className=\"temp-lsit-item flex-between\" key={index}>\n                <div className=\"temp-lsit-item-title\" onClick={() => tempChange(tempItem)}>\n                  {tempItem.title === '' ? 'Untitled' : tempItem.title}\n                </div>\n                <div className=\"temp-lsit-item-actions flex-center\">\n                  <div className=\"temp-lsit-item-date\">{dayjs(tempItem.created).format('YYYY.MM.DD')}</div>\n                  <div className=\"temp-lsit-item-delete\" onClick={() => selectDetele(tempItem.id)}>\n                    <img src={require('images/club/ic-trash.png')} alt=\"\" />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TempPopup;\n","/* eslint-disable */\nimport React, { useState, useEffect, useRef } from 'react';\nimport JoditEditor from 'jodit-react';\nimport { useNavigate } from 'react-router-dom';\nimport ToggleBtn from 'components/idist/ToggleBtn';\nimport { Button } from 'components/idist/Button';\nimport AlertPopup from 'components/idist/popup/AlertPopup';\nimport TempPopup from 'components/idist/popup/tempPopup';\nimport ConfirmPopup from 'components/idist/popup/ConfirmPopup';\nimport 'assets/scss/club.scss';\nimport 'assets/scss/jodit.scss';\n\nfunction Writing(props) {\n  const editor = useRef(null);\n  const navigate = useNavigate();\n  const [isHidePassword, setIsHidePassword] = useState(false);\n  const [openSelect, setOpenSelect] = useState(false);\n  const [tempPopupOpen, setTempPopupOpen] = useState(false);\n  const [joditConfig] = useState({\n    toolbarStyle: 'top',\n    minHeight: '615px',\n  });\n\n  const closeSelect = (text, id) => {\n    props.setPostsData({ ...props.postsData, board: id });\n    props.setBoardSelect(text);\n    setOpenSelect(false);\n  };\n\n  const onlyNumber = (e) => {\n    const { value } = e.target;\n\n    const onlyNumberRegular = value.replace(/[^0-9]/g, '');\n    props.setPostsData({ ...props.postsData, password: onlyNumberRegular });\n  };\n\n  const postCancel = (e) => {\n    // props.setPwdPopupOpen(true);\n    // props.setPopupContent(\n    //   'When you load a temporary text, the writing\\nyou are creating disappears. Are you sure\\nyou want to load the selected text?'\n    // );\n    if (\n      confirm(\n        'When you load a temporary text, the writing\\nyou are creating disappears. Are you sure\\nyou want to load the selected text?'\n      )\n    ) {\n      navigate(-1);\n    }\n  };\n\n  return (\n    <div className=\"club-home writing \">\n      <div>\n        <div className=\"flex-between board-actions \">\n          <Button label={'Cancel'} size={'m'} onClick={() => postCancel()} />\n          <div className=\"flex-center board-actions-right relative\">\n            {props.type === 'club' && (\n              <>\n                <div className=\"board-actions-select \" onClick={() => setOpenSelect(!openSelect)}>\n                  {props?.boardSelect}\n                  <img src={require('images/club/arrow-bottom.png')} alt=\"\" />\n                </div>\n\n                <div className={'board-actions-select-box ' + (openSelect ? '' : 'none')}>\n                  <div\n                    className=\"board-actions-select-item flex-between\"\n                    onClick={() => props.closeSelect(props?.boardSelect, props?.postsData?.board)}\n                  >\n                    {props?.boardSelect}\n                    <img src={require('images/club/arrow-bottom.png')} alt=\"\" />\n                  </div>\n                  {props?.boardGroups?.data.map((boardGroupsItem, index) => {\n                    return (\n                      <div key={index}>\n                        <div className=\"board-actions-select-boardGroup\">{boardGroupsItem?.title}</div>\n                        {boardGroupsItem?.boards.map((boardItem, index) => {\n                          return (\n                            <div\n                              className=\"board-actions-select-item\"\n                              key={index}\n                              onClick={() => closeSelect(boardItem.title, boardItem.id)}\n                            >\n                              {boardItem.title}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    );\n                  })}\n                </div>\n                <div className=\"board-actions-count flex-center\">\n                  <div onClick={() => props.postsCreate('temp')}>Save as draft</div> <div className=\"bar\"></div>\n                  <div onClick={() => setTempPopupOpen(!tempPopupOpen)}>{props.posts?.data?.length || 0}</div>\n                </div>\n                <TempPopup\n                  open={tempPopupOpen}\n                  setOpen={() => setTempPopupOpen()}\n                  tempAllDetele={props?.tempAllDetele}\n                  tempSelectDetele={props?.tempSelectDetele}\n                  posts={props?.posts}\n                />\n              </>\n            )}\n            <Button label={'Post'} size=\"m\" onClick={() => props.postsCreate()} />\n          </div>\n        </div>\n        <div className=\"board\">\n          <div className=\"board-input\">\n            <input\n              placeholder=\"Please enter a title\"\n              value={props.postsData.title || ''}\n              onChange={(e) => props.setPostsData({ ...props.postsData, title: e.target.value })}\n            />\n          </div>\n          <JoditEditor\n            ref={editor}\n            config={joditConfig}\n            value={props.postsData.content}\n            tabIndex={1} // tabIndex of textarea\n            onBlur={(newContent) => props.setPostsData({ ...props.postsData, content: newContent })} // preferred to use only this option to update the content for performance reasons\n          />\n          {props.type === 'club' && (\n            <>\n              <div className=\"board-tag\">\n                <div className=\"board-tag-item flex-center\">\n                  {props.tagList.map((tagItem, index) => {\n                    return (\n                      <div key={index}>\n                        <div\n                          style={{ display: props.tagEditId === tagItem.tag ? 'none' : 'inline' }}\n                          className=\"board-tag-item-list flex-center\"\n                          onClick={() => props.tagEditer(tagItem)}\n                        >\n                          # {tagItem.title}\n                          <img\n                            className=\"board-tag-close\"\n                            src={require('images/club/btn-close.png')}\n                            onClick={() => props.tagDelect(tagItem.tag)}\n                          />\n                        </div>\n                        <input\n                          className=\"tag-edit\"\n                          style={{ display: props.tagEditId === tagItem.tag ? 'flex' : 'none' }}\n                          placeholder=\"#Tag\"\n                          maxLength={20}\n                          onKeyPress={(e) => props.tagEditKeyUP(e, tagItem.tag)}\n                          // onBlur={(e) => tagKeyBlur(e)}\n                          value={props.tagEditValue}\n                          onChange={(e) => props.setTagEditValue(e.target.value)}\n                        />\n                      </div>\n                    );\n                  })}\n                  {props.tagList.length < 10 && (\n                    <input\n                      maxLength={20}\n                      className=\"tag-input\"\n                      placeholder=\"#Tag\"\n                      onKeyPress={(e) => props.tagKeyUP(e)}\n                      // onBlur={(e) => tagKeyBlur(e)}\n                      value={props.tagVale}\n                      onChange={(e) => props.setTagVale(e.target.value)}\n                    />\n                  )}\n                </div>\n              </div>\n              <div className=\"board-allow\">\n                <div>\n                  Allow Comments\n                  <ToggleBtn id=\"Comments\" onChange={props.onCheckedElement} />\n                </div>\n                <div>\n                  Allow Sharing\n                  <ToggleBtn id=\"Sharing\" onChange={props.onCheckedElement} />\n                </div>\n                <div>\n                  Allow Search\n                  <ToggleBtn id=\"Search\" onChange={props.onCheckedElement} />\n                </div>\n                <div onClick={() => props.onClickElement('Notice')}>\n                  Register as a Notice\n                  <ToggleBtn\n                    id=\"Notice\"\n                    onChange={props.onCheckedElement}\n                    disabled={props.checkedList.indexOf('secret') > -1}\n                  />\n                </div>\n                <div onClick={() => props.onClickElement('event')}>\n                  Event Notice\n                  <ToggleBtn\n                    id=\"event\"\n                    onChange={props.onCheckedElement}\n                    disabled={props.checkedList.indexOf('Notice') > -1}\n                  />\n                </div>\n              </div>\n              <div className=\"board-allow\">\n                <div onClick={() => props.onClickElement('secret')}>\n                  secret post\n                  <ToggleBtn\n                    id=\"secret\"\n                    onChange={props.onCheckedElement}\n                    disabled={props.checkedList.indexOf('Notice') > -1}\n                  />\n                </div>\n                {props.checkedList.indexOf('secret') > -1 && (\n                  <div className=\"board-password \">\n                    <div className=\"board-password-input relative\">\n                      password\n                      <input\n                        value={props.postsData.password || ''}\n                        maxLength=\"4\"\n                        type={isHidePassword ? 'text' : 'password'}\n                        onChange={(e) => onlyNumber(e)}\n                      />\n                      {isHidePassword ? (\n                        <div className=\"password-btn\" onClick={() => setIsHidePassword(!isHidePassword)}>\n                          <img src={require('images/club/ic-show-gr.png')} />\n                        </div>\n                      ) : (\n                        <div className=\"password-btn\" onClick={() => setIsHidePassword(!isHidePassword)}>\n                          <img src={require('images/club/ic-hide-gr.png')} />\n                        </div>\n                      )}\n                    </div>\n                    {props.postsData.password.length === 4 || props.postsData.password.length === 0 ? (\n                      <div className=\"remark\">*You can view posts by entering your password.</div>\n                    ) : (\n                      <div className=\"password-error\">*Please enter a four-digit password.</div>\n                    )}\n                  </div>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n      <AlertPopup content={props.popupContent} open={props.pwdPopupOpen} setOpen={() => props.setPwdPopupOpen(false)} />\n    </div>\n  );\n}\n\nexport default Writing;\n","import React, { useState } from 'react';\nimport { getStorage, setStorage } from 'util/storage';\n\nfunction Cookie() {\n  const [isAllow, setIsAllow] = useState(getStorage('acceptCookie') === 'true');\n  const onAllowCookie = () => {\n    setStorage('acceptCookie', 'true');\n    setIsAllow(true);\n  };\n  return (\n    <div className=\"cookie\" style={{ display: isAllow ? 'none' : 'inline-block' }}>\n      <div className=\"cookie_con\">\n        <button type=\"button\" className=\"btn_close\" onClick={() => setIsAllow(true)}>\n          <span className=\"a11y\">닫기</span>\n        </button>\n        <dl>\n          <dt>Cookie Policy</dt>\n          <dd>\n            Our website uses cookies to improve your browsing experience.\n            <br />\n            By using our site you agree to the use of cookies.\n            <button type=\"button\" onClick={() => console.log('test')}>\n              Learn More\n            </button>\n          </dd>\n        </dl>\n        <button type=\"button\" className=\"btn_accept\" onClick={onAllowCookie}>\n          <span>ACCEPT</span>\n        </button>\n      </div>\n    </div>\n  );\n}\nfunction Footer() {\n  const onNavigate = () => {\n    // console.log('navigate');\n  };\n  return (\n    <div id=\"footer_wrap\">\n      <div className=\"footer\">\n        <Cookie />\n        <div className=\"copyright\">© 2023 Creta. All rights reserved.</div>\n        <div className=\"footer_menu\">\n          <button className=\"policy\" onClick={() => onNavigate()} aria-hidden=\"true\">\n            <span>Terms of Service</span>\n          </button>\n          <button className=\"policy\" onClick={() => onNavigate()} aria-hidden=\"true\">\n            <span>Privacy Policy</span>\n          </button>\n          <button className=\"support\" onClick={() => onNavigate()} aria-hidden=\"true\">\n            Support\n          </button>\n          <div className=\"flag_wrap\">\n            <div className=\"flag_language\">\n              <span className=\"language\">English</span>\n              <button type=\"button\" className=\"arrow\">\n                <span className=\"a11y\">선택</span>\n              </button>\n            </div>\n            <ul className=\"flag_list\">\n              <li className=\"change\">\n                <button type=\"button\" className=\"language\">\n                  <span>Change Language</span>\n                </button>\n              </li>\n              <li>\n                <button type=\"button\" className=\"language us\">\n                  <span>English</span>\n                </button>\n              </li>\n              <li>\n                <button type=\"button\" className=\"language kr\">\n                  <span>Korean</span>\n                </button>\n              </li>\n              <li>\n                <button type=\"button\" className=\"language jp\">\n                  <span>Japanese</span>\n                </button>\n              </li>\n              <li>\n                <button type=\"button\" className=\"language cn\">\n                  <span>Chinese</span>\n                </button>\n              </li>\n              <li>\n                <button type=\"button\" className=\"language de\">\n                  <span>Deutsh</span>\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","/* eslint-disable */\n\nimport React from 'react';\n\nimport 'assets/scss/club.scss';\nimport 'assets/scss/reset.scss';\n\nfunction ToggleBtn(props) {\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id={props.id}\n        className=\"toggleBtn\"\n        hidden\n        onChange={(event) => props.onChange(event.target.checked, props.id)}\n        disabled={props.disabled}\n      />\n      <label htmlFor={props.id} className=\"toggleSwitch\">\n        <span className=\"toggleButton\"></span>\n      </label>\n    </>\n  );\n}\n\nexport default ToggleBtn;\n"],"names":["info","title","description","thumbnail_image","id","navigate","useNavigate","onClick","className","Math","floor","random","src","alt","category","forum_count","post_count","comment_count","setIsAllForum","forumCategoryList","useSelector","state","forumList","dispatch","useDispatch","useEffect","reqAllForumList","forum_category","page_size","addComma","type","map","item","NoRecentVisitedForum","strHistory","NoBookmarkedForum","isLogin","checkLogin","history","forumHistory","bookMarkedList","forumBookMarkedList","forumPin","isActive","isSuccess","useState","setStrHistroy","arrHistory","setArrHistroy","menu","setMenu","strNohistory","length","reqForumBookMarkedList","is_pined","style","display","reset","classNames","active","forumId","console","log","reqForumUnpin","delLogOutHistory","NextArrow","props","setTEST","PrevArrow","children","slideCount","settings","focusOnSelect","focusOnChange","infinite","slidesToShow","slidesToScroll","speed","nextArrow","prevArrow","idx","reqForumIdPostList","gold","silver","bronze","normal","forum","thumbnail_image_url","forum_title","user","username","getPostDateFormat","created","DATE_FORMAT_WEEK_TO_YEAR","visit_count","on","period","page","ordering","reqOption","setReqOption","forumIdPostList","forumRankingList","rankingList","firstForumId","slickRef","useRef","reqForumRankingList","txt","e","target","autoplay","dots","autoPlaySpeed","banner01","banner02","banner03","banner04","ForumItem","onMove","todayForum","reqTodayForum","odering","isShow","setIsShow","forumAllSearchList","hasNextPage","allForumList","count","useInView","ref","inView","catList","categoryList","reqCategoryList","document","body","cssText","window","scrollY","top","scrollTo","parseInt","width","height","name","value","checked","onChange","htmlFor","placeholder","disabled","profile_image_url","position","bottom","backgroundColor","centerMode","arrows","cssEase","isAllForum","Header","bannerTop01Img","bannerTop02Img","bannerTop03Img","post01Img","profileImg","post02Img","post03Img","post04Img","post05Img","Footer","forumInfo","setForumInfo","errors","setErrors","editType","useToggle","expand","setExpand","msg","default","maxLength","FORUM_NAME_MAXLENGTH","onBlur","error","FORUM_DISC_MAXLENGTH","defaultValue","black","setCategory","imgType","cropWidth","cropHeight","imgSrc","setImgSrc","eventType","setEventType","bannerImg","thumbImg","originImg","setOriginImg","canvasRef","imgRef","unit","x","y","crop","setCrop","completedCrop","setCompletedCrop","aspect","useDropzone","onDrop","acceptedFiles","fileRejections","undefined","reader","FileReader","addEventListener","result","toString","readAsDataURL","forEach","file","err","code","accept","maxSize","getRootProps","getInputProps","open","onRemove","onCreateBlob","current","toBlob","blob","ctx","getContext","newCrop","scaleX","naturalWidth","scaleY","naturalHeight","pixelRatio","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","createCanvas","IMAGE_TYPE_THUMBNAIL","thum","IMAGE_TYPE_BANNER","_","percentCrop","onComplete","c","onDragEnd","locked","transform","onLoad","currentTarget","mediaWidth","mediaHeight","centerCrop","makeAspectCrop","centerAspectCrop","master_nickname","THUMBNAIL_IMAGE_WIDTH","THUMBNAIL_IMAGE_HEIGHT","BANNER_IMAGE_WIDTH","BANNER_IMAGE_HEIGHT","formData","FormData","append","banner_image","banner_image_filename","thumbnail_image_filename","reqForumCreate","pin_count","badge","reqForumInfo","updateForumInfo","reqForumPin","userThumb","showPopup","POPUP_TYPE_BADGE","userList","onDeleteList","userType","fourmReset","isShowModal","setIsShowBanModal","USER_LIST_STAFF","USER_LIST_BAN","fobiddenList","setFobiddenList","searchType","setSearchType","banKeyWord","setBanKeyWord","staffKeyword","setStaffKeyword","searchUserList","setSearchUserList","savedStaffList","setSavedStaffList","savedBanList","setSavedBanList","isShowBanModal","forum_staffs","forbidden_words","bans","searchUser","banWord","setBanWord","params","useParams","onSearchUserList","reqsearchUser","onSetList","userId","findIndex","arr","filter","onSetWordsList","word","onDeleteWordsList","constructor","reqForumEdit","onEdit","profile_image","nickname","PostItem","userThumbImg","dateCalculation","dangerouslySetInnerHTML","__html","content_summary","like_count","FilterPopup","isVisible","setIsFilterVisible","schOption","setSchOption","valeu","defaultChecked","sort","text","date","keyword","isFilterVisible","fourmPosts","forumPost","getFourmPostsInit","message","Loader","data","setLogOutHistory","openPopup","setOpenPopup","post","like","postId","clubId","useOutletContext","listState","setListState","disListState","setDisListState","likeCount","setLikeCount","disLikeCount","setDisLikeCount","openETC","setOpenETC","reportOpen","setReportOpen","getPostInit","getPostLikesInit","is_liked","is_disliked","dislike_count","localStorage","setItem","board_title","board_group_title","PostContent","postNavigate","deletePost","club","board","confirm","deletePostInit","handleClickPin","pin","postPostUnPinInit","actionList","payload","postPostPinInit","handleClickLike","postPostUnlikeInit","postPostLikeInit","handleClickDisLike","disLike","postPostUndislikeInit","postPostDislikeInit","prev","prev_post","next","next_post","PostRecent","SharePopup","setOpen","sharefuc","link","postPostShareInit","parameters","ReportPopup","posts","checkedList","setCheckedList","pwdPopupOpen","setPwdPopupOpen","popupContent","setPopupContent","content","postsData","setPostsData","Writing","postsCreate","temp","patchPostInit","setTimeout","postFourmPostInit","path","element","label","size","tempAllDetele","tempItem","index","tempChange","dayjs","format","tempSelectDetele","require","editor","isHidePassword","setIsHidePassword","openSelect","setOpenSelect","tempPopupOpen","setTempPopupOpen","toolbarStyle","minHeight","joditConfig","boardSelect","closeSelect","boardGroups","boardGroupsItem","boards","boardItem","setBoardSelect","config","tabIndex","newContent","tagList","tagItem","tagEditId","tag","tagEditer","tagDelect","onKeyPress","tagEditKeyUP","tagEditValue","setTagEditValue","tagKeyUP","tagVale","setTagVale","ToggleBtn","onCheckedElement","onClickElement","indexOf","password","onlyNumberRegular","replace","onlyNumber","Cookie","getStorage","isAllow","setIsAllow","setStorage","hidden","event"],"sourceRoot":""}