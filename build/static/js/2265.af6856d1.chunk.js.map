{"version":3,"file":"static/js/2265.af6856d1.chunk.js","mappings":"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","sources":["components/LogIn/SnsComponent.jsx","components/common/InputButton/CommonInput.jsx","components/common/InputButton/PassWordInput.jsx","components/LogIn/FindPassword/Step1.jsx","components/LogIn/FindPassword/Step2.jsx","components/LogIn/FindPassword/Step3.jsx","components/LogIn/FindPassword/FindModal.jsx","components/LogIn/LogIn.js","components/LogIn/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getStorage, setStorage } from 'util/storage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reqAuthSns, signUpAfterAutoLogin } from 'redux/store/common/logInSlice';\nimport { SNS_GOOGLE, SNS_APPLE, SNS_FACEBOOK, SNS_TWITTER } from 'constants/type';\n\nfunction SnsComponent() {\n  const arrSns = [\n    { id: SNS_GOOGLE, name: 'Google' },\n    { id: SNS_APPLE, name: 'Apple' },\n    { id: SNS_FACEBOOK, name: 'Meta' },\n    { id: SNS_TWITTER, name: 'Twitter' }\n  ];\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isAuthSns } = useSelector((state) => ({ ...state.logIn }));\n\n  const snsLogin = (snsType) => {\n    if (getStorage(snsType) === 'true') dispatch(reqAuthSns(snsType));\n    else navigate(`/signup/terms/${snsType}`);\n  };\n\n  useEffect(() => {\n    console.log('isAuthSns', isAuthSns);\n    // setStorage('google', '');\n    if (isAuthSns) {\n      window.addEventListener('message', (e) => {\n        if (e.data.message === 'passport-login-success' && e.data.source === 'platform-login-api') {\n          const { platforms, authToken } = e.data.data;\n          setStorage('accessToken', authToken);\n\n          if (getStorage(platforms[0]?.type) !== 'true') navigate('/signup/complete');\n          else dispatch(signUpAfterAutoLogin(e.data.data));\n          // window.localStorage.setItem('token', e.data.data.authToken);\n          // e.data.data.platforms: 바인딩된 플랫폼 배열 (ccr, google, apple, facebook, twitter)\n          // e.data.data.userInfo\n        }\n      });\n    }\n  }, [isAuthSns]);\n  return (\n    <div className=\"sns_login\">\n      {arrSns.map((item) => (\n        <button\n          type=\"button\"\n          className={`sns btn_${item.id}`}\n          onClick={() => snsLogin(item.id)}\n          key={item.id}\n          aria-hidden=\"true\"\n        >\n          <span className=\"a11y\">{item.name}</span>\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default SnsComponent;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect } from 'react';\nimport classNames from 'classnames';\n\nfunction SuccessBtn() {\n  return (\n    <div className=\"dot success\">\n      <span className=\"a11y\">성공</span>\n    </div>\n  );\n}\n\n// function ResetBtn({ resetFunc }) {\n//   const test = () => {\n//     console.log(resetFunc);\n//     resetFunc();\n//   };\n//   return (\n//     <button className=\"btn_reset\" onClick={test}>\n//       <span className=\"a11y\">삭제</span>\n//     </button>\n//   );\n// }\n\nfunction InputStatusBtn({ errors, isFocus, inputVal }) {\n  // console.log(isFocus, inputVal, errors);\n  if (!isFocus && inputVal && !errors) {\n    return <SuccessBtn />;\n  }\n  return null;\n}\n\nfunction CommonInput({ isFocus, setIsFocus, errors, inputVal, placeholder, register }) {\n  useEffect(() => {\n    // console.log('isFocus::', isFocus);\n  }, [isFocus]);\n  return (\n    <div\n      className={classNames(\n        'form_wrap',\n        {\n          msg: errors || (!errors && inputVal)\n        },\n        { error: errors },\n        { success: !errors && inputVal }\n      )}\n      onBlur={() => setIsFocus(false)}\n      onFocus={() => setIsFocus(true)}\n    >\n      <span className=\"form_cell form_input input_lg\">\n        <input type=\"text\" aria-invalid=\"false\" placeholder={placeholder} {...register} />\n        <InputStatusBtn errors={errors} isFocus={isFocus} inputVal={inputVal} />\n      </span>\n      {errors && (\n        <span className=\"error_txt msg\" id=\"input_error\">\n          {errors.message}\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default CommonInput;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport classnames from 'classnames';\nimport PassWordInputBtn from 'components/common/InputButton/PassWordInputBtn';\n\nfunction PassWordInput({ errors, isViewPwd, setIsViewPwd, register }) {\n  return (\n    <div className={classnames('form_wrap', 'msg', { error: errors })}>\n      <span className=\"form_cell form_input input_lg\">\n        <input id=\"password\" type={isViewPwd ? 'text' : 'password'} placeholder=\"Password\" {...register} />\n        <PassWordInputBtn status={isViewPwd} statusFunc={() => setIsViewPwd(!isViewPwd)} />\n      </span>\n      {errors && (\n        <span className=\"error_txt msg\" id=\"input_error\">\n          {errors.message}\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default PassWordInput;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useForm, useWatch } from 'react-hook-form';\nimport CommonInput from 'components/common/InputButton/CommonInput';\n// import { useSelector } from 'react-redux';\n// import { hidePopup } from 'redux/store/common/popupSlice';\n// import { reqSearchEmail } from 'redux/store/common/searchEmailSlice';\n// import { reset as authEmailReset, reqAuthEmail } from 'redux/store/common/authEmailSlice';\n// import { VERIFY_SEND_SOURCE_EMAIL, VERIFY_SEND_TYPE_CHANGE } from 'constants/type';\n\nfunction Step1({ setStatus, onHide }) {\n  const {\n    getValues,\n    register,\n    setValue,\n    control,\n    formState: { errors }\n  } = useForm({ mode: 'onChange' });\n  const { t } = useTranslation();\n  const [isFocus, setIsFocus] = useState(false);\n  const watchEmail = useWatch({ control, name: 'email', defaultValue: '' });\n\n  // const dispatch = useDispatch();\n  const onSearch = () => {\n    // dispatch(\n    //   reqAuthEmail({\n    //     email: getValues('email'),\n    //     verify_source: VERIFY_SEND_SOURCE_EMAIL,\n    //     verify_type: VERIFY_SEND_TYPE_CHANGE\n    //   })\n    // );\n\n    setStatus(2);\n  };\n\n  // useEffect(() => {\n  //   if (watchEmail && errors.email) setStatus(2);\n  // }, [watchEmail]);\n\n  return (\n    <>\n      <div className=\"bg_con\">\n        <div className=\"search_title\">\n          <span className=\"step\">STEP 01</span>\n          <span className=\"title_text\">Search ID</span>\n        </div>\n        <div className=\"search_text\">\n          Please enter the email you first registered when signed up\n          <br />\n          to find your account.\n        </div>\n        <CommonInput\n          isFocus={isFocus}\n          setIsFocus={setIsFocus}\n          errors={errors.email}\n          inputVal={getValues('email')}\n          placeholder=\"E-mail\"\n          resetFunc={() => setValue('email', '')}\n          register={register('email', {\n            required: t('validation.require', { require: 'email' }),\n            pattern: {\n              value: /\\S+@\\S+\\.\\S+/,\n              message: t('validation.emailauth.email')\n            }\n          })}\n        />\n      </div>\n      <div className=\"popup_btn_wrap right\">\n        <button type=\"button\" className=\"btn default button_lg btn_close\" onClick={onHide}>\n          <span>Cancel</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn primary button_lg btn_close\"\n          disabled={errors.email || !watchEmail}\n          onClick={onSearch}\n        >\n          <span>Next</span>\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default Step1;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { VERIFY_SEND_TYPE_CHANGE } from 'constants/type';\nimport AuthConfirm from 'components/SignUp/AuthConfirm';\n\nfunction Step2({ setStatus, onHide }) {\n  const { isConfirm } = useSelector((state) => ({ ...state.authCode }));\n  const onNext = () => {\n    setStatus(3);\n  };\n\n  return (\n    <>\n      <div className=\"bg_con\">\n        <div className=\"search_title\">\n          <span className=\"step\">STEP 02</span>\n          <span className=\"title_text\">Account Authenticate</span>\n        </div>\n        <div className=\"search_text\">\n          Please select the means to receive the authentication code\n          <br />\n          and proceed with the authentication.\n        </div>\n        <div className=\"radio_button\">\n          <div className=\"radio_wrap half\">\n            <span className=\"form_cell btn_radio size_lg\">\n              <input type=\"radio\" id=\"radio1\" defaultChecked />\n              <label htmlFor=\"radio1\">\n                <span>E-mail</span>\n              </label>\n            </span>\n            <span className=\"form_cell btn_radio size_lg\">\n              <input type=\"radio\" id=\"radio2\" disabled />\n              <label htmlFor=\"radio2\">\n                <span>Cellphone</span>\n              </label>\n            </span>\n          </div>\n        </div>\n        <span className=\"shadow_line popup\" />\n        <AuthConfirm verifyType={VERIFY_SEND_TYPE_CHANGE} />\n      </div>\n      <div className=\"popup_btn_wrap right\">\n        <button type=\"button\" className=\"btn default button_lg btn_close\" onClick={onHide}>\n          <span>Cancel</span>\n        </button>\n        <button className=\"btn primary button_lg btn_close\" disabled={!isConfirm} onClick={onNext}>\n          <span>Next</span>\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default Step2;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { useTranslation } from 'react-i18next';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { encryptCode } from 'util/common';\nimport PassWordInput from 'components/SignUp/PassWordInput';\nimport { reset as changePasswordReset, reqChangePassword } from 'redux/store/common/changePasswordSlice';\nimport {\n  POPUP_TYPE_ALERT,\n  POPUP_TYPE_CONFIRM,\n  VERIFY_SEND_SOURCE_EMAIL,\n  VERIFY_SEND_TYPE_CHANGE\n} from 'constants/type';\nimport { reset as popupReset, showPopup } from 'redux/store/common/popupSlice';\n\nfunction Step3({ onHide }) {\n  const {\n    register,\n    trigger,\n    control,\n    formState: { errors }\n  } = useForm({ mode: 'onChange' });\n  // const { t } = useTranslation();\n\n  const { code } = useSelector((state) => ({ ...state.authCode }));\n  const { email } = useSelector((state) => ({ ...state.authEmail }));\n  const { isSuccess } = useSelector((state) => ({ ...state.changePassword }));\n  const { isConfirm } = useSelector((state) => ({ ...state.popup }));\n\n  const watchPassword = useWatch({ control, name: 'password', defaultValue: '' });\n\n  const dispatch = useDispatch();\n  // const onTest = () => {\n  //   dispatch(\n  //     reqChangePassword({\n  //       email,\n  //       password: encryptCode(watchPassword),\n  //       verify_source: VERIFY_SEND_SOURCE_EMAIL,\n  //       verify_type: VERIFY_SEND_TYPE_CHANGE,\n  //       code,\n  //       username: email\n  //     })\n  //   );\n  // };\n  const onConfirmPopup = () => {\n    dispatch(\n      showPopup({\n        type: POPUP_TYPE_CONFIRM,\n        isDim: true,\n        contents: 'Are you sure you want to change your password?'\n      })\n    );\n  };\n\n  useEffect(() => {\n    console.log('code::', code);\n    console.log('email::', email);\n    console.log('isConfirm::', isConfirm);\n\n    if (code && isConfirm) {\n      // if (!isShow && isConfirm) {\n      console.log('isConfirm', isConfirm);\n      dispatch(\n        reqChangePassword({\n          email,\n          password: encryptCode(watchPassword),\n          verify_source: VERIFY_SEND_SOURCE_EMAIL,\n          verify_type: VERIFY_SEND_TYPE_CHANGE,\n          code,\n          username: email\n        })\n      );\n    }\n  }, [watchPassword, isConfirm]);\n\n  useEffect(() => {\n    // popup reset\n    dispatch(popupReset());\n  }, []);\n\n  useEffect(() => {\n    // password 변경 완료 되면 popup close\n    if (isSuccess) {\n      dispatch(\n        showPopup({\n          type: POPUP_TYPE_ALERT,\n          contents: 'Password has been changed.'\n        })\n      );\n      dispatch(changePasswordReset());\n      onHide();\n    }\n  }, [isSuccess]);\n\n  return (\n    <>\n      <div className=\"bg_con\">\n        <div className=\"search_title\">\n          <span className=\"step\">STEP 03</span>\n          <span className=\"title_text\">Change Password</span>\n        </div>\n        <div className=\"search_text nopadding\">\n          Please enter 8 to 16 digits using a combination of English’s uppercase letters, lowercase letters, numbers,\n          and special characters.\n        </div>\n        <div className=\"security_guide\">\n          <button type=\"button\" className=\"open_tip\">\n            <span>Security Guide</span>\n          </button>\n          <div className=\"tooltip password\">\n            <h4>Strong Password</h4>\n            <span>\n              Enter a password that contains 8 - 16 characters from at least three of the following categories:\n              uppercase/lowercase letters, numbers, and special characters.\n            </span>\n            <span>\n              Repeated or sequence characters and letters, birthday, contact number, and other passwords that are easy\n              to predict or are related to personal information are vulnerable due to weak security strength.\n            </span>\n            <span>Using a password that you use in other websites can also endanger the account security.</span>\n          </div>\n        </div>\n        <PassWordInput control={control} register={register} trigger={trigger} errors={errors} />\n      </div>\n      <div className=\"popup_btn_wrap full\">\n        <button\n          className=\"btn primary button_lg btn_close\"\n          disabled={!watchPassword || errors.password}\n          onClick={onConfirmPopup}\n        >\n          <span>Change Password</span>\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default Step3;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState } from 'react';\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport Step3 from './Step3';\n\nfunction FindModal({ isShowModal, setIsShowModal }) {\n  const [status, setStatus] = useState(1);\n  const onHide = () => {\n    setIsShowModal(false);\n  };\n  return (\n    <div style={{ display: isShowModal ? 'inline-block' : 'none' }}>\n      <div id=\"modal\" />\n      <div className=\"modal_popup modal_text id_search\">\n        <div className=\"modal_con member\">\n          <button type=\"button\" className=\"close\" onClick={onHide} />\n          <h2 className=\"modal_title\">Find Password</h2>\n          {status === 1 && <Step1 setStatus={setStatus} onHide={onHide} />}\n          {status === 2 && <Step2 setStatus={setStatus} onHide={onHide} />}\n          {status === 3 && <Step3 onHide={onHide} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FindModal;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useEffect } from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reqLogIn } from 'redux/store/common/logInSlice';\n// // import { showPopup, hidePopup } from 'redux/store/popupSlice';\nimport { encryptCode } from 'util/common';\nimport { useNavigate } from 'react-router-dom';\nimport ReCapcha from 'components/common/ReCapcha';\nimport { getStorage, setStorage } from 'util/storage';\nimport SnsComponent from 'components/LogIn/SnsComponent';\nimport Footer from 'components/common/footer/Footer';\nimport Header from 'components/common/header/Header';\nimport { LOGIN_FAIL_COUNT } from 'constants/type';\nimport CommonInput from 'components/common/InputButton/CommonInput';\nimport PassWordInput from 'components/common/InputButton/PassWordInput';\nimport FindModal from 'components/LogIn/FindPassword/FindModal';\n\nfunction LogIn() {\n  const isAutoLogin = getStorage('autoLogin') === 'true';\n  const [isFocus, setIsFocus] = useState(false);\n  const [isCapcha, setIsCapcha] = useState(false);\n  const [isViewPwd, setIsViewPwd] = useState(false);\n  const [autoLogin, setAutoLogin] = useState(isAutoLogin);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isShowModal, setIsShowModal] = useState(false);\n  const { user, loginFailCnt } = useSelector((state) => ({ ...state.logIn }));\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const {\n    getValues,\n    setValue,\n    register,\n    trigger,\n    setError,\n    control,\n    formState: { errors }\n  } = useForm({ mode: 'onBlur' });\n\n  const watchEmail = useWatch({ control, name: 'email', defaultValue: '' });\n  const watchPassword = useWatch({ control, name: 'password', defaultValue: '' });\n  const { t } = useTranslation();\n\n  const onLogIn = async () => {\n    const userInfo = { username: getValues('email'), password: encryptCode(getValues('password')) };\n    if (loginFailCnt >= LOGIN_FAIL_COUNT && !isCapcha) {\n      setError('verifyCapcha', { type: 'custom', message: t('validation.recapcha') });\n      return;\n    }\n    if (\n      errors.email?.type ||\n      errors.password?.type ||\n      errors.verifyCapcha?.type ||\n      !userInfo.username ||\n      !userInfo.password\n    )\n      return;\n\n    dispatch(reqLogIn({ username: getValues('email'), password: getValues('password'), navigate, dispatch }));\n  };\n\n  const onValidation = async () => {\n    await trigger(['email', 'password']);\n    if (loginFailCnt >= LOGIN_FAIL_COUNT && !isCapcha) {\n      setError('verifyCapcha', { type: 'custom', message: t('validation.recapcha') });\n    }\n  };\n\n  useEffect(() => {\n    setStorage('autoLogin', autoLogin);\n  }, [autoLogin]);\n\n  useEffect(() => {\n    if (getStorage('autoLogin') === 'true') {\n      setValue('email', getStorage('username'));\n      setValue('password', getStorage('password'));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (errors.email?.type || errors.password?.type || errors.verifyCapcha?.type || !watchEmail || !watchPassword)\n      return;\n    setIsDisabled(false);\n  }, [watchEmail, watchPassword, isCapcha]);\n\n  useEffect(() => {\n    console.log('user', user);\n    console.log('loginFailCnt:', loginFailCnt);\n  }, [user, loginFailCnt]);\n\n  return (\n    <>\n      <div id=\"wrap\">\n        <Header />\n        <div id=\"main\">\n          <div id=\"container\">\n            <div className=\"login_wrap\">\n              <div className=\"login_logo\" />\n              <div className=\"login_input\">\n                <CommonInput\n                  isFocus={isFocus}\n                  setIsFocus={setIsFocus}\n                  errors={errors.email}\n                  inputVal={getValues('email')}\n                  placeholder=\"E-mail\"\n                  register={register('email', {\n                    required: t('validation.require', { require: 'email' }),\n                    pattern: {\n                      value: /\\S+@\\S+\\.\\S+/,\n                      message: t('validation.emailauth.email')\n                    }\n                  })}\n                />\n                <PassWordInput\n                  errors={errors.password}\n                  isViewPwd={isViewPwd}\n                  setIsViewPwd={setIsViewPwd}\n                  register={register('password', {\n                    required: t('validation.require', { require: 'password' })\n                  })}\n                />\n                <div className=\"form_wrap\">\n                  <span className=\"form_cell form_check\">\n                    <input\n                      id=\"autoLogin\"\n                      name=\"autoLogin\"\n                      defaultChecked={isAutoLogin}\n                      type=\"checkbox\"\n                      onClick={() => setAutoLogin(!isAutoLogin)}\n                    />\n                    <label htmlFor=\"autoLogin\" className=\"checkbox\">\n                      <span>{t('label.staylogin')}</span>\n                    </label>\n                  </span>\n                </div>\n                {loginFailCnt >= LOGIN_FAIL_COUNT && <ReCapcha setIsCapcha={setIsCapcha} />}\n                {errors.verifyCapcha && <span className=\"error_msg\">{errors.verifyCapcha.message}</span>}\n                <div className=\"page_btn_wrap full\">\n                  <button\n                    type=\"button\"\n                    className=\"btn primary button_xl\"\n                    onClick={() => onLogIn()}\n                    onBlur={() => onValidation()}\n                    disabled={isDisabled}\n                  >\n                    <span>Login</span>\n                  </button>\n                </div>\n                <div className=\"login_text_link\">\n                  <button type=\"button\" onClick={() => setIsShowModal(true)}>\n                    <span>Find Password</span>\n                  </button>\n                  <button type=\"button\" onClick={() => navigate('/signup')}>\n                    <span>Register Account</span>\n                  </button>\n                </div>\n                <div className=\"login_line\">\n                  <span>OR</span>\n                </div>\n                <SnsComponent />\n              </div>\n            </div>\n          </div>\n          <Footer />\n        </div>\n      </div>\n      <FindModal isShowModal={isShowModal} setIsShowModal={setIsShowModal} />\n    </>\n  );\n}\n\nexport default LogIn;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport LogIn from 'components/LogIn/LogIn';\n\nfunction index() {\n  return (\n    <Routes>\n      <Route path=\"/*\" element={<LogIn />} />\n    </Routes>\n  );\n}\n\nexport default index;\n"],"names":["arrSns","id","SNS_GOOGLE","name","SNS_APPLE","SNS_FACEBOOK","SNS_TWITTER","dispatch","useDispatch","navigate","useNavigate","isAuthSns","useSelector","state","logIn","useEffect","console","log","window","addEventListener","e","data","message","source","platforms","authToken","setStorage","getStorage","type","signUpAfterAutoLogin","className","map","item","onClick","snsType","reqAuthSns","SuccessBtn","InputStatusBtn","errors","isFocus","inputVal","setIsFocus","placeholder","register","classNames","msg","error","success","onBlur","onFocus","isViewPwd","setIsViewPwd","classnames","PassWordInputBtn","status","statusFunc","setStatus","onHide","useForm","mode","getValues","setValue","control","formState","t","useTranslation","useState","watchEmail","useWatch","defaultValue","email","resetFunc","required","require","pattern","value","disabled","isConfirm","authCode","defaultChecked","htmlFor","AuthConfirm","verifyType","VERIFY_SEND_TYPE_CHANGE","trigger","code","authEmail","isSuccess","changePassword","popup","watchPassword","reqChangePassword","password","encryptCode","verify_source","VERIFY_SEND_SOURCE_EMAIL","verify_type","username","popupReset","showPopup","POPUP_TYPE_ALERT","contents","changePasswordReset","POPUP_TYPE_CONFIRM","isDim","isShowModal","setIsShowModal","style","display","isAutoLogin","isCapcha","setIsCapcha","autoLogin","setAutoLogin","isDisabled","setIsDisabled","user","loginFailCnt","setError","onLogIn","userInfo","LOGIN_FAIL_COUNT","verifyCapcha","reqLogIn","onValidation","Header","ReCapcha","Footer","path","element"],"sourceRoot":""}