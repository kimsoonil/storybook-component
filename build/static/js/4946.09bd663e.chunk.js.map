{"version":3,"file":"static/js/4946.09bd663e.chunk.js","mappings":"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","sources":["components/Forum/Post/index.js"],"sourcesContent":["/* eslint-disable */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getPostInit,\n  getPostLikesInit,\n  postPostLikeInit,\n  postPostUnlikeInit,\n  postPostDislikeInit,\n  postPostUndislikeInit,\n  postPostShareInit,\n  postPostPinInit,\n  postPostUnPinInit,\n  deletePostInit\n} from 'redux/idistStore/postsSlice';\nimport { useOutletContext } from 'react-router-dom';\nimport { useParams } from 'react-router';\n\nimport { Loader } from 'components/idist/Loader';\nimport Profile from 'components/idist/Profile';\nimport SharePopup from 'components/idist/popup/SharePopup';\nimport ReportPopup from 'components/idist/popup/ReportPopup';\nimport SideMember from 'components/idist/Club/SideMember';\nimport Header from 'components/common/header/Header';\nimport Footer from 'components/common/footer/Footer';\nimport SideEvent from 'components/idist/Club/SideEvent';\n\nimport HotPosts from 'components/idist/Club/HotPosts';\nimport PostContent from 'components/common/Post/PostContent';\nimport PostList from 'components/common/Post/PostList';\nimport PostRecent from 'components/common/Post/PostRecent';\n\nimport 'assets/scss/post.scss';\nimport 'assets/scss/main.scss';\n\nfunction Posts(props) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [openPopup, setOpenPopup] = useState(false);\n  const { post, like } = useSelector((state) => state.post);\n  const { id, postId } = useParams();\n  const clubId = useOutletContext();\n  const [listState, setListState] = useState(false);\n  const [disListState, setDisListState] = useState(false);\n  const [likeCount, setLikeCount] = useState(0);\n  const [disLikeCount, setDisLikeCount] = useState(0);\n  const [openETC, setOpenETC] = useState(false);\n  const [reportOpen, setReportOpen] = useState(false);\n  useEffect(() => {\n    dispatch(getPostInit({ id: postId }));\n    dispatch(getPostLikesInit({ id: postId }));\n  }, [postId]);\n\n  useEffect(() => {\n    if (post?.data) {\n      setListState(post?.data?.is_liked);\n      setDisListState(post?.data?.is_disliked);\n      setLikeCount(post?.data?.like_count);\n      setDisLikeCount(post?.data?.dislike_count);\n      localStorage.setItem('board', post.data.board_title);\n      localStorage.setItem('boardGroup', post.data.board_group_title);\n    }\n  }, [post]);\n\n  const handleClickPin = (pin) => {\n    if (pin) {\n      dispatch(\n        postPostUnPinInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    } else {\n      dispatch(\n        postPostPinInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    }\n  };\n  const handleClickLike = () => {\n    setListState(!listState);\n    setDisListState(false);\n    if (listState) {\n      setLikeCount(likeCount - 1);\n      dispatch(\n        postPostUnlikeInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    } else {\n      setLikeCount(likeCount + 1);\n      dispatch(\n        postPostLikeInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    }\n  };\n  const handleClickDisLike = (disLike) => {\n    setDisListState(!disListState);\n    setListState(false);\n    if (disListState) {\n      setDisLikeCount(disLikeCount - 1);\n      dispatch(\n        postPostUndislikeInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    } else {\n      setDisLikeCount(disLikeCount + 1);\n      dispatch(\n        postPostDislikeInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    }\n  };\n\n  const handleClickShare = (link) => {\n    dispatch(postPostShareInit({ id: id, parameters: { link: link } }));\n  };\n  const deletePost = (id, club, board) => {\n    if (confirm('Are you sure you want to delete the post?')) {\n      dispatch(deletePostInit({ id: id }));\n      navigate(`/forum/theme/1`);\n    }\n  };\n  const postNavigate = () => {\n    navigate(`/forum/${id}`);\n  };\n  if (post.message !== 'ok')\n    return (\n      <div className=\"flex-center\">\n        <Loader />\n      </div>\n    );\n  return (\n    <div>\n      <Header />\n      <div className=\"main\">\n        <div className=\"posts container\">\n          <div className=\"item\">\n            <PostContent\n              type={'forum'}\n              postNavigate={postNavigate}\n              post={post}\n              clubId={clubId}\n              openETC={openETC}\n              setOpenETC={setOpenETC}\n              deletePost={deletePost}\n              setReportOpen={setReportOpen}\n              reportOpen={reportOpen}\n              like={like}\n              listState={listState}\n              likeCount={likeCount}\n              openPopup={openPopup}\n              setOpenPopup={setOpenPopup}\n              handleClickPin={handleClickPin}\n              disListState={disListState}\n              disLikeCount={disLikeCount}\n              handleClickLike={handleClickLike}\n              handleClickDisLike={handleClickDisLike}\n            />\n            <PostList post={post} id={id} />\n            <PostRecent post={post} />\n          </div>\n          {/* 사이드바 */}\n          <div className=\"item\">\n            {/* {clubId.data.profile ? <Profile userData={clubId.data.profile} type={'club'} /> : <Profile type={'logout'} />}\n        <SideEvent id={id} />\n        <HotPosts />\n        <SideMember /> */}\n            <div className=\"chatting\">\n              <img src={require(`images/main/chatting.png`)} alt=\"\" />\n            </div>\n          </div>\n\n          <SharePopup open={openPopup} setOpen={setOpenPopup} sharefuc={handleClickShare} />\n          <ReportPopup open={reportOpen} setOpen={setReportOpen} />\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Posts;\n"],"names":["props","dispatch","useDispatch","navigate","useNavigate","useState","openPopup","setOpenPopup","useSelector","state","post","like","useParams","id","postId","clubId","useOutletContext","listState","setListState","disListState","setDisListState","likeCount","setLikeCount","disLikeCount","setDisLikeCount","openETC","setOpenETC","reportOpen","setReportOpen","useEffect","getPostInit","getPostLikesInit","data","is_liked","is_disliked","like_count","dislike_count","localStorage","setItem","board_title","board_group_title","message","className","type","postNavigate","deletePost","club","board","confirm","deletePostInit","handleClickPin","pin","postPostUnPinInit","actionList","payload","postPostPinInit","handleClickLike","postPostUnlikeInit","postPostLikeInit","handleClickDisLike","disLike","postPostUndislikeInit","postPostDislikeInit","src","require","alt","open","setOpen","sharefuc","link","postPostShareInit","parameters"],"sourceRoot":""}