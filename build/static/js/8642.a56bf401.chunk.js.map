{"version":3,"file":"static/js/8642.a56bf401.chunk.js","mappings":"0IAyBA,IAlBA,SAAmBA,GACjB,OACE,iCACE,kBACEC,KAAK,WACLC,GAAIF,EAAME,GACVC,UAAU,YACVC,QAAM,EACNC,SAAU,SAACC,GAAD,OAAWN,EAAMK,SAASC,EAAMC,OAAOC,QAASR,EAAME,GAAtD,EACVO,SAAUT,EAAMS,YAElB,kBAAOC,QAASV,EAAME,GAAIC,UAAU,eAApC,UACE,iBAAMA,UAAU,qBAIvB,C,0OCyBD,MAzCA,SAAuBH,GACrB,OACE,gBAAKG,UAAU,2BAA2BQ,MAAO,CAAEC,QAASZ,EAAMa,KAAO,OAAS,QAAlF,UACE,iBAAKV,UAAU,yBAAf,WACE,gBAAKA,UAAU,oBAAf,gCACA,gBAAKA,UAAU,WAAWW,QAAS,kBAAMd,EAAMe,SAASf,EAAMa,KAA3B,EAAkCF,MAAO,CAAEK,IAAK,QAAnF,UACE,gBAAKC,IAAKC,EAAQ,OAA8BC,IAAI,GAAGR,MAAO,CAAES,MAAO,aAGzE,iBAAKjB,UAAU,wBAAf,WACE,gBAAKA,UAAU,8BAAf,qBACA,iBAAKA,UAAU,0CAAf,WACE,sCACA,0BACE,SAACkB,EAAA,EAAD,CAAWnB,GAAI,kBAGnB,iBAAKC,UAAU,0CAAf,WACE,mCACA,0BACE,SAACkB,EAAA,EAAD,CAAWnB,GAAI,eAGnB,iBAAKC,UAAU,0CAAf,WACE,sCACA,0BACE,SAACkB,EAAA,EAAD,CAAWnB,GAAI,kBAGnB,iBAAKC,UAAU,0CAAf,WACE,mCACA,0BACE,SAACkB,EAAA,EAAD,CAAWnB,GAAI,qBAO5B,ECsED,MArGA,WACE,IAAMoB,GAAWC,EAAAA,EAAAA,MAETC,IADSC,EAAAA,EAAAA,OACMC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAjB,IAA3BJ,YACAK,GAASH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAME,IAAjB,IAArBA,KACR,GAA8CC,EAAAA,EAAAA,WAAS,GAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KASA,OARAC,EAAAA,EAAAA,YAAU,WACRX,GAASY,EAAAA,EAAAA,OACTZ,GAASa,EAAAA,EAAAA,MACV,GAAE,CAACb,KAEJW,EAAAA,EAAAA,YAAU,WACRG,OAAOC,SAAS,EAAG,IACpB,GAAE,IACwB,OAAvBb,EAAWc,SAEX,gBAAKnC,UAAU,cAAf,UACE,SAACoC,EAAA,EAAD,OAKJ,iBAAKpC,UAAU,QAAf,WACE,iBAAKA,UAAU,YAAf,WACE,iBAAKA,UAAU,OAAf,WACE,SAACqC,EAAA,EAAD,KACA,iBAAKrC,UAAU,oBAAf,WACE,iBAAKA,UAAU,eAAf,WACE,iBAAKA,UAAU,iBAAf,wBACY,kBAAMA,UAAU,OAAhB,UAAwBqB,EAAWiB,MAAnC,aADZ,mBAGA,iBAAKtC,UAAU,6BAA6BW,QAAS,kBAAMkB,GAAoBD,EAA1B,EAArD,WACE,gBAAKd,IAAKC,EAAQ,OAA0BC,IAAI,KADlD,4BAIF,iBAAKhB,UAAU,aAAf,WACE,gBAAKA,UAAU,0BAAf,kBACA,gBAAKA,UAAU,mBAAf,6BACA,gBAAKA,UAAU,mBAAf,0BACA,gBAAKA,UAAU,mBAAf,kCAGJ,iBAAKA,UAAU,mBAAf,WACE,gBAAKA,UAAU,eAAf,UACE,gBAAKA,UAAU,aAAf,2BAEF,gBAAKA,UAAU,gBAAf,SACGqB,EAAWkB,KAAKC,OAAS,EACxBnB,EAAWkB,KAAKE,KAAI,SAACC,EAAcC,GAAW,IAAD,EAC3C,OACE,iBAAK3C,UAAU,qBAAf,WACE,gBAAKc,IAAKC,EAAQ,UAClB,iBAAKf,UAAU,6BAAf,WACE,iBAAKA,UAAU,cAAf,WACE,iBAAKA,UAAU,2BAAf,cAA4C0C,EAAaE,MAAzD,QACA,gBACE5C,UAAU,6BACV6C,wBAAyB,CAAEC,OAAQJ,EAAaK,eAGpD,iBAAK/C,UAAU,0BAAf,WACE,gCAAM0C,QAAN,IAAMA,GAAN,UAAMA,EAAcM,eAApB,aAAM,EAAuBtB,KAAKuB,YAClC,0BAAMC,EAAAA,EAAAA,GAAgBR,EAAaS,mBAZAR,EAiB5C,KAED,iBAAK3C,UAAU,sBAAf,WACE,0BACE,gBAAKc,IAAKC,EAAQ,MAAoCC,IAAI,QAE5D,gBAAKhB,UAAU,gBAAf,sCACA,gBAAKA,UAAU,kBAAf,8DAKR,gBAAKA,UAAU,kBAAf,kFAEF,iBAAKA,UAAU,OAAf,UACG0B,EAAKa,MACa,OAAjBb,EAAKa,KAAKxC,IACR,SAACqD,EAAA,EAAD,CAASC,SAAU3B,EAAKa,KAAMzC,KAAM,WAKtC,SAACsD,EAAA,EAAD,CAAStD,KAAM,YAEjB,gBAAKE,UAAU,WAAf,UACE,gBAAKc,IAAKC,EAAQ,OAAmCC,IAAI,cAI/D,SAAC,EAAD,CAAeN,KAAMkB,EAAiBhB,QAASiB,MAGpD,C","sources":["components/idist/ToggleBtn.js","components/idist/popup/ActivityPopup.js","views/Main/Activity.js"],"sourcesContent":["/* eslint-disable */\n\nimport React from 'react';\n\nimport 'assets/scss/club.scss';\nimport 'assets/scss/reset.scss';\n\nfunction ToggleBtn(props) {\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id={props.id}\n        className=\"toggleBtn\"\n        hidden\n        onChange={(event) => props.onChange(event.target.checked, props.id)}\n        disabled={props.disabled}\n      />\n      <label htmlFor={props.id} className=\"toggleSwitch\">\n        <span className=\"toggleButton\"></span>\n      </label>\n    </>\n  );\n}\n\nexport default ToggleBtn;\n","/* eslint-disable */\n\nimport React from 'react';\nimport 'assets/scss/popup.scss';\nimport 'assets/scss/reset.scss';\nimport ToggleBtn from 'components/idist/ToggleBtn';\n\nfunction ActivityPopup(props) {\n  return (\n    <div className=\"popup-shadow flex-center\" style={{ display: props.open ? 'flex' : 'none' }}>\n      <div className=\"activitypopup relative\">\n        <div className=\"reportpopup-title\">Activity settings</div>\n        <div className=\"closebtn\" onClick={() => props.setOpen(!props.open)} style={{ top: '20px' }}>\n          <img src={require(`images/club/btn-close.png`)} alt=\"\" style={{ width: '40px' }} />\n        </div>\n\n        <div className=\"activitypopup-content\">\n          <div className=\"activitypopup-content-title\">Notion</div>\n          <div className=\"activitypopup-content-item flex-between\">\n            <div>Mention</div>\n            <div>\n              <ToggleBtn id={'Mention'} />\n            </div>\n          </div>\n          <div className=\"activitypopup-content-item flex-between\">\n            <div>Post</div>\n            <div>\n              <ToggleBtn id={'Post'} />\n            </div>\n          </div>\n          <div className=\"activitypopup-content-item flex-between\">\n            <div>Comment</div>\n            <div>\n              <ToggleBtn id={'Comment'} />\n            </div>\n          </div>\n          <div className=\"activitypopup-content-item flex-between\">\n            <div>Like</div>\n            <div>\n              <ToggleBtn id={'Like'} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ActivityPopup;\n","/* eslint-disable */\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getActivitiesInit } from 'redux/idistStore/activitiesSlice';\nimport { getUserInit } from 'redux/idistStore/userSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { Loader } from 'components/idist/Loader';\nimport 'assets/scss/reset.scss';\nimport 'assets/scss/main.scss';\nimport Profile from 'components/idist/Profile.js';\nimport { dateCalculation } from 'utils/dateCalculation';\nimport MainTap from './MainTap';\nimport ActivityPopup from 'components/idist/popup/ActivityPopup';\n\nfunction Activity() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { activities } = useSelector((state) => state.activity);\n  const { user } = useSelector((state) => state.user);\n  const [isActivityPopup, setIsActivityPopup] = useState(false);\n  useEffect(() => {\n    dispatch(getActivitiesInit());\n    dispatch(getUserInit());\n  }, [dispatch]);\n\n  useEffect(() => {\n    window.scrollTo(0, 914);\n  }, []);\n  if (activities.message !== 'ok')\n    return (\n      <div className=\"flex-center\">\n        <Loader />\n      </div>\n    );\n\n  return (\n    <div className=\"main \">\n      <div className=\"container\">\n        <div className=\"item\">\n          <MainTap />\n          <div className=\"activity home-box\">\n            <div className=\"flex-between\">\n              <div className=\"activity-title\">\n                There are <span className=\"bold\">{activities.count} unread</span> activities.\n              </div>\n              <div className=\"activity-admin flex-center\" onClick={() => setIsActivityPopup(!isActivityPopup)}>\n                <img src={require(`images/main/admin.png`)} alt=\"\" /> Activity settings\n              </div>\n            </div>\n            <div className=\"categories\">\n              <div className=\"item flex-center active\">All</div>\n              <div className=\"item flex-center\">Operate Notice</div>\n              <div className=\"item flex-center\">Club Notice</div>\n              <div className=\"item flex-center\">User Activity</div>\n            </div>\n          </div>\n          <div className=\"activity-content\">\n            <div className=\"activity-del\">\n              <div className=\"delete-btn\">Delete all</div>\n            </div>\n            <div className=\"activity-list\">\n              {activities.data.length > 0 ? (\n                activities.data.map((activityItem, index) => {\n                  return (\n                    <div className=\"activity-list-item\" key={index}>\n                      <img src={require('images/main/icon-activity1.png')} />\n                      <div className=\"activity-list-item-content\">\n                        <div className=\"flex-center\">\n                          <div className=\"activity-list-item-title\">[{activityItem.title}]</div>\n                          <div\n                            className=\"activity-list-item-explain\"\n                            dangerouslySetInnerHTML={{ __html: activityItem.content }}\n                          ></div>\n                        </div>\n                        <div className=\"activity-list-item-info\">\n                          <div>{activityItem?.profile?.user.username}</div>\n                          <div>{dateCalculation(activityItem.created)}</div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })\n              ) : (\n                <div className=\"no-data flex-center\">\n                  <div>\n                    <img src={require('images/Error/img_error_page.png')} alt=\"\" />\n                  </div>\n                  <div className=\"no-data-title\">No search results found</div>\n                  <div className=\"no-data-content\">Try searching with a different keyword.</div>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"activity-explan\">Only activity notifications within the last 30 days are exposed.</div>\n        </div>\n        <div className=\"item\">\n          {user.data ? (\n            user.data.id !== null ? (\n              <Profile userData={user.data} type={'login'} />\n            ) : (\n              <Profile type={'logout'} />\n            )\n          ) : (\n            <Profile type={'logout'} />\n          )}\n          <div className=\"chatting\">\n            <img src={require(`../../images/main/chatting.png`)} alt=\"\" />\n          </div>\n        </div>\n      </div>\n      <ActivityPopup open={isActivityPopup} setOpen={setIsActivityPopup} />\n    </div>\n  );\n}\n\nexport default Activity;\n"],"names":["props","type","id","className","hidden","onChange","event","target","checked","disabled","htmlFor","style","display","open","onClick","setOpen","top","src","require","alt","width","ToggleBtn","dispatch","useDispatch","activities","useNavigate","useSelector","state","activity","user","useState","isActivityPopup","setIsActivityPopup","useEffect","getActivitiesInit","getUserInit","window","scrollTo","message","Loader","MainTap","count","data","length","map","activityItem","index","title","dangerouslySetInnerHTML","__html","content","profile","username","dateCalculation","created","Profile","userData"],"sourceRoot":""}