{"version":3,"file":"static/js/7276.12c52743.chunk.js","mappings":"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","sources":["components/idist/admin/JButton.js","views/Admin/ReportsSetting/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'assets/scss/component/jbutton.scss';\n\nconst JButton = ({ label, color, children, outline, size, disabled, width, onClick, ...props }) => {\n  const rootClassName = 'jg-button';\n  // const typeClassName = outline ? rootClassName + '-outline' : rootClassName + '-contain';\n  const typeClassName = outline ? 'outline' : 'contain';\n  const disabledClassName = disabled ? typeClassName + '-disabled' : '-';\n\n  return (\n    <div\n      disabled={disabled}\n      style={{ ...(width && { width: `${width}px` }) }}\n      className={`${rootClassName} \n        ${rootClassName}-${size} \n        ${rootClassName}-${typeClassName}-${color} \n        ${rootClassName}-${disabledClassName}\n        `}\n      onClick={disabled ? () => {} : onClick}\n      {...props}\n    >\n      {label || children}\n    </div>\n  );\n};\n\nexport default JButton;\n\nJButton.propTypes = {\n  color: PropTypes.oneOf(['primary', 'secondary', 'point', 'none']),\n  label: PropTypes.string,\n  children: PropTypes.element,\n  outline: PropTypes.bool,\n  size: PropTypes.oneOf(['s', 'm', 'l', 'xl']),\n  disabled: PropTypes.bool,\n  width: PropTypes.number\n};\n\nJButton.defaultProps = {\n  color: 'primary',\n  label: 'button',\n  children: <div>button</div>,\n  size: 'm',\n  disabled: false,\n  outline: false,\n  width: 140\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'lodash';\nimport { useOutletContext } from 'react-router';\nimport 'assets/scss/admin/reports.scss';\nimport {\n  getReportChoicesInit,\n  patchReportChoiceInit,\n  postReportChoiceInit\n} from 'redux/idistStore/admin/reportsSettingAdminSlice';\nimport JButton from 'components/idist/admin/JButton';\n\nconst ReportsSetting = () => {\n  const dispatch = useDispatch();\n  const outlet = useOutletContext();\n  const clubId = outlet.club.id || 22;\n  const rootClassName = useMemo(() => 'admin-reports-setting', []);\n  const [rcsTrigger, setRcsTrigger] = useState(0);\n  useEffect(() => {\n    dispatch(getReportChoicesInit({ id: clubId }));\n  }, [rcsTrigger]);\n\n  const reportChoicesRedux = useSelector((state) => state.reportsSettingAdmin.reportChoices);\n\n  useEffect(() => {\n    if (reportChoicesRedux[0]) {\n      setReportChoices(reportChoicesRedux);\n    }\n  }, [reportChoicesRedux]);\n  const [reportChoices, setReportChoices] = useState([]);\n  // const isChanged = useMemo(\n  //   () => JSON.stringify(reportChoices) === JSON.stringify(reportChoicesRedux),\n  //   [reportChoicesRedux, reportChoices]\n  // );\n\n  const [editingId, setEditingId] = useState(-1);\n\n  const [editTitle, setEditTitle] = useState('');\n  const [editContent, setEditContent] = useState('');\n\n  const [newTitle, setNewTitle] = useState('');\n  const [newContent, setNewContent] = useState('');\n\n  const isChanged = useMemo(\n    () => (editTitle && editContent) || (newTitle && newContent),\n    [editTitle, editContent, newTitle, newContent]\n  );\n\n  const addReportChoice = () => {\n    if (editingId > 0) {\n      if (!editTitle & !editContent) {\n        confirm('title content 모두 입력해주세요');\n        return;\n      }\n      dispatch(patchReportChoiceInit({ id: editingId, data: { title: editTitle, content: editContent } }));\n      setTimeout(() => {\n        setRcsTrigger((prev) => prev + 1);\n        setEditingId(-1);\n      }, 100);\n    } else {\n      if (!newTitle & !newContent) {\n        confirm('title content 모두 입력해주세요');\n        return;\n      }\n      dispatch(postReportChoiceInit({ id: clubId, data: { title: newTitle, content: newContent } }));\n      setTimeout(() => {\n        setRcsTrigger((prev) => prev + 1);\n      }, 100);\n    }\n  };\n\n  const onClickEdit = (reportChoice) => {\n    if (editingId > -1) {\n      confirm('수정 중인 다른 작업을 완료해주세요');\n      return;\n    }\n    setEditingId(reportChoice.id);\n  };\n\n  const onClickActivation = (reportChoice) => {\n    dispatch(patchReportChoiceInit({ id: reportChoice.id, data: { is_active: !reportChoice.is_active } }));\n  };\n\n  return (\n    <div className={`${rootClassName}`}>\n      <div className={`${rootClassName}-container`}>\n        <div className={`${rootClassName}-choices-container`}>\n          {reportChoices.map((reportChoiceItem, reportChoiceIndex) => {\n            // console.log(reportChoiceItem);\n            return (\n              <div className={`${rootClassName}-choice-item-container`} key={reportChoiceIndex}>\n                {reportChoiceItem.id === editingId ? (\n                  <div className={`${rootClassName}-choice-input-container`}>\n                    <input type={'text'} value={editTitle} onChange={(e) => setEditTitle(e.target.value)} />\n                    <textarea value={editContent} onChange={(e) => setEditContent(e.target.value)} />\n                  </div>\n                ) : (\n                  <>\n                    <div className={`${rootClassName}-choice-item-title`}>\n                      {reportChoiceItem.is_active ? '활성화' : '비활성화'}\n                    </div>\n                    <div className={`${rootClassName}-choice-item-title`}> {reportChoiceItem.title}</div>\n                    <div className={`${rootClassName}-choice-item-content`}> {reportChoiceItem.content}</div>\n                    <div style={{ gap: '10px' }}>\n                      <JButton label={'활성화/비활성화'} onClick={() => onClickActivation(reportChoiceItem)} />\n                      <JButton label={'수정'} onClick={() => onClickEdit(reportChoiceItem)} />\n                    </div>\n                  </>\n                )}\n              </div>\n            );\n          })}\n        </div>\n\n        <div className={`${rootClassName}-choice-input-container`}>\n          <input type={'text'} value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\n          <textarea value={newContent} onChange={(e) => setNewContent(e.target.value)} />\n        </div>\n\n        <div className={`${rootClassName}-submit-container`}>\n          <div style={{ gap: '10px' }}>\n            <JButton label={'reset'} onClick={() => console.log('reset')} />\n            <JButton label={'save'} disabled={!isChanged} onClick={() => addReportChoice({ id: clubId })} />\n            {/* <JButton label={'수정'} /> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportsSetting;\n"],"names":["JButton","label","color","children","outline","size","disabled","width","onClick","props","rootClassName","typeClassName","disabledClassName","style","className","defaultProps","dispatch","useDispatch","clubId","useOutletContext","club","id","useMemo","useState","rcsTrigger","setRcsTrigger","useEffect","getReportChoicesInit","reportChoicesRedux","useSelector","state","reportsSettingAdmin","reportChoices","setReportChoices","editingId","setEditingId","editTitle","setEditTitle","editContent","setEditContent","newTitle","setNewTitle","newContent","setNewContent","isChanged","map","reportChoiceItem","reportChoiceIndex","type","value","onChange","e","target","is_active","title","content","gap","reportChoice","patchReportChoiceInit","data","confirm","console","log","setTimeout","prev","postReportChoiceInit","addReportChoice"],"sourceRoot":""}