{"version":3,"file":"static/js/2128.04177577.chunk.js","mappings":"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","sources":["components/idist/popup/AlertPopup.js","components/idist/popup/tempPopup.js","components/common/Writing.js","components/idist/Button.js","components/idist/Loader.js","components/idist/ToggleBtn.js","views/Club/PostWriting.js"],"sourcesContent":["/* eslint-disable */\n\nimport React from 'react';\n\nimport 'assets/scss/popup.scss';\nimport 'assets/scss/reset.scss';\nimport { Button } from 'components/idist/Button';\n\nfunction AlertPopup(props) {\n  return (\n    <div className=\"popup-shadow flex-center\" style={{ display: props.open ? 'flex' : 'none' }}>\n      <div className=\"popup-alert relative\">\n        <div className=\"popup-alert-content\">{props.content}</div>\n        <div className=\"popup-alert-actions\">\n          <Button label={'Check'} size=\"l\" onClick={() => props.setOpen()} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AlertPopup;\n","/* eslint-disable */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport dayjs from 'dayjs';\n\nfunction TempPopup(props) {\n  const navigate = useNavigate();\n  const tempChange = (tempItem) => {\n    if (\n      confirm(\n        'When you load a temporary text, the writing\\nyou are creating disappears. Are you sure\\nyou want to load the selected text?'\n      )\n    ) {\n      navigate(`../writing/${tempItem.id}`);\n    }\n  };\n  const allDetele = () => {\n    if (confirm('Are you sure you want to delete all temporary posts?')) {\n      props.tempAllDetele();\n      props.setOpen(!props.open);\n    }\n  };\n  const selectDetele = (id) => {\n    if (confirm('Are you sure you want to delete the selected draft?')) {\n      props.tempSelectDetele(id);\n      props.setOpen(!props.open);\n    }\n  };\n  return (\n    <div className=\"temp-popup\" style={{ display: props.open ? 'block' : 'none' }}>\n      <div className=\"flex-between temp-header\">\n        <div className=\"temp-popup-title\">Save as draft {props.posts?.data?.length || 0}</div>\n        <div className=\"temp-popup-close\" onClick={() => props.setOpen(!props.open)}>\n          X\n        </div>\n      </div>\n      <div className=\"temp-body\">\n        <div className=\"flex-between \">\n          <div className=\"temp-content\">\n            Up to 300 temporary registration\n            <br /> posts are stored in 60 days.\n          </div>\n          <div className=\"temp-delete\" onClick={() => allDetele()}>\n            Delete All\n          </div>\n        </div>\n        <div className=\"temp-lsit\">\n          {props.posts?.data?.map((tempItem, index) => {\n            return (\n              <div className=\"temp-lsit-item flex-between\" key={index}>\n                <div className=\"temp-lsit-item-title\" onClick={() => tempChange(tempItem)}>\n                  {tempItem.title === '' ? 'Untitled' : tempItem.title}\n                </div>\n                <div className=\"temp-lsit-item-actions flex-center\">\n                  <div className=\"temp-lsit-item-date\">{dayjs(tempItem.created).format('YYYY.MM.DD')}</div>\n                  <div className=\"temp-lsit-item-delete\" onClick={() => selectDetele(tempItem.id)}>\n                    <img src={require('images/club/ic-trash.png')} alt=\"\" />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TempPopup;\n","/* eslint-disable */\nimport React, { useState, useEffect, useRef } from 'react';\nimport JoditEditor from 'jodit-react';\nimport { useNavigate } from 'react-router-dom';\nimport ToggleBtn from 'components/idist/ToggleBtn';\nimport { Button } from 'components/idist/Button';\nimport AlertPopup from 'components/idist/popup/AlertPopup';\nimport TempPopup from 'components/idist/popup/tempPopup';\nimport ConfirmPopup from 'components/idist/popup/ConfirmPopup';\nimport 'assets/scss/club.scss';\nimport 'assets/scss/jodit.scss';\n\nfunction Writing(props) {\n  const editor = useRef(null);\n  const navigate = useNavigate();\n  const [isHidePassword, setIsHidePassword] = useState(false);\n  const [openSelect, setOpenSelect] = useState(false);\n  const [tempPopupOpen, setTempPopupOpen] = useState(false);\n  const [joditConfig] = useState({\n    toolbarStyle: 'top',\n    minHeight: '615px',\n  });\n\n  const closeSelect = (text, id) => {\n    props.setPostsData({ ...props.postsData, board: id });\n    props.setBoardSelect(text);\n    setOpenSelect(false);\n  };\n\n  const onlyNumber = (e) => {\n    const { value } = e.target;\n\n    const onlyNumberRegular = value.replace(/[^0-9]/g, '');\n    props.setPostsData({ ...props.postsData, password: onlyNumberRegular });\n  };\n\n  const postCancel = (e) => {\n    // props.setPwdPopupOpen(true);\n    // props.setPopupContent(\n    //   'When you load a temporary text, the writing\\nyou are creating disappears. Are you sure\\nyou want to load the selected text?'\n    // );\n    if (\n      confirm(\n        'When you load a temporary text, the writing\\nyou are creating disappears. Are you sure\\nyou want to load the selected text?'\n      )\n    ) {\n      navigate(-1);\n    }\n  };\n\n  return (\n    <div className=\"club-home writing \">\n      <div>\n        <div className=\"flex-between board-actions \">\n          <Button label={'Cancel'} size={'m'} onClick={() => postCancel()} />\n          <div className=\"flex-center board-actions-right relative\">\n            {props.type === 'club' && (\n              <>\n                <div className=\"board-actions-select \" onClick={() => setOpenSelect(!openSelect)}>\n                  {props?.boardSelect}\n                  <img src={require('images/club/arrow-bottom.png')} alt=\"\" />\n                </div>\n\n                <div className={'board-actions-select-box ' + (openSelect ? '' : 'none')}>\n                  <div\n                    className=\"board-actions-select-item flex-between\"\n                    onClick={() => props.closeSelect(props?.boardSelect, props?.postsData?.board)}\n                  >\n                    {props?.boardSelect}\n                    <img src={require('images/club/arrow-bottom.png')} alt=\"\" />\n                  </div>\n                  {props?.boardGroups?.data.map((boardGroupsItem, index) => {\n                    return (\n                      <div key={index}>\n                        <div className=\"board-actions-select-boardGroup\">{boardGroupsItem?.title}</div>\n                        {boardGroupsItem?.boards.map((boardItem, index) => {\n                          return (\n                            <div\n                              className=\"board-actions-select-item\"\n                              key={index}\n                              onClick={() => closeSelect(boardItem.title, boardItem.id)}\n                            >\n                              {boardItem.title}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    );\n                  })}\n                </div>\n                <div className=\"board-actions-count flex-center\">\n                  <div onClick={() => props.postsCreate('temp')}>Save as draft</div> <div className=\"bar\"></div>\n                  <div onClick={() => setTempPopupOpen(!tempPopupOpen)}>{props.posts?.data?.length || 0}</div>\n                </div>\n                <TempPopup\n                  open={tempPopupOpen}\n                  setOpen={() => setTempPopupOpen()}\n                  tempAllDetele={props?.tempAllDetele}\n                  tempSelectDetele={props?.tempSelectDetele}\n                  posts={props?.posts}\n                />\n              </>\n            )}\n            <Button label={'Post'} size=\"m\" onClick={() => props.postsCreate()} />\n          </div>\n        </div>\n        <div className=\"board\">\n          <div className=\"board-input\">\n            <input\n              placeholder=\"Please enter a title\"\n              value={props.postsData.title || ''}\n              onChange={(e) => props.setPostsData({ ...props.postsData, title: e.target.value })}\n            />\n          </div>\n          <JoditEditor\n            ref={editor}\n            config={joditConfig}\n            value={props.postsData.content}\n            tabIndex={1} // tabIndex of textarea\n            onBlur={(newContent) => props.setPostsData({ ...props.postsData, content: newContent })} // preferred to use only this option to update the content for performance reasons\n          />\n          {props.type === 'club' && (\n            <>\n              <div className=\"board-tag\">\n                <div className=\"board-tag-item flex-center\">\n                  {props.tagList.map((tagItem, index) => {\n                    return (\n                      <div key={index}>\n                        <div\n                          style={{ display: props.tagEditId === tagItem.tag ? 'none' : 'inline' }}\n                          className=\"board-tag-item-list flex-center\"\n                          onClick={() => props.tagEditer(tagItem)}\n                        >\n                          # {tagItem.title}\n                          <img\n                            className=\"board-tag-close\"\n                            src={require('images/club/btn-close.png')}\n                            onClick={() => props.tagDelect(tagItem.tag)}\n                          />\n                        </div>\n                        <input\n                          className=\"tag-edit\"\n                          style={{ display: props.tagEditId === tagItem.tag ? 'flex' : 'none' }}\n                          placeholder=\"#Tag\"\n                          maxLength={20}\n                          onKeyPress={(e) => props.tagEditKeyUP(e, tagItem.tag)}\n                          // onBlur={(e) => tagKeyBlur(e)}\n                          value={props.tagEditValue}\n                          onChange={(e) => props.setTagEditValue(e.target.value)}\n                        />\n                      </div>\n                    );\n                  })}\n                  {props.tagList.length < 10 && (\n                    <input\n                      maxLength={20}\n                      className=\"tag-input\"\n                      placeholder=\"#Tag\"\n                      onKeyPress={(e) => props.tagKeyUP(e)}\n                      // onBlur={(e) => tagKeyBlur(e)}\n                      value={props.tagVale}\n                      onChange={(e) => props.setTagVale(e.target.value)}\n                    />\n                  )}\n                </div>\n              </div>\n              <div className=\"board-allow\">\n                <div>\n                  Allow Comments\n                  <ToggleBtn id=\"Comments\" onChange={props.onCheckedElement} />\n                </div>\n                <div>\n                  Allow Sharing\n                  <ToggleBtn id=\"Sharing\" onChange={props.onCheckedElement} />\n                </div>\n                <div>\n                  Allow Search\n                  <ToggleBtn id=\"Search\" onChange={props.onCheckedElement} />\n                </div>\n                <div onClick={() => props.onClickElement('Notice')}>\n                  Register as a Notice\n                  <ToggleBtn\n                    id=\"Notice\"\n                    onChange={props.onCheckedElement}\n                    disabled={props.checkedList.indexOf('secret') > -1}\n                  />\n                </div>\n                <div onClick={() => props.onClickElement('event')}>\n                  Event Notice\n                  <ToggleBtn\n                    id=\"event\"\n                    onChange={props.onCheckedElement}\n                    disabled={props.checkedList.indexOf('Notice') > -1}\n                  />\n                </div>\n              </div>\n              <div className=\"board-allow\">\n                <div onClick={() => props.onClickElement('secret')}>\n                  secret post\n                  <ToggleBtn\n                    id=\"secret\"\n                    onChange={props.onCheckedElement}\n                    disabled={props.checkedList.indexOf('Notice') > -1}\n                  />\n                </div>\n                {props.checkedList.indexOf('secret') > -1 && (\n                  <div className=\"board-password \">\n                    <div className=\"board-password-input relative\">\n                      password\n                      <input\n                        value={props.postsData.password || ''}\n                        maxLength=\"4\"\n                        type={isHidePassword ? 'text' : 'password'}\n                        onChange={(e) => onlyNumber(e)}\n                      />\n                      {isHidePassword ? (\n                        <div className=\"password-btn\" onClick={() => setIsHidePassword(!isHidePassword)}>\n                          <img src={require('images/club/ic-show-gr.png')} />\n                        </div>\n                      ) : (\n                        <div className=\"password-btn\" onClick={() => setIsHidePassword(!isHidePassword)}>\n                          <img src={require('images/club/ic-hide-gr.png')} />\n                        </div>\n                      )}\n                    </div>\n                    {props.postsData.password.length === 4 || props.postsData.password.length === 0 ? (\n                      <div className=\"remark\">*You can view posts by entering your password.</div>\n                    ) : (\n                      <div className=\"password-error\">*Please enter a four-digit password.</div>\n                    )}\n                  </div>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n      <AlertPopup content={props.popupContent} open={props.pwdPopupOpen} setOpen={() => props.setPwdPopupOpen(false)} />\n    </div>\n  );\n}\n\nexport default Writing;\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport 'assets/scss/reset.scss';\nimport 'assets/scss/components.scss';\n\n/**\n * Primary UI component for user interaction\n */\nexport function Button({ primary, size, line, label, width, disabled, onClick, ...props }) {\n  const variant = line ? 'line' : 'contained';\n  return (\n    <button\n      disabled={disabled}\n      style={{ width: `${width}px` }}\n      className={[\n        'button-component',\n        `button-size-${size}`,\n        `button-${primary}`,\n        `button-${variant}`,\n        'flex-center'\n      ].join(' ')}\n      {...props}\n      onClick={() => onClick()}\n    >\n      {label}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  primary: PropTypes.oneOf(['primary', 'secondary', 'point', 'success', 'warming', 'error', 'cancel']),\n  line: PropTypes.bool,\n  size: PropTypes.oneOf(['xl', 'l', 'm', 's']),\n  width: PropTypes.number,\n  label: PropTypes.any,\n  disabled: PropTypes.bool\n};\n\nButton.defaultProps = {\n  primary: 'primary',\n  line: false,\n  size: 'M',\n  width: 140,\n  label: 'Button',\n  disabled: false\n};\n","/* eslint-disable import/no-extraneous-dependencies */\nimport React from 'react';\n// import PropTypes from 'prop-types';\nimport 'assets/scss/reset.scss';\nimport 'assets/scss/components.scss';\n\n/**\n * Primary UI component for user interaction\n */\nexport function Loader() {\n  return (\n    <div className=\"loader\">\n      <div className=\"dots\" />\n      <div className=\"dots\" />\n      <div className=\"dots\" />\n      <div className=\"dots\" />\n      <div className=\"dots\" />\n      <div className=\"loader-text flex-center\">Loading...</div>\n    </div>\n  );\n}\n\nLoader.propTypes = {};\n\nLoader.defaultProps = {};\n","/* eslint-disable */\n\nimport React from 'react';\n\nimport 'assets/scss/club.scss';\nimport 'assets/scss/reset.scss';\n\nfunction ToggleBtn(props) {\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id={props.id}\n        className=\"toggleBtn\"\n        hidden\n        onChange={(event) => props.onChange(event.target.checked, props.id)}\n        disabled={props.disabled}\n      />\n      <label htmlFor={props.id} className=\"toggleSwitch\">\n        <span className=\"toggleButton\"></span>\n      </label>\n    </>\n  );\n}\n\nexport default ToggleBtn;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getClubBoardGroupsInit, deleteClubTemporaryInit } from 'redux/idistStore/clubSlice';\nimport { getPostsInit, deletePostTemporaryInit, getPostInit, patchPostInit } from 'redux/idistStore/postsSlice';\nimport { postBoardPostInit, boardReset } from 'redux/idistStore/boardSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { Loader } from 'components/idist/Loader';\nimport Writing from 'components/common/Writing';\nimport 'assets/scss/club.scss';\nimport 'assets/scss/jodit.scss';\n\nfunction PostWriting() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { boardGroups } = useSelector((state) => state.club);\n  const boardState = useSelector((state) => state.board);\n  const { posts, post } = useSelector((state) => state.post);\n  const { id, postId } = useParams();\n  const [checkedList, setCheckedList] = useState([]);\n  const [tagList, setTagList] = useState([]);\n  const [tagVale, setTagVale] = useState('');\n  const [tagEditId, setTagEditId] = useState('');\n  const [tagEditValue, setTagEditValue] = useState('');\n  const [pwdPopupOpen, setPwdPopupOpen] = useState(false);\n  const [popupContent, setPopupContent] = useState('');\n  const [boardSelect, setBoardSelect] = useState('Please select a Board');\n  const [postsData, setPostsData] = useState({\n    board: null,\n    title: '',\n    content: '',\n    tags: [],\n    is_temporary: false,\n    is_secret: false,\n    password: null,\n    is_notice: false,\n    is_event: false,\n    is_search: false,\n    is_share: false,\n    is_comment: false\n  });\n\n  useEffect(() => {\n    dispatch(boardReset());\n    dispatch(getClubBoardGroupsInit({ id }));\n    dispatch(getPostsInit({ parameters: { is_temporary: true } }));\n  }, []);\n\n  useEffect(() => {\n    if (postId !== undefined) {\n      dispatch(getPostInit({ id: postId }));\n    }\n  }, [postId]);\n\n  useEffect(() => {\n    if (boardState.post.data) {\n      if (!boardState.post.data.is_temporary)\n        navigate(`/club/${boardState.post.data.club}/post/${boardState.post.data.id}`);\n    }\n  }, [boardState.post]);\n\n  useEffect(() => {\n    if (post.message === 'ok' && postId !== undefined) {\n      setTagList([...post.data.tags.map((item) => item)]);\n\n      setPostsData({\n        board: post.data.board,\n        title: post.data.title,\n        content: post.data.content,\n        tags: [...post.data.tags.map((item) => item.title)],\n        is_temporary: post.data.is_temporary,\n        is_secret: post.data.is_secret,\n        password: post.data.password,\n        is_notice: post.data.is_notice,\n        is_event: post.data.is_event,\n        is_search: post.data.is_search,\n        is_share: post.data.is_share,\n        is_comment: post.data.is_comment\n      });\n      setBoardSelect(post.data.board_title);\n    }\n  }, [post]);\n\n  const closeSelect = (text, boardId) => {\n    setPostsData({ ...postsData, board: boardId });\n    setBoardSelect(text);\n  };\n\n  const onCheckedElement = (checked, checkId) => {\n    switch (id) {\n      case 'Comments':\n        setPostsData({ ...postsData, is_comment: true });\n        break;\n      case 'Sharing':\n        setPostsData({ ...postsData, is_share: true });\n        break;\n      case 'Notice':\n        setPostsData({ ...postsData, is_notice: true });\n        break;\n      case 'Search':\n        setPostsData({ ...postsData, is_search: true });\n        break;\n      case 'Event':\n        setPostsData({ ...postsData, is_event: true });\n        break;\n      case 'secret':\n        setPostsData({ ...postsData, is_secret: true });\n        break;\n      default:\n    }\n    if (checked) {\n      setCheckedList([...checkedList, checkId]);\n    } else if (!checked) {\n      setCheckedList(checkedList.filter((el) => el !== checkId));\n    }\n  };\n  const onClickElement = (clickId) => {\n    if (clickId === 'Notice') {\n      if (checkedList.indexOf('secret') > -1) {\n        setPwdPopupOpen(true);\n        setPopupContent('Notice posts cannot be set as secret posts.');\n      }\n    }\n    if (clickId === 'secret') {\n      if (checkedList.indexOf('Notice') > -1) {\n        setPwdPopupOpen(true);\n        setPopupContent('You cannot set a notice for a secret message.');\n      }\n    }\n    if (clickId === 'event') {\n      if (checkedList.indexOf('Notice') > -1) {\n        setPwdPopupOpen(true);\n        setPopupContent('Event posts cannot be set as Notice posts.');\n      } else if (checkedList.indexOf('secret') > -1) {\n        setPwdPopupOpen(true);\n        setPopupContent('Event posts cannot be set as secret posts');\n      }\n    }\n  };\n\n  const tagKeyUP = (e) => {\n    const tagitem = {\n      tag: tagList.length + 1,\n      title: tagVale\n    };\n\n    if (e.key === 'Enter') {\n      setTagList([...tagList, tagitem]);\n      setPostsData({ ...postsData, tags: [...postsData.tags, tagitem.title] });\n      setTagVale('');\n    }\n  };\n\n  // const tagKeyBlur = (e) => {\n  //   setTagList([...tagList, e.target.value]);\n  //   setTagVale('');\n  // };\n\n  const tagDelect = (item) => {\n    setTagList(tagList.filter((element) => element.tag !== item));\n  };\n  const tagEditKeyUP = (e, tagId) => {\n    if (e.key === 'Enter') {\n      const findIndex = tagList.findIndex((element) => element.tag === tagId);\n      const copyArray = [...tagList];\n      if (findIndex !== -1) {\n        copyArray[findIndex] = { ...copyArray[findIndex], title: e.target.value };\n      }\n      setTagList(copyArray);\n      setTagEditId('');\n      setTagEditValue('');\n    }\n  };\n  const tagEditer = (item) => {\n    setTagEditId(item.tag);\n    setTagEditValue(item.title);\n  };\n  // 게시글 생성\n  const postsCreate = (temp) => {\n    console.log('postId', postId);\n    if (postsData.title === '') {\n      setPwdPopupOpen(true);\n      setPopupContent('Please enter a title.');\n      return false;\n    }\n\n    if (postsData.is_secret) {\n      if (postsData.password.length < 4) {\n        window.alert('비밀번호 4자를 입력해주세요');\n        return false;\n      }\n    }\n    if (temp !== 'temp')\n      if (postsData.board === null) {\n        setPwdPopupOpen(true);\n        setPopupContent('Please select a bulletin board.');\n        return false;\n      }\n    if (postId !== undefined) {\n      dispatch(\n        patchPostInit({\n          id: postId,\n          parameters: postsData,\n          actionList: [{ type: getPostsInit.type, payload: { parameters: { is_temporary: true } } }]\n        })\n      );\n      setTimeout(() => {\n        navigate(`/club/${post.data.club}/post/${post.data.id}`);\n      }, 500);\n    } else {\n      console.log();\n      dispatch(\n        postBoardPostInit({\n          id,\n          parameters: { ...postsData, is_temporary: temp === 'temp' },\n          actionList: [{ type: getPostsInit.type, payload: { parameters: { is_temporary: true } } }]\n        })\n      );\n    }\n    return null;\n  };\n  // const onlyNumber = (e) => {\n  //   const { value } = e.target;\n\n  //   const onlyNumberRegular = value.replace(/[^0-9]/g, '');\n  //   setPostsData({ ...postsData, password: onlyNumberRegular });\n  // };\n\n  // TODO 임시글 삭제\n  const tempAllDetele = () => {\n    dispatch(\n      deleteClubTemporaryInit({\n        id,\n        actionList: [{ type: getPostsInit.type, payload: { parameters: { is_temporary: true } } }]\n      })\n    );\n  };\n\n  const tempSelectDetele = (selectId) => {\n    dispatch(\n      deletePostTemporaryInit({\n        id: selectId,\n        actionList: [{ type: getPostsInit.type, payload: { parameters: { is_temporary: true } } }]\n      })\n    );\n  };\n  console.log('boardState.post', boardState.post);\n  if (boardGroups.message !== 'ok')\n    return (\n      <div className=\"flex-center\">\n        <Loader />\n      </div>\n    );\n  return (\n    <Writing\n      posts={posts}\n      type=\"club\"\n      boardSelect={boardSelect}\n      closeSelect={closeSelect}\n      setBoardSelect={setBoardSelect}\n      boardGroups={boardGroups}\n      setPostsData={setPostsData}\n      onCheckedElement={onCheckedElement}\n      onClickElement={onClickElement}\n      postsData={postsData}\n      postsCreate={postsCreate}\n      setTagVale={setTagVale}\n      tagVale={tagVale}\n      tagList={tagList}\n      tagEditId={tagEditId}\n      tagKeyUP={tagKeyUP}\n      tagEditer={tagEditer}\n      tagEditKeyUP={tagEditKeyUP}\n      tagDelect={tagDelect}\n      setTagEditValue={setTagEditValue}\n      tagEditValue={tagEditValue}\n      tempAllDetele={tempAllDetele}\n      tempSelectDetele={tempSelectDetele}\n      checkedList={checkedList}\n      setPwdPopupOpen={setPwdPopupOpen}\n      pwdPopupOpen={pwdPopupOpen}\n      setPopupContent={setPopupContent}\n      popupContent={popupContent}\n      setCheckedList={setCheckedList}\n    />\n  );\n}\n\nexport default PostWriting;\n"],"names":["props","className","style","display","open","content","label","size","onClick","setOpen","navigate","useNavigate","posts","data","length","confirm","tempAllDetele","map","tempItem","index","id","tempChange","title","dayjs","created","format","tempSelectDetele","src","require","alt","editor","useRef","useState","isHidePassword","setIsHidePassword","openSelect","setOpenSelect","tempPopupOpen","setTempPopupOpen","toolbarStyle","minHeight","joditConfig","type","boardSelect","closeSelect","postsData","board","boardGroups","boardGroupsItem","boards","boardItem","text","setPostsData","setBoardSelect","postsCreate","placeholder","value","onChange","e","target","ref","config","tabIndex","onBlur","newContent","tagList","tagItem","tagEditId","tag","tagEditer","tagDelect","maxLength","onKeyPress","tagEditKeyUP","tagEditValue","setTagEditValue","tagKeyUP","tagVale","setTagVale","ToggleBtn","onCheckedElement","onClickElement","disabled","checkedList","indexOf","password","onlyNumberRegular","replace","onlyNumber","popupContent","pwdPopupOpen","setPwdPopupOpen","Button","primary","line","width","variant","join","defaultProps","Loader","hidden","event","checked","htmlFor","dispatch","useDispatch","useSelector","state","club","boardState","post","useParams","postId","setCheckedList","setTagList","setTagEditId","setPopupContent","tags","is_temporary","is_secret","is_notice","is_event","is_search","is_share","is_comment","useEffect","boardReset","getClubBoardGroupsInit","getPostsInit","parameters","undefined","getPostInit","message","item","board_title","console","log","boardId","checkId","filter","el","clickId","temp","window","alert","patchPostInit","actionList","payload","setTimeout","postBoardPostInit","tagitem","key","tagId","findIndex","element","copyArray","deleteClubTemporaryInit","selectId","deletePostTemporaryInit"],"sourceRoot":""}