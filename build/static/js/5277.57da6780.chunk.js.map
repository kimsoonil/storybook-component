{"version":3,"file":"static/js/5277.57da6780.chunk.js","mappings":"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","sources":["components/common/footer/Footer.jsx","views/Club/Post/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { getStorage, setStorage } from 'util/storage';\n\nfunction Cookie() {\n  const [isAllow, setIsAllow] = useState(getStorage('acceptCookie') === 'true');\n  const onAllowCookie = () => {\n    setStorage('acceptCookie', 'true');\n    setIsAllow(true);\n  };\n  return (\n    <div className=\"cookie\" style={{ display: isAllow ? 'none' : 'inline-block' }}>\n      <div className=\"cookie_con\">\n        <button type=\"button\" className=\"btn_close\" onClick={() => setIsAllow(true)}>\n          <span className=\"a11y\">닫기</span>\n        </button>\n        <dl>\n          <dt>Cookie Policy</dt>\n          <dd>\n            Our website uses cookies to improve your browsing experience.\n            <br />\n            By using our site you agree to the use of cookies.\n            <button type=\"button\" onClick={() => console.log('test')}>\n              Learn More\n            </button>\n          </dd>\n        </dl>\n        <button type=\"button\" className=\"btn_accept\" onClick={onAllowCookie}>\n          <span>ACCEPT</span>\n        </button>\n      </div>\n    </div>\n  );\n}\nfunction Footer() {\n  const onNavigate = () => {\n    // console.log('navigate');\n  };\n  return (\n    <div id=\"footer_wrap\">\n      <div className=\"footer\">\n        <Cookie />\n        <div className=\"copyright\">© 2023 Creta. All rights reserved.</div>\n        <div className=\"footer_menu\">\n          <button onClick={() => onNavigate()} aria-hidden=\"true\">\n            Terms of Service\n          </button>\n          <button onClick={() => onNavigate()} aria-hidden=\"true\">\n            Privacy Policy\n          </button>\n          <button onClick={() => onNavigate()} aria-hidden=\"true\" className=\"support\">\n            Support\n          </button>\n          <div className=\"flag_wrap\">\n            <div className=\"flag_language\">\n              <span className=\"language\">English</span>\n              <button type=\"button\" className=\"arrow\">\n                <span className=\"a11y\">선택</span>\n              </button>\n            </div>\n            <ul className=\"flag_list\">\n              <li className=\"change\">\n                <button type=\"button\" className=\"language\">\n                  <span>Change Language</span>\n                </button>\n              </li>\n              <li>\n                <button type=\"button\" className=\"language us\">\n                  <span>English</span>\n                </button>\n              </li>\n              <li>\n                <button type=\"button\" className=\"language kr\">\n                  <span>Korean</span>\n                </button>\n              </li>\n              <li>\n                <button type=\"button\" className=\"language jp\">\n                  <span>Japanese</span>\n                </button>\n              </li>\n              <li>\n                <button type=\"button\" className=\"language cn\">\n                  <span>Chinese</span>\n                </button>\n              </li>\n              <li>\n                <button type=\"button\" className=\"language de\">\n                  <span>Deutsh</span>\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","/* eslint-disable */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getPostInit,\n  getPostLikesInit,\n  postPostLikeInit,\n  postPostUnlikeInit,\n  postPostDislikeInit,\n  postPostUndislikeInit,\n  postPostShareInit,\n  postPostPinInit,\n  postPostUnPinInit,\n  deletePostInit\n} from 'redux/idistStore/postsSlice';\nimport { useOutletContext } from 'react-router-dom';\nimport { useParams } from 'react-router';\n\nimport { Loader } from 'components/idist/Loader';\nimport Profile from 'components/idist/Profile';\nimport SharePopup from 'components/idist/popup/SharePopup';\nimport ReportPopup from 'components/idist/popup/ReportPopup';\nimport SideMember from 'components/idist/Club/SideMember';\nimport Footer from 'components/common/footer/Footer';\nimport SideEvent from 'components/idist/Club/SideEvent';\n\nimport HotPosts from 'components/idist/Club/HotPosts';\nimport PostContent from 'components/common/Post/PostContent';\nimport PostList from 'components/common/Post/PostList';\nimport PostRecent from 'components/common/Post/PostRecent';\n\nimport 'assets/scss/post.scss';\nimport 'assets/scss/main.scss';\n\nfunction Posts(props) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [openPopup, setOpenPopup] = useState(false);\n  const { post, like } = useSelector((state) => state.post);\n  const { id, postId } = useParams();\n  const clubId = useOutletContext();\n  const [listState, setListState] = useState(false);\n  const [disListState, setDisListState] = useState(false);\n  const [likeCount, setLikeCount] = useState(0);\n  const [disLikeCount, setDisLikeCount] = useState(0);\n  const [openETC, setOpenETC] = useState(false);\n  const [reportOpen, setReportOpen] = useState(false);\n  useEffect(() => {\n    dispatch(getPostInit({ id: postId }));\n    dispatch(getPostLikesInit({ id: postId }));\n  }, [postId]);\n\n  useEffect(() => {\n    if (post?.data) {\n      setListState(post?.data?.is_liked);\n      setDisListState(post?.data?.is_dislike);\n      setLikeCount(post?.data?.like_count);\n      setDisLikeCount(post?.data?.dislike_count);\n      localStorage.setItem('board', post.data.board_title);\n      localStorage.setItem('boardGroup', post.data.board_group_title);\n    }\n  }, [post]);\n\n  const handleClickPin = (pin) => {\n    if (pin) {\n      dispatch(\n        postPostUnPinInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    } else {\n      dispatch(\n        postPostPinInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    }\n  };\n  const handleClickLike = () => {\n    setListState(!listState);\n    setDisListState(false);\n    if (listState) {\n      setLikeCount(likeCount - 1);\n      dispatch(\n        postPostUnlikeInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    } else {\n      setLikeCount(likeCount + 1);\n      dispatch(\n        postPostLikeInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    }\n  };\n  const handleClickDisLike = (disLike) => {\n    setDisListState(!disListState);\n    setListState(false);\n    if (disListState) {\n      setDisLikeCount(disLikeCount - 1);\n      dispatch(\n        postPostUndislikeInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    } else {\n      setDisLikeCount(disLikeCount + 1);\n      dispatch(\n        postPostDislikeInit({\n          id: postId,\n          actionList: [\n            { type: getPostInit.type, payload: { id: postId } },\n            { type: getPostLikesInit.type, payload: { id: postId } }\n          ]\n        })\n      );\n    }\n  };\n\n  const handleClickShare = (link) => {\n    dispatch(postPostShareInit({ id: id, parameters: { link: link } }));\n  };\n  const deletePost = (id, club, board) => {\n    if (confirm('Are you sure you want to delete the post?')) {\n      dispatch(deletePostInit({ id: id }));\n      navigate(`/club/${club}/board/${board}`);\n    }\n  };\n  const postNavigate = () => {\n    navigate(`/club/${props.id}/board/${props.post.data.board}`);\n  };\n  if (post.message !== 'ok')\n    return (\n      <div className=\"flex-center\">\n        <Loader />\n      </div>\n    );\n  return (\n    <div className=\"posts container\">\n      <div className=\"item\">\n        <PostContent\n          type={'club'}\n          postNavigate={postNavigate}\n          post={post}\n          clubId={clubId}\n          openETC={openETC}\n          setOpenETC={setOpenETC}\n          deletePost={deletePost}\n          setReportOpen={setReportOpen}\n          reportOpen={reportOpen}\n          like={like}\n          listState={listState}\n          likeCount={likeCount}\n          openPopup={openPopup}\n          setOpenPopup={setOpenPopup}\n          handleClickPin={handleClickPin}\n          disListState={disListState}\n          disLikeCount={disLikeCount}\n          handleClickLike={handleClickLike}\n          handleClickDisLike={handleClickDisLike}\n        />\n        <PostList post={post} id={id} />\n        <PostRecent post={post} />\n      </div>\n      <div className=\"item\">\n        {clubId.data.profile ? <Profile userData={clubId.data.profile} type={'club'} /> : <Profile type={'logout'} />}\n        <SideEvent id={id} />\n        <HotPosts />\n        <SideMember />\n      </div>\n\n      <SharePopup open={openPopup} setOpen={setOpenPopup} sharefuc={handleClickShare} />\n      <ReportPopup open={reportOpen} setOpen={setReportOpen} />\n    </div>\n  );\n}\n\nexport default Posts;\n"],"names":["Cookie","useState","getStorage","isAllow","setIsAllow","className","style","display","type","onClick","console","log","setStorage","id","props","dispatch","useDispatch","navigate","useNavigate","openPopup","setOpenPopup","useSelector","state","post","like","useParams","postId","clubId","useOutletContext","listState","setListState","disListState","setDisListState","likeCount","setLikeCount","disLikeCount","setDisLikeCount","openETC","setOpenETC","reportOpen","setReportOpen","useEffect","getPostInit","getPostLikesInit","data","is_liked","is_dislike","like_count","dislike_count","localStorage","setItem","board_title","board_group_title","message","postNavigate","board","deletePost","club","confirm","deletePostInit","handleClickPin","pin","postPostUnPinInit","actionList","payload","postPostPinInit","handleClickLike","postPostUnlikeInit","postPostLikeInit","handleClickDisLike","disLike","postPostUndislikeInit","postPostDislikeInit","profile","userData","open","setOpen","sharefuc","link","postPostShareInit","parameters"],"sourceRoot":""}