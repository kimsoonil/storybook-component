{"version":3,"file":"static/js/4114.0845e55f.chunk.js","mappings":"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","sources":["components/idist/popup/AlertPopup.js","components/idist/popup/tempPopup.js","components/common/Writing.js","components/idist/Button.js","components/idist/ToggleBtn.js"],"sourcesContent":["/* eslint-disable */\n\nimport React from 'react';\n\nimport 'assets/scss/popup.scss';\nimport 'assets/scss/reset.scss';\nimport { Button } from 'components/idist/Button';\n\nfunction AlertPopup(props) {\n  return (\n    <div className=\"popup-shadow flex-center\" style={{ display: props.open ? 'flex' : 'none' }}>\n      <div className=\"popup-alert relative\">\n        <div className=\"popup-alert-content\">{props.content}</div>\n        <div className=\"popup-alert-actions\">\n          <Button label={'Check'} size=\"l\" onClick={() => props.setOpen()} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AlertPopup;\n","/* eslint-disable */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport dayjs from 'dayjs';\n\nfunction TempPopup(props) {\n  const navigate = useNavigate();\n  const tempChange = (tempItem) => {\n    if (\n      confirm(\n        'When you load a temporary text, the writing\\nyou are creating disappears. Are you sure\\nyou want to load the selected text?'\n      )\n    ) {\n      navigate(`../writing/${tempItem.id}`);\n    }\n  };\n  const allDetele = () => {\n    if (confirm('Are you sure you want to delete all temporary posts?')) {\n      props.tempAllDetele();\n      props.setOpen(!props.open);\n    }\n  };\n  const selectDetele = (id) => {\n    if (confirm('Are you sure you want to delete the selected draft?')) {\n      props.tempSelectDetele(id);\n      props.setOpen(!props.open);\n    }\n  };\n  return (\n    <div className=\"temp-popup\" style={{ display: props.open ? 'block' : 'none' }}>\n      <div className=\"flex-between temp-header\">\n        <div className=\"temp-popup-title\">Save as draft {props.posts?.data?.length || 0}</div>\n        <div className=\"temp-popup-close\" onClick={() => props.setOpen(!props.open)}>\n          X\n        </div>\n      </div>\n      <div className=\"temp-body\">\n        <div className=\"flex-between \">\n          <div className=\"temp-content\">\n            Up to 300 temporary registration\n            <br /> posts are stored in 60 days.\n          </div>\n          <div className=\"temp-delete\" onClick={() => allDetele()}>\n            Delete All\n          </div>\n        </div>\n        <div className=\"temp-lsit\">\n          {props.posts?.data?.map((tempItem, index) => {\n            return (\n              <div className=\"temp-lsit-item flex-between\" key={index}>\n                <div className=\"temp-lsit-item-title\" onClick={() => tempChange(tempItem)}>\n                  {tempItem.title === '' ? 'Untitled' : tempItem.title}\n                </div>\n                <div className=\"temp-lsit-item-actions flex-center\">\n                  <div className=\"temp-lsit-item-date\">{dayjs(tempItem.created).format('YYYY.MM.DD')}</div>\n                  <div className=\"temp-lsit-item-delete\" onClick={() => selectDetele(tempItem.id)}>\n                    <img src={require('images/club/ic-trash.png')} alt=\"\" />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TempPopup;\n","/* eslint-disable */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport JoditEditor, { Jodit } from 'jodit-pro-react';\nimport { useNavigate } from 'react-router-dom';\nimport ToggleBtn from 'components/idist/ToggleBtn';\nimport { Button } from 'components/idist/Button';\nimport AlertPopup from 'components/idist/popup/AlertPopup';\nimport TempPopup from 'components/idist/popup/tempPopup';\nimport ConfirmPopup from 'components/idist/popup/ConfirmPopup';\nimport 'assets/scss/club.scss';\nimport 'assets/scss/jodit.scss';\n\nfunction Writing(props) {\n  const editor = useRef(null);\n  const navigate = useNavigate();\n\n  const [openSelect, setOpenSelect] = useState(false);\n  const [tempPopupOpen, setTempPopupOpen] = useState(false);\n\n  const config = {\n    readonly: false,\n    height: 600,\n    padding: 20,\n    placeholder: 'Please leave a comment that you want to share.',\n    license: '63DFM-3/H53-ATPPJ-RGIRZ',\n    uploader: {\n      url: 'https://xdsoft.net/jodit/finder/?action=fileUpload'\n    },\n    buttons: [\n      'undo',\n      'redo',\n      '|',\n      'brush',\n      'bold',\n      'italic',\n      '|',\n      'left',\n      'center',\n      'right',\n      '|',\n      'ol',\n      'ul',\n      '|',\n      'table'\n    ]\n  };\n  function preparePaste(jodit) {\n    jodit.e.on(\n      'emoji',\n      (e) => {\n        if (confirm('Change pasted content?')) {\n          jodit.e.stopPropagation('paste');\n          jodit.s.insertHTML(\n            Jodit.modules.Helpers.getDataTransfer(e).getData(Jodit.constants.TEXT_HTML).replace(/a/g, 'b')\n          );\n          return false;\n        }\n      },\n      { top: true }\n    );\n  }\n  Jodit.plugins.add('preparePaste', preparePaste);\n\n  const closeSelect = (text, id) => {\n    props.setPostsData({ ...props.postsData, board: id });\n    props.setBoardSelect(text);\n    setOpenSelect(false);\n  };\n\n  const onlyNumber = (e) => {\n    const { value } = e.target;\n\n    const onlyNumberRegular = value.replace(/[^0-9]/g, '');\n    props.setPostsData({ ...props.postsData, password: onlyNumberRegular });\n  };\n\n  const postCancel = (e) => {\n    // props.setPwdPopupOpen(true);\n    // props.setPopupContent(\n    //   'When you load a temporary text, the writing\\nyou are creating disappears. Are you sure\\nyou want to load the selected text?'\n    // );\n    if (\n      confirm(\n        'When you load a temporary text, the writing\\nyou are creating disappears. Are you sure\\nyou want to load the selected text?'\n      )\n    ) {\n      navigate(-1);\n    }\n  };\n\n  return (\n    <div className=\"club-home writing \">\n      <div>\n        <div className=\"flex-between board-actions \">\n          <Button label={'Cancel'} size={'m'} onClick={() => postCancel()} />\n          <div className=\"flex-center board-actions-right relative\">\n            {props.type === 'club' && (\n              <>\n                <div className=\"board-actions-select \" onClick={() => setOpenSelect(!openSelect)}>\n                  {props?.boardSelect}\n                  <img src={require('images/club/arrow-bottom.png')} alt=\"\" />\n                </div>\n\n                <div className={'board-actions-select-box ' + (openSelect ? '' : 'none')}>\n                  <div\n                    className=\"board-actions-select-item flex-between\"\n                    onClick={() => props.closeSelect(props?.boardSelect, props?.postsData?.board)}\n                  >\n                    {props?.boardSelect}\n                    <img src={require('images/club/arrow-bottom.png')} alt=\"\" />\n                  </div>\n                  {props?.boardGroups?.data.map((boardGroupsItem, index) => {\n                    return (\n                      <div key={index}>\n                        <div className=\"board-actions-select-boardGroup\">{boardGroupsItem?.title}</div>\n                        {boardGroupsItem?.boards.map((boardItem, index) => {\n                          return (\n                            <div\n                              className=\"board-actions-select-item\"\n                              key={index}\n                              onClick={() => closeSelect(boardItem.title, boardItem.id)}\n                            >\n                              {boardItem.title}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    );\n                  })}\n                </div>\n                <div className=\"board-actions-count flex-center\">\n                  <div onClick={() => props.postsCreate('temp')}>Save as draft</div> <div className=\"bar\"></div>\n                  <div onClick={() => setTempPopupOpen(!tempPopupOpen)}>{props.posts?.data?.length || 0}</div>\n                </div>\n                <TempPopup\n                  open={tempPopupOpen}\n                  setOpen={() => setTempPopupOpen()}\n                  tempAllDetele={props?.tempAllDetele}\n                  tempSelectDetele={props?.tempSelectDetele}\n                  posts={props?.posts}\n                />\n              </>\n            )}\n            <Button label={'Post'} size=\"m\" onClick={() => props.postsCreate()} />\n          </div>\n        </div>\n        <div className=\"board\">\n          <div className=\"board-input\">\n            <input\n              placeholder=\"Please enter a title\"\n              value={props.postsData.title || ''}\n              onChange={(e) => props.setPostsData({ ...props.postsData, title: e.target.value })}\n            />\n          </div>\n          <div className=\"jodit-tobar\">\n            <div className=\"editer-icon\">\n              <img src={require('images/editor/icon-emoticon.png')} alt=\"\" />\n            </div>\n            <div className=\"editer-icon\">\n              <img src={require('images/editor/icon-image.png')} alt=\"\" />\n            </div>\n            <div className=\"editer-icon\">\n              <img src={require('images/editor/icon-gif.png')} alt=\"\" />\n            </div>\n            <div className=\"editer-icon\">\n              <img src={require('images/editor/icon-video.png')} alt=\"\" />\n            </div>\n            <div className=\"editer-icon\">\n              <img src={require('images/editor/icon-file.png')} alt=\"\" />\n            </div>\n          </div>\n          <JoditEditor\n            ref={editor}\n            value={props.postsData.content}\n            config={config}\n            tabIndex={1} // tabIndex of textarea\n            onBlur={(newContent) => props.setPostsData({ ...props.postsData, content: newContent })} // preferred to use only this option to update the content for performance reasons\n          />\n          {props.type === 'club' && (\n            <>\n              <div className=\"board-tag\">\n                <div className=\"board-tag-item flex-center\">\n                  {props.tagList.map((tagItem, index) => {\n                    return (\n                      <div key={index}>\n                        <div\n                          style={{ display: props.tagEditId === tagItem.tag ? 'none' : 'inline' }}\n                          className=\"board-tag-item-list flex-center\"\n                          onClick={() => props.tagEditer(tagItem)}\n                        >\n                          # {tagItem.title}\n                          <img\n                            className=\"board-tag-close\"\n                            src={require('images/club/btn-close.png')}\n                            onClick={() => props.tagDelect(tagItem.tag)}\n                          />\n                        </div>\n                        <input\n                          className=\"tag-edit\"\n                          style={{ display: props.tagEditId === tagItem.tag ? 'flex' : 'none' }}\n                          placeholder=\"#Tag\"\n                          maxLength={20}\n                          onKeyPress={(e) => props.tagEditKeyUP(e, tagItem.tag)}\n                          // onBlur={(e) => tagKeyBlur(e)}\n                          value={props.tagEditValue}\n                          onChange={(e) => props.setTagEditValue(e.target.value)}\n                        />\n                      </div>\n                    );\n                  })}\n                  {props.tagList.length < 10 && (\n                    <input\n                      maxLength={20}\n                      className=\"tag-input\"\n                      placeholder=\"#Tag\"\n                      onKeyPress={(e) => props.tagKeyUP(e)}\n                      // onBlur={(e) => tagKeyBlur(e)}\n                      value={props.tagVale}\n                      onChange={(e) => props.setTagVale(e.target.value)}\n                    />\n                  )}\n                </div>\n              </div>\n              <div className=\"board-allow\">\n                <div>\n                  Allow Comments\n                  <ToggleBtn id=\"Comments\" onChange={props.onCheckedElement} />\n                </div>\n                <div>\n                  Allow Sharing\n                  <ToggleBtn id=\"Sharing\" onChange={props.onCheckedElement} />\n                </div>\n                <div>\n                  Allow Search\n                  <ToggleBtn id=\"Search\" onChange={props.onCheckedElement} />\n                </div>\n                <div onClick={() => props.onClickElement('Notice')}>\n                  Register as a Notice\n                  <ToggleBtn\n                    id=\"Notice\"\n                    onChange={props.onCheckedElement}\n                    disabled={props.checkedList.indexOf('secret') > -1}\n                  />\n                </div>\n                <div onClick={() => props.onClickElement('event')}>\n                  Event Notice\n                  <ToggleBtn\n                    id=\"event\"\n                    onChange={props.onCheckedElement}\n                    disabled={props.checkedList.indexOf('Notice') > -1}\n                  />\n                </div>\n              </div>\n              <div className=\"board-allow\">\n                <div onClick={() => props.onClickElement('secret')}>\n                  secret post\n                  <ToggleBtn\n                    id=\"secret\"\n                    onChange={props.onCheckedElement}\n                    disabled={props.checkedList.indexOf('Notice') > -1}\n                  />\n                </div>\n                {props.checkedList.indexOf('secret') > -1 && (\n                  <div className=\"board-password\">\n                    <div className=\"board-password-input\">\n                      password\n                      <input\n                        value={props.postsData.password || ''}\n                        maxLength=\"4\"\n                        type=\"password\"\n                        onChange={(e) => onlyNumber(e)}\n                      />\n                    </div>\n                    <div className=\"remark\">*You can view posts by entering your password.</div>\n                  </div>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n      <AlertPopup content={props.popupContent} open={props.pwdPopupOpen} setOpen={() => props.setPwdPopupOpen(false)} />\n    </div>\n  );\n}\n\nexport default Writing;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'assets/scss/reset.scss';\nimport 'assets/scss/components.scss';\n\n/**\n * Primary UI component for user interaction\n */\nexport function Button({ primary, size, line, label, width, disabled, onClick, ...props }) {\n  const variant = line ? 'line' : 'contained';\n  return (\n    <div\n      type=\"button\"\n      disabled={disabled}\n      style={{ width: `${width}px` }}\n      className={[\n        'button-component',\n        `button-size-${size}`,\n        `button-${primary}`,\n        `button-${variant}`,\n        'flex-center'\n      ].join(' ')}\n      {...props}\n      onClick={() => onClick()}\n    >\n      {label}\n    </div>\n  );\n}\n\nButton.propTypes = {\n  primary: PropTypes.oneOf(['primary', 'secondary', 'point', 'success', 'warming', 'error', 'cancel']),\n  line: PropTypes.bool,\n  size: PropTypes.oneOf(['xl', 'l', 'm', 's']),\n  width: PropTypes.number,\n  label: PropTypes.any,\n  disabled: PropTypes.bool\n};\n\nButton.defaultProps = {\n  primary: 'primary',\n  line: false,\n  size: 'M',\n  width: 140,\n  label: 'Button',\n  disabled: false\n};\n","/* eslint-disable */\n\nimport React from 'react';\n\nimport 'assets/scss/club.scss';\nimport 'assets/scss/reset.scss';\n\nfunction ToggleBtn(props) {\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id={props.id}\n        className=\"toggleBtn\"\n        hidden\n        onChange={(event) => props.onChange(event.target.checked, props.id)}\n        disabled={props.disabled}\n      />\n      <label htmlFor={props.id} className=\"toggleSwitch\">\n        <span className=\"toggleButton\"></span>\n      </label>\n    </>\n  );\n}\n\nexport default ToggleBtn;\n"],"names":["props","className","style","display","open","content","label","size","onClick","setOpen","navigate","useNavigate","posts","data","length","confirm","tempAllDetele","map","tempItem","index","id","tempChange","title","dayjs","created","format","tempSelectDetele","src","require","alt","editor","useRef","useState","openSelect","setOpenSelect","tempPopupOpen","setTempPopupOpen","Jodit","jodit","e","on","stopPropagation","s","insertHTML","getData","replace","top","type","boardSelect","closeSelect","postsData","board","boardGroups","boardGroupsItem","boards","boardItem","text","setPostsData","setBoardSelect","postsCreate","placeholder","value","onChange","target","ref","config","readonly","height","padding","license","uploader","url","buttons","tabIndex","onBlur","newContent","tagList","tagItem","tagEditId","tag","tagEditer","tagDelect","maxLength","onKeyPress","tagEditKeyUP","tagEditValue","setTagEditValue","tagKeyUP","tagVale","setTagVale","ToggleBtn","onCheckedElement","onClickElement","disabled","checkedList","indexOf","password","onlyNumberRegular","onlyNumber","popupContent","pwdPopupOpen","setPwdPopupOpen","Button","primary","line","width","variant","join","defaultProps","hidden","event","checked","htmlFor"],"sourceRoot":""}