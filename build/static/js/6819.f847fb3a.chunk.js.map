{"version":3,"file":"static/js/6819.f847fb3a.chunk.js","mappings":"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","sources":["components/idist/Button.js","components/idist/Loader.js","components/idist/popup/SharePopup.js","views/Club/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'assets/scss/reset.scss';\nimport 'assets/scss/components.scss';\n\n/**\n * Primary UI component for user interaction\n */\nexport function Button({ primary, size, line, label, width, disabled, onClick, ...props }) {\n  const variant = line ? 'line' : 'contained';\n  return (\n    <div\n      type=\"button\"\n      disabled={disabled}\n      style={{ width: `${width}px` }}\n      className={[\n        'button-component',\n        `button-size-${size}`,\n        `button-${primary}`,\n        `button-${variant}`,\n        'flex-center'\n      ].join(' ')}\n      {...props}\n      onClick={() => onClick()}\n    >\n      {label}\n    </div>\n  );\n}\n\nButton.propTypes = {\n  primary: PropTypes.oneOf(['primary', 'secondary', 'point', 'success', 'warming', 'error', 'cancel']),\n  line: PropTypes.bool,\n  size: PropTypes.oneOf(['xl', 'l', 'm', 's']),\n  width: PropTypes.number,\n  label: PropTypes.any,\n  disabled: PropTypes.bool\n};\n\nButton.defaultProps = {\n  primary: 'primary',\n  line: false,\n  size: 'M',\n  width: 140,\n  label: 'Button',\n  disabled: false\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'assets/scss/reset.scss';\nimport 'assets/scss/components.scss';\n\n/**\n * Primary UI component for user interaction\n */\nexport function Loader() {\n  return (\n    <div className=\"loader\">\n      <div className=\"dots\" />\n      <div className=\"dots\" />\n      <div className=\"dots\" />\n      <div className=\"dots\" />\n      <div className=\"dots\" />\n      <div className=\"loader-text flex-center\">Loading...</div>\n    </div>\n  );\n}\n\nLoader.propTypes = {};\n\nLoader.defaultProps = {};\n","/* eslint-disable */\n\nimport React from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  TwitterShareButton,\n  TelegramShareButton,\n  TelegramIcon\n} from 'react-share';\n\nimport 'assets/scss/popup.scss';\nimport 'assets/scss/reset.scss';\nimport { Button } from 'components/idist/Button';\n\nfunction SharePopup(props) {\n  const currentUrl = window.location.href;\n\n  return (\n    <div className=\"popup-shadow flex-center\" style={{ display: props.open ? 'flex' : 'none' }}>\n      <div className=\"sharepopup relative\">\n        <div className=\"closebtn\" onClick={() => props.setOpen(!props.open)}>\n          <img src={require(`images/club/btn-close.png`)} alt=\"\" />\n        </div>\n        <div className=\"share-btn flex-center\">\n          <FacebookShareButton url={currentUrl} onClick={() => props.sharefuc('facebook')}>\n            <FacebookIcon size={80} round={true} borderRadius={24}></FacebookIcon>\n          </FacebookShareButton>\n          <TwitterShareButton url={currentUrl} onClick={() => props.sharefuc('twitter')}>\n            <TwitterIcon size={80} round={true} borderRadius={24}></TwitterIcon>\n          </TwitterShareButton>\n          <TelegramShareButton url={currentUrl} onClick={() => props.sharefuc('telegram')}>\n            <TelegramIcon size={80} round={true} borderRadius={24}></TelegramIcon>\n          </TelegramShareButton>\n        </div>\n        <div className=\"share-link flex-center\">\n          Link <input type={'text'} value={currentUrl} disabled={'disabled'} />\n          <CopyToClipboard text={currentUrl}>\n            <Button size={'s'} label={'Copy'} width={120} />\n          </CopyToClipboard>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SharePopup;\n","/* eslint-disable */\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getClubInit, postClubPinInit, postClubUnpinInit, postClubShareInit } from 'redux/idistStore/clubSlice';\nimport { useParams } from 'react-router';\nimport { useNavigate, Outlet } from 'react-router-dom';\n\nimport Header from 'components/common/header/Header';\nimport Footer from 'components/common/footer/Footer';\nimport { Loader } from 'components/idist/Loader';\nimport SharePopup from 'components/idist/popup/SharePopup';\n\nimport 'assets/scss/club.scss';\nimport 'assets/scss/reset.scss';\n\nfunction Club() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { clubId, error } = useSelector((state) => state.club);\n  const pamename = window.location.pathname;\n  const { id } = useParams();\n  const [openPopup, setOpenPopup] = useState(false);\n  const [boardGroup, setBoradGroup] = useState('home');\n  const [ArrBorad, setArrBorad] = useState([]);\n  const [openBorad, setOpenBorad] = useState(false);\n  const board = localStorage.getItem('board');\n  const board_group = localStorage.getItem('boardGroup');\n\n  useEffect(() => {\n    dispatch(getClubInit({ id: id }));\n  }, []);\n\n  const seachFunc = () => {\n    navigate('/clubs/search/all');\n  };\n\n  useEffect(() => {\n    if (error.indexOf(403) > -1) {\n      alert('로그인을 한 후 이용해주세요');\n      navigate('/clubs');\n    }\n  }, [error]);\n\n  useEffect(() => {\n    if (board !== null && board !== '') {\n      setOpenBorad(true);\n    }\n  }, [board]);\n\n  useEffect(() => {\n    if (board_group !== null && board_group !== '' && clubId.data !== undefined) {\n      clubId.data.board_groups.map((item, index) => {\n        if (item.title === board_group) {\n          console.log('item', item);\n          setArrBorad([...item.boards]);\n        }\n      });\n    }\n  }, [board_group, clubId.data]);\n\n  useEffect(() => {\n    if (pamename.indexOf('home') > -1) {\n      localStorage.setItem('boardGroup', 'home');\n      setOpenBorad(false);\n    }\n  }, [pamename]);\n\n  const handleClickPin = (pin) => {\n    if (pin) {\n      dispatch(postClubUnpinInit({ id: id, actionList: [{ type: getClubInit.type, payload: { id: id } }] }));\n    } else {\n      dispatch(postClubPinInit({ id: id, actionList: [{ type: getClubInit.type, payload: { id: id } }] }));\n    }\n  };\n\n  const clickboardGroup = (boards, name) => {\n    if (name === 'home') {\n      setOpenBorad(false);\n      localStorage.setItem('boardGroup', name);\n      localStorage.setItem('board', '');\n      navigate(`/club/${id}/home`);\n      return false;\n    }\n\n    if (name === boardGroup) {\n      setOpenBorad(!openBorad);\n    } else {\n      setOpenBorad(true);\n    }\n    setBoradGroup(name);\n    localStorage.setItem('boardGroup', name);\n    setArrBorad([...boards]);\n  };\n  const clickboard = (id, name) => {\n    navigate(`board/${id}`);\n    localStorage.setItem('board', name);\n  };\n  const handleClickShare = (link) => {\n    dispatch(postClubShareInit({ id: id, parameters: { link: link } }));\n  };\n\n  if (clubId.message !== 'ok')\n    return (\n      <div className=\"root-center\">\n        <Loader />\n      </div>\n    );\n  return (\n    <div id=\"root\">\n      <Header />\n\n      <div className=\"club\">\n        <div className=\"main\">\n          <div className=\"relative\">\n            <div className=\"club-banner relative\" style={{ backgroundImage: `url(${clubId.data.banner_image_url})` }}>\n              {/* <div className=\"club-tag\">\n                {clubId.data.tags.map((tag, index) => {\n                  return (\n                    <div className=\"club-tag-item\" key={index}>\n                      {tag.title}\n                    </div>\n                  );\n                })}\n              </div> */}\n            </div>\n            <div className=\"club-content flex-center\">\n              <div className=\"club-content-explan\">\n                <div className=\"club-content-info\">\n                  <div className=\"club-content-info-box\">\n                    <div className=\"club-content-info-number\">{clubId.data.member_count}</div>\n                    <div className=\"club-content-info-title\">Memeber</div>\n                  </div>\n                  <div className=\"club-content-info-box\">\n                    <div className=\"club-content-info-number\">{clubId.data.post_count}</div>\n                    <div className=\"club-content-info-title\">Post</div>\n                  </div>\n                  <div className=\"club-content-info-box\">\n                    <div className=\"club-content-info-number\">{clubId.data.pin_count}</div>\n                    <div className=\"club-content-info-title\">Clubs</div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"club-info\">\n                <div className=\"club-content-title\">{clubId.data.title}</div>\n                <div className=\"club-content-description\">{clubId.data.description}</div>\n              </div>\n              <div className=\"club-icon-btn\">\n                <div className=\"item flex-center\" onClick={() => setOpenPopup(!openPopup)}>\n                  <img src={require(`images/club/rank.png`)} alt=\"\" />\n                </div>\n                <div className=\"item flex-center\" onClick={() => handleClickPin(clubId.data.is_pined)}>\n                  <img\n                    src={require(clubId.data.is_pined\n                      ? clubId.data.is_pined\n                        ? `images/club/club-bookmark.png`\n                        : `images/club/icon-bookmark-line.png`\n                      : `images/club/icon-bookmark-line.png`)}\n                    alt=\"\"\n                  />\n                </div>\n              </div>\n              <div className=\"club-profile\">\n                <img\n                  src={\n                    clubId.data.profile_image_url\n                      ? clubId.data.profile_image_url\n                      : require('images/main/temporary-profile.png')\n                  }\n                  alt=\"\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"club-boardGroup\">\n            <div\n              className={'club-boardGroup-item ' + (board_group === 'home' ? 'active' : '')}\n              onClick={() => clickboardGroup('', 'home')}\n              // onMouseOver={() => clickboardGroup('', 'home')}\n            >\n              Home\n            </div>\n            {clubId.data.board_groups.map((item, index) => {\n              return (\n                <div\n                  className={'club-boardGroup-item ' + ((board_group === item.title) & openBorad ? 'active' : '')}\n                  // onClick={() => clickboardGroup(item.boards, item.title)}\n                  onMouseOver={() => clickboardGroup(item.boards, item.title)}\n                  key={index}\n                >\n                  {item.title}\n                </div>\n              );\n            })}\n          </div>\n\n          <div className=\"club-board\" style={{ display: openBorad ? 'flex' : 'none' }}>\n            <div className=\"club-board-list\">\n              {ArrBorad.map((boards, index) => {\n                return (\n                  <div\n                    className={'club-board-list-item ' + (board == boards.title ? 'active' : '')}\n                    key={index}\n                    onClick={() => clickboard(boards.id, boards.title)}\n                  >\n                    {boards.title}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          <Outlet context={clubId} />\n        </div>\n      </div>\n      <Footer />\n      <SharePopup open={openPopup} setOpen={setOpenPopup} sharefuc={handleClickShare} />\n    </div>\n  );\n}\n\nexport default Club;\n"],"names":["Button","primary","size","line","label","width","disabled","onClick","props","variant","type","style","className","join","defaultProps","Loader","currentUrl","window","location","href","display","open","setOpen","src","require","alt","url","sharefuc","round","borderRadius","value","CopyToClipboard","text","dispatch","useDispatch","navigate","useNavigate","useSelector","state","club","clubId","error","pamename","pathname","id","useParams","useState","openPopup","setOpenPopup","boardGroup","setBoradGroup","ArrBorad","setArrBorad","openBorad","setOpenBorad","board","localStorage","getItem","board_group","useEffect","getClubInit","indexOf","alert","undefined","data","board_groups","map","item","index","title","console","log","boards","setItem","clickboardGroup","name","message","backgroundImage","banner_image_url","member_count","post_count","pin_count","description","pin","is_pined","postClubUnpinInit","actionList","payload","postClubPinInit","profile_image_url","onMouseOver","clickboard","context","link","postClubShareInit","parameters"],"sourceRoot":""}