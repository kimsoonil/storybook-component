{"version":3,"file":"static/js/7405.c677561a.chunk.js","mappings":"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","sources":["components/idist/Club/HotPosts.js","views/Club/Board/BoardContent.js","views/Club/Board/index.js"],"sourcesContent":["/* eslint-disable */\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Loader } from 'components/idist/Loader';\nimport { getPostsInit } from 'redux/idistStore/postsSlice';\n\nimport 'assets/scss/club.scss';\nimport 'assets/scss/reset.scss';\nimport { dateCalculation } from 'utils/dateCalculation';\n\nfunction HotPosts(props) {\n  const dispatch = useDispatch();\n  const { posts } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    dispatch(getPostsInit({ parameters: '' }));\n  }, []);\n\n  if (posts.message !== 'ok') {\n    return (\n      <div className=\"flex-center\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"club-home-content hotPosts\">\n      <div className=\"flex-between\">\n        <div className=\"side-box-title\">Hot Posts</div>\n        <div className=\"see-all\">See all</div>\n      </div>\n      <div className=\"hotPosts-content\">\n        {posts.data.map((postsItem, index) => {\n          if (index < 6)\n            return (\n              <div className=\"hotPosts-content-list flex-between\" key={index}>\n                <div className=\"\">\n                  <div className=\"hotPosts-content-name\">{postsItem.profile.user.username}</div>\n                  <div className=\"hotPosts-content-title\">{postsItem.title}</div>\n                  <div className=\"hotPosts-content-info\">\n                    <img src={require('images/main/icon-view.png')} />\n                    {postsItem.view_count} {dateCalculation(postsItem.created)}\n                  </div>\n                </div>\n                <div>{postsItem?.thumbnail_image_url ? <img src={postsItem.thumbnail_image_url} /> : <div></div>}</div>\n              </div>\n            );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default HotPosts;\n","/* eslint-disable */\n\nimport React, { useState, useEffect } from 'react';\nimport BoardAlbum from 'components/idist/Club/BoardAlbum';\nimport BoardList from 'components/idist/Club/BoardList';\nimport BoardCard from 'components/idist/Club/BoardCard';\nimport { Fliter } from 'components/idist/Fliter';\nimport ToggleBtn from 'components/idist/ToggleBtn';\n\nfunction BoardContent(props) {\n  const [openFilter, setOpenFilter] = useState(false);\n\n  return (\n    <div className=\"club-home-content \">\n      <div className=\"flex-between\">\n        <div>\n          <div className=\"club-home-title\">{props.board?.data?.title}</div>\n          <div className=\"club-home-description\">{props.board?.data?.description}</div>\n        </div>\n        <div className=\"flex-center  relative\">\n          <input type=\"text\" className=\"post-fliter\" />\n          <div className=\"fliter-icon \" onClick={() => setOpenFilter(!openFilter)}>\n            <img src={require(`images/club/icon-fliter.png`)} alt=\"\" />\n          </div>\n          <div className=\"fliter-position\" style={{ display: openFilter ? 'flex' : 'none' }}>\n            <Fliter doneFuc={() => setOpenFilter(!openFilter)} />\n          </div>\n        </div>\n      </div>\n      <div className=\"flex-between\">\n        <div className=\"club-list-tag\">\n          <div className=\"list-filter flex-center\">\n            <div className=\"flex-center active\">Hot</div>\n            <div className=\"flex-center\">Popular</div>\n            <div className=\"flex-center\">New</div>\n          </div>\n        </div>\n        <div className=\"flex-center\">\n          <div className=\"feed\">\n            My feed\n            <ToggleBtn id={'myFeed'} />\n          </div>\n\n          <div className=\"board-state\">\n            <div\n              className={'album ' + (props.postsState === 'ALBUM_TYPE' && 'active')}\n              onClick={() => {\n                props.setPostsState('ALBUM_TYPE');\n              }}\n            ></div>\n            <div\n              className={'list ' + (props.postsState === 'LIST_TYPE' && 'active')}\n              onClick={() => {\n                props.setPostsState('LIST_TYPE');\n              }}\n            ></div>\n            <div\n              className={'card ' + (props.postsState === 'CARD_TYPE' && 'active')}\n              onClick={() => {\n                props.setPostsState('CARD_TYPE');\n              }}\n            ></div>\n          </div>\n        </div>\n      </div>\n\n      {props.postsState === 'ALBUM_TYPE' && <BoardAlbum DataList={props.postsList} posts={props.posts} />}\n      {props.postsState === 'LIST_TYPE' && <BoardList DataList={props.postsList} posts={props.posts} />}\n      {props.postsState === 'CARD_TYPE' && <BoardCard DataList={props.postsList} posts={props.posts} />}\n    </div>\n  );\n}\n\nexport default BoardContent;\n","/* eslint-disable */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBoardInit, getBoardPostsInit, getMoreBoardPostsInit } from 'redux/idistStore/boardSlice';\nimport { useParams } from 'react-router';\nimport { useOutletContext, useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components/idist/Loader';\nimport Profile from 'components/idist/Profile';\nimport HotPosts from 'components/idist/Club/HotPosts';\nimport BoardContent from './BoardContent';\nimport SideMember from 'components/idist/Club/SideMember';\nimport 'assets/scss/club.scss';\nimport 'assets/scss/reset.scss';\n\nfunction Board(props) {\n  const [postsState, setPostsState] = useState('LIST_TYPE');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const dispatch = useDispatch();\n  const { board, posts, postsList } = useSelector((state) => state.board);\n  const { id, boardId } = useParams();\n  const clubId = useOutletContext();\n  const search = searchParams.get('search');\n  const [isBottom, setIsBottom] = useState(false);\n  const parameters = {\n    search: search,\n    page_size: 20\n  };\n\n  useEffect(() => {\n    if (searchParams.get('search') !== null) {\n      parameter.search = searchParams.get('search');\n    }\n    dispatch(getBoardPostsInit({ id: boardId, parameters: parameters }));\n    dispatch(getBoardInit({ id: boardId }));\n  }, [boardId]);\n\n  useEffect(() => {\n    setPostsState(board?.data?.view_mode);\n  }, [board]);\n\n  useEffect(() => {\n    if (isBottom) {\n      dispatch(getMoreBoardPostsInit({ id: boardId, parameters: parameters }));\n\n      setIsBottom(false);\n    }\n  }, [isBottom, postsList, dispatch, setIsBottom]);\n\n  function handleUserScroll() {\n    const scrollTop = document.documentElement.scrollTop;\n    const scrollHeight = document.documentElement.scrollHeight;\n\n    if (scrollTop + window.innerHeight + 50 >= scrollHeight) {\n      setIsBottom(true);\n    }\n  }\n\n  useEffect(() => {\n    if (posts.count === postsList.length) {\n      return () => window.removeEventListener('scroll', handleUserScroll);\n    }\n    window.addEventListener('scroll', handleUserScroll);\n    return () => window.removeEventListener('scroll', handleUserScroll);\n  });\n\n  if (posts.message !== 'ok' && board.message !== 'ok') {\n    return (\n      <div className=\"flex-center\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"club-home container\">\n      <div className=\"item\">\n        <BoardContent\n          board={board}\n          postsState={postsState}\n          setPostsState={setPostsState}\n          posts={posts}\n          postsList={postsList}\n        />\n      </div>\n      <div className=\"item\">\n        {clubId.data.profile ? <Profile userData={clubId.data.profile} type={'club'} /> : <Profile type={'logout'} />}\n        <div>\n          <HotPosts />\n        </div>\n        <SideMember />\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"],"names":["props","dispatch","useDispatch","posts","useSelector","state","post","useEffect","getPostsInit","parameters","message","className","data","map","postsItem","index","profile","user","username","title","src","require","view_count","dateCalculation","created","thumbnail_image_url","useState","openFilter","setOpenFilter","board","description","type","onClick","alt","style","display","Fliter","doneFuc","ToggleBtn","id","postsState","setPostsState","BoardAlbum","DataList","postsList","BoardList","BoardCard","useSearchParams","searchParams","useParams","boardId","clubId","useOutletContext","search","get","isBottom","setIsBottom","page_size","handleUserScroll","scrollTop","document","documentElement","scrollHeight","window","innerHeight","parameter","getBoardPostsInit","getBoardInit","view_mode","getMoreBoardPostsInit","count","length","addEventListener","removeEventListener","Loader","Profile","userData","HotPosts","SideMember"],"sourceRoot":""}