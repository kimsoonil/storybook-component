{"version":3,"file":"static/js/8442.1d76a141.chunk.js","mappings":"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","sources":["components/idist/Loader.js","views/Club/PostWriting.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'assets/scss/reset.scss';\nimport 'assets/scss/components.scss';\n\n/**\n * Primary UI component for user interaction\n */\nexport function Loader() {\n  return (\n    <div className=\"loader\">\n      <div className=\"dots\" />\n      <div className=\"dots\" />\n      <div className=\"dots\" />\n      <div className=\"dots\" />\n      <div className=\"dots\" />\n      <div className=\"loader-text flex-center\">Loading...</div>\n    </div>\n  );\n}\n\nLoader.propTypes = {};\n\nLoader.defaultProps = {};\n","/* eslint-disable */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport JoditEditor, { Jodit } from 'jodit-pro-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getClubBoardGroupsInit, deleteClubTemporaryInit } from 'redux/idistStore/clubSlice';\nimport { getPostsInit, deletePostTemporaryInit, getPostInit, patchPostInit } from 'redux/idistStore/postsSlice';\nimport { postBoardPostInit, boardReset } from 'redux/idistStore/boardSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { Loader } from 'components/idist/Loader';\nimport Writing from 'components/common/Writing';\nimport 'assets/scss/club.scss';\nimport 'assets/scss/jodit.scss';\n\nfunction PostWriting(props) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { boardGroups } = useSelector((state) => state.club);\n  const boardState = useSelector((state) => state.board);\n  const { posts, post } = useSelector((state) => state.post);\n  const { id, postId } = useParams();\n  const [checkedList, setCheckedList] = useState([]);\n  const [tagList, setTagList] = useState([]);\n  const [tagVale, setTagVale] = useState('');\n  const [tagEditId, setTagEditId] = useState('');\n  const [tagEditValue, setTagEditValue] = useState('');\n  const [pwdPopupOpen, setPwdPopupOpen] = useState(false);\n  const [popupContent, setPopupContent] = useState('');\n  const [boardSelect, setBoardSelect] = useState('Please select a Board');\n  const [postsData, setPostsData] = useState({\n    board: null,\n    title: '',\n    content: '',\n    tags: [],\n    is_temporary: false,\n    is_secret: false,\n    password: null,\n    is_notice: false,\n    is_event: false,\n    is_search: false,\n    is_share: false,\n    is_comment: false\n  });\n\n  useEffect(() => {\n    dispatch(boardReset());\n    dispatch(getClubBoardGroupsInit({ id: id }));\n    dispatch(getPostsInit({ parameters: { is_temporary: true } }));\n  }, []);\n\n  useEffect(() => {\n    if (postId !== undefined) {\n      dispatch(getPostInit({ id: postId }));\n    }\n  }, [postId]);\n\n  useEffect(() => {\n    if (boardState.post.data) {\n      if (!boardState.post.data.is_temporary)\n        navigate(`/club/${boardState.post.data.club}/post/${boardState.post.data.id}`);\n    }\n  }, [boardState.post]);\n\n  useEffect(() => {\n    if (post.message === 'ok' && postId !== undefined) {\n      setTagList([...post.data.tags.map((item) => item)]);\n\n      setPostsData({\n        board: post.data.board,\n        title: post.data.title,\n        content: post.data.content,\n        tags: [...post.data.tags.map((item) => item.title)],\n        is_temporary: post.data.is_temporary,\n        is_secret: post.data.is_secret,\n        password: post.data.password,\n        is_notice: post.data.is_notice,\n        is_event: post.data.is_event,\n        is_search: post.data.is_search,\n        is_share: post.data.is_share,\n        is_comment: post.data.is_comment\n      });\n      setBoardSelect(post.data.board_title);\n    }\n  }, [post]);\n\n  const config = {\n    readonly: false,\n    height: 600,\n    padding: 20,\n    placeholder: 'Please leave a comment that you want to share.',\n    license: '63DFM-3/H53-ATPPJ-RGIRZ',\n    uploader: {\n      url: 'https://xdsoft.net/jodit/finder/?action=fileUpload'\n    },\n    buttons: [\n      'undo',\n      'redo',\n      '|',\n      'brush',\n      'bold',\n      'italic',\n      '|',\n      'left',\n      'center',\n      'right',\n      '|',\n      'ol',\n      'ul',\n      '|',\n      'table'\n    ]\n  };\n  function preparePaste(jodit) {\n    jodit.e.on(\n      'emoji',\n      (e) => {\n        if (confirm('Change pasted content?')) {\n          jodit.e.stopPropagation('paste');\n          jodit.s.insertHTML(\n            Jodit.modules.Helpers.getDataTransfer(e).getData(Jodit.constants.TEXT_HTML).replace(/a/g, 'b')\n          );\n          return false;\n        }\n      },\n      { top: true }\n    );\n  }\n  Jodit.plugins.add('preparePaste', preparePaste);\n\n  const closeSelect = (text, id) => {\n    // setBoardId(id);\n    setPostsData({ ...postsData, board: id });\n    setBoardSelect(text);\n    setOpenSelect(false);\n  };\n\n  const onCheckedElement = (checked, id) => {\n    switch (id) {\n      case 'Comments':\n        setPostsData({ ...postsData, is_comment: true });\n        break;\n      case 'Sharing':\n        setPostsData({ ...postsData, is_share: true });\n        break;\n      case 'Notice':\n        setPostsData({ ...postsData, is_notice: true });\n        break;\n      case 'Search':\n        setPostsData({ ...postsData, is_search: true });\n        break;\n      case 'Search':\n        setPostsData({ ...postsData, is_event: true });\n        break;\n      case 'secret':\n        setPostsData({ ...postsData, is_secret: true });\n        break;\n      default:\n    }\n    if (checked) {\n      setCheckedList([...checkedList, id]);\n    } else if (!checked) {\n      setCheckedList(checkedList.filter((el) => el !== id));\n    }\n  };\n  const onClickElement = (id) => {\n    if (id === 'Notice') {\n      if (checkedList.indexOf('secret') > -1) {\n        setPwdPopupOpen(true);\n        setPopupContent('Notice posts cannot be set as secret posts.');\n      }\n    }\n    if (id === 'secret') {\n      if (checkedList.indexOf('Notice') > -1) {\n        setPwdPopupOpen(true);\n        setPopupContent('You cannot set a notice for a secret message.');\n      }\n    }\n    if (id === 'event') {\n      if (checkedList.indexOf('Notice') > -1) {\n        setPwdPopupOpen(true);\n        setPopupContent('Event posts cannot be set as Notice posts.');\n      } else if (checkedList.indexOf('secret') > -1) {\n        setPwdPopupOpen(true);\n        setPopupContent('Event posts cannot be set as secret posts');\n      }\n    }\n  };\n\n  const tagKeyUP = (e) => {\n    const tagitem = {\n      tag: tagList.length + 1,\n      title: tagVale\n    };\n\n    if (e.key === 'Enter') {\n      setTagList([...tagList, tagitem]);\n      setPostsData({ ...postsData, tags: [...postsData.tags, tagitem.title] });\n      setTagVale('');\n    }\n  };\n  const tagKeyBlur = (e) => {\n    setTagList([...tagList, e.target.value]);\n    setTagVale('');\n  };\n  const tagDelect = (item) => {\n    setTagList(tagList.filter((element) => element.tag !== item));\n  };\n  const tagEditKeyUP = (e, id) => {\n    if (e.key === 'Enter') {\n      const findIndex = tagList.findIndex((element) => element.tag == id);\n      let copyArray = [...tagList];\n      if (findIndex != -1) {\n        copyArray[findIndex] = { ...copyArray[findIndex], title: e.target.value };\n      }\n      setTagList(copyArray);\n      setTagEditId('');\n      setTagEditValue('');\n    }\n  };\n  const tagEditer = (item) => {\n    setTagEditId(item.tag);\n    setTagEditValue(item.title);\n  };\n  // 게시글 생성\n  const postsCreate = (temp) => {\n    console.log('postId', postId);\n    if (temp === 'temp') {\n      console.log(11);\n      setPostsData({ ...postsData, is_temporary: true });\n    } else {\n      if (postsData.title === '') {\n        setPwdPopupOpen(true);\n        setPopupContent('Please enter a title.');\n        return false;\n      }\n    }\n\n    if (postsData.is_secret) {\n      if (postsData.password.length < 4) {\n        alert('비밀번호 4자를 입력해주세요');\n        return false;\n      }\n    }\n    if (postsData.board === null) {\n      setPwdPopupOpen(true);\n      setPopupContent('Please select a bulletin board.');\n      return false;\n    }\n    if (postId !== undefined) {\n      dispatch(\n        patchPostInit({\n          id: postId,\n          parameters: postsData,\n          actionList: [{ type: getPostsInit.type, payload: { parameters: { is_temporary: true } } }]\n        })\n      );\n      setTimeout(() => {\n        navigate(`/club/${post.data.club}/post/${post.data.id}`);\n      }, 500);\n    } else {\n      dispatch(\n        postBoardPostInit({\n          id: id,\n          parameters: postsData,\n          actionList: [{ type: getPostsInit.type, payload: { parameters: { is_temporary: true } } }]\n        })\n      );\n    }\n  };\n  // const onlyNumber = (e) => {\n  //   const { value } = e.target;\n\n  //   const onlyNumberRegular = value.replace(/[^0-9]/g, '');\n  //   setPostsData({ ...postsData, password: onlyNumberRegular });\n  // };\n\n  //TODO 임시글\n  const tempAllDetele = () => {\n    dispatch(\n      deleteClubTemporaryInit({\n        id: id,\n        actionList: [{ type: getPostsInit.type, payload: { parameters: 'is_temporary=true' } }]\n      })\n    );\n  };\n\n  const tempSelectDetele = (selectId) => {\n    dispatch(\n      deletePostTemporaryInit({\n        id: selectId,\n        actionList: [{ type: getPostsInit.type, payload: { parameters: 'is_temporary=true' } }]\n      })\n    );\n  };\n\n  if (boardGroups.message !== 'ok')\n    return (\n      <div className=\"flex-center\">\n        <Loader />\n      </div>\n    );\n  return (\n    <Writing\n      posts={posts}\n      type={'club'}\n      boardSelect={boardSelect}\n      closeSelect={closeSelect}\n      setBoardSelect={setBoardSelect}\n      boardGroups={boardGroups}\n      setPostsData={setPostsData}\n      onCheckedElement={onCheckedElement}\n      onClickElement={onClickElement}\n      postsData={postsData}\n      postsCreate={postsCreate}\n      setTagVale={setTagVale}\n      tagVale={tagVale}\n      tagList={tagList}\n      tagEditId={tagEditId}\n      tagKeyUP={tagKeyUP}\n      tagEditer={tagEditer}\n      tagEditKeyUP={tagEditKeyUP}\n      tagDelect={tagDelect}\n      setTagEditValue={setTagEditValue}\n      tagEditValue={tagEditValue}\n      tempAllDetele={tempAllDetele}\n      tempSelectDetele={tempSelectDetele}\n      checkedList={checkedList}\n      setPwdPopupOpen={setPwdPopupOpen}\n      pwdPopupOpen={pwdPopupOpen}\n      setPopupContent={setPopupContent}\n      popupContent={popupContent}\n      setCheckedList={setCheckedList}\n    />\n  );\n}\n\nexport default PostWriting;\n"],"names":["Loader","className","defaultProps","props","dispatch","useDispatch","navigate","useNavigate","boardGroups","useSelector","state","club","boardState","board","post","posts","useParams","id","postId","useState","checkedList","setCheckedList","tagList","setTagList","tagVale","setTagVale","tagEditId","setTagEditId","tagEditValue","setTagEditValue","pwdPopupOpen","setPwdPopupOpen","popupContent","setPopupContent","boardSelect","setBoardSelect","title","content","tags","is_temporary","is_secret","password","is_notice","is_event","is_search","is_share","is_comment","postsData","setPostsData","useEffect","boardReset","getClubBoardGroupsInit","getPostsInit","parameters","undefined","getPostInit","data","message","map","item","board_title","Jodit","jodit","e","on","confirm","stopPropagation","s","insertHTML","getData","replace","top","type","closeSelect","text","setOpenSelect","onCheckedElement","checked","filter","el","onClickElement","indexOf","postsCreate","temp","console","log","length","alert","patchPostInit","actionList","payload","setTimeout","postBoardPostInit","tagKeyUP","tagitem","tag","key","tagEditer","tagEditKeyUP","findIndex","element","copyArray","target","value","tagDelect","tempAllDetele","deleteClubTemporaryInit","tempSelectDetele","selectId","deletePostTemporaryInit"],"sourceRoot":""}